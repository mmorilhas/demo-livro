2024-10-28 00:07:56 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-10-28 00:07:56 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/login
2024-10-28 00:07:56 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2024-10-28 00:07:56 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured POST /auth/login
2024-10-28 00:07:56 [http-nio-8080-exec-2] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.controller.AuthController.login() com argumento[s] = [com.example.demo.controller.AuthController$AuthRequest@62b7d095]
2024-10-28 00:07:57 [http-nio-8080-exec-2] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com argumento[s] = [admin]
2024-10-28 00:07:57 [http-nio-8080-exec-2] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.repository.UsuarioRepository.findByUsername() com argumento[s] = [admin]
2024-10-28 00:07:57 [http-nio-8080-exec-2] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.repository.UsuarioRepository.findByUsername() com resultado = Optional[com.example.demo.model.Usuario@267467f5]
2024-10-28 00:07:57 [http-nio-8080-exec-2] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com resultado = com.example.demo.model.Usuario@267467f5
2024-10-28 00:07:57 [http-nio-8080-exec-2] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2024-10-28 00:07:57 [http-nio-8080-exec-2] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.repository.UsuarioRepository.findByUsername() com argumento[s] = [admin]
2024-10-28 00:07:57 [http-nio-8080-exec-2] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.repository.UsuarioRepository.findByUsername() com resultado = Optional[com.example.demo.model.Usuario@267467f5]
2024-10-28 00:07:57 [http-nio-8080-exec-2] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.controller.AuthController.login() com resultado = <200 OK OK,com.example.demo.controller.AuthController$AuthResponse@4f18013d,[]>
2024-10-28 00:08:08 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /graphiql?path=/graphql
2024-10-28 00:08:08 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2024-10-28 00:08:08 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /graphiql?path=/graphql
2024-10-28 00:08:08 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing POST /graphql
2024-10-28 00:08:08 [http-nio-8080-exec-4] WARN  c.e.d.s.JwtAuthenticationFilter - Cabeçalho Authorization não encontrado ou não começa com Bearer
2024-10-28 00:08:08 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2024-10-28 00:08:08 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing POST /error
2024-10-28 00:08:08 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2024-10-28 00:08:09 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /favicon.ico
2024-10-28 00:08:09 [http-nio-8080-exec-1] WARN  c.e.d.s.JwtAuthenticationFilter - Cabeçalho Authorization não encontrado ou não começa com Bearer
2024-10-28 00:08:09 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2024-10-28 00:08:09 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2024-10-28 00:08:09 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2024-10-28 00:08:32 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing POST /graphql
2024-10-28 00:08:32 [http-nio-8080-exec-3] WARN  c.e.d.s.JwtAuthenticationFilter - Cabeçalho Authorization não encontrado ou não começa com Bearer
2024-10-28 00:08:32 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2024-10-28 00:08:32 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing POST /error
2024-10-28 00:08:32 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2024-10-28 00:08:36 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing POST /graphql
2024-10-28 00:08:36 [http-nio-8080-exec-7] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com argumento[s] = [admin]
2024-10-28 00:08:36 [http-nio-8080-exec-7] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.repository.UsuarioRepository.findByUsername() com argumento[s] = [admin]
2024-10-28 00:08:36 [http-nio-8080-exec-7] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.repository.UsuarioRepository.findByUsername() com resultado = Optional[com.example.demo.model.Usuario@3228cab]
2024-10-28 00:08:36 [http-nio-8080-exec-7] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com resultado = com.example.demo.model.Usuario@3228cab
2024-10-28 00:08:36 [http-nio-8080-exec-7] INFO  c.e.d.s.JwtAuthenticationFilter - Usuário autenticado: admin
2024-10-28 00:08:36 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured POST /graphql
2024-10-28 00:08:36 [http-nio-8080-exec-7] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.controller.LivroGraphQLController.listarLivros() com argumento[s] = []
2024-10-28 00:08:36 [http-nio-8080-exec-7] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.LivroService.listarTodos() com argumento[s] = []
2024-10-28 00:08:36 [http-nio-8080-exec-7] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: org.springframework.data.repository.ListCrudRepository.findAll() com argumento[s] = []
2024-10-28 00:08:36 [http-nio-8080-exec-7] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: org.springframework.data.repository.ListCrudRepository.findAll() com resultado = [com.example.demo.model.Livro@373af232, com.example.demo.model.Livro@1741ec44]
2024-10-28 00:08:36 [http-nio-8080-exec-7] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.LivroService.listarTodos() com resultado = [com.example.demo.model.Livro@373af232, com.example.demo.model.Livro@1741ec44]
2024-10-28 00:08:36 [http-nio-8080-exec-7] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.controller.LivroGraphQLController.listarLivros() com resultado = [com.example.demo.model.Livro@373af232, com.example.demo.model.Livro@1741ec44]
2024-10-28 00:48:36 [main] INFO  c.example.demo.DemoApplicationTests - Starting DemoApplicationTests using Java 21.0.2 with PID 8592 (started by michelle in C:\dev\workspace\eclipse-2023\demo-livro)
2024-10-28 00:48:36 [main] DEBUG c.example.demo.DemoApplicationTests - Running with Spring Boot v3.3.4, Spring v6.1.13
2024-10-28 00:48:36 [main] INFO  c.example.demo.DemoApplicationTests - No active profile set, falling back to 1 default profile: "default"
2024-10-28 00:48:38 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-10-28 00:48:39 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final
2024-10-28 00:48:39 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-10-28 00:48:39 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-10-28 00:48:39 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@24b3f778
2024-10-28 00:48:39 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-10-28 00:48:41 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-10-28 00:48:42 [main] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
2024-10-28 00:48:42 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-10-28 00:48:44 [main] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-10-28 00:48:44 [main] INFO  c.example.demo.DemoApplicationTests - Started DemoApplicationTests in 8.337 seconds (process running for 9.832)
2024-10-28 00:48:45 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-10-28 00:48:45 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-10-28 00:50:32 [main] INFO  com.example.demo.DemoApplication - Starting DemoApplication using Java 21.0.2 with PID 23480 (C:\dev\workspace\eclipse-2023\demo-livro\target\classes started by michelle in C:\dev\workspace\eclipse-2023\demo-livro)
2024-10-28 00:50:32 [main] DEBUG com.example.demo.DemoApplication - Running with Spring Boot v3.3.4, Spring v6.1.13
2024-10-28 00:50:32 [main] INFO  com.example.demo.DemoApplication - No active profile set, falling back to 1 default profile: "default"
2024-10-28 00:50:34 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-10-28 00:50:34 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.30]
2024-10-28 00:50:34 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-10-28 00:50:35 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-10-28 00:50:35 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final
2024-10-28 00:50:35 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-10-28 00:50:35 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-10-28 00:50:36 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@76134b9b
2024-10-28 00:50:36 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-10-28 00:50:37 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-10-28 00:50:38 [main] DEBUG c.e.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2024-10-28 00:50:38 [main] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
2024-10-28 00:50:38 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-10-28 00:50:40 [main] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-10-28 00:50:40 [main] INFO  com.example.demo.DemoApplication - Started DemoApplication in 9.012 seconds (process running for 9.433)
2024-10-28 00:52:25 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-10-28 00:52:26 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/login
2024-10-28 00:52:26 [http-nio-8080-exec-1] WARN  c.e.d.s.JwtAuthenticationFilter - Cabeçalho Authorization não encontrado ou não começa com Bearer
2024-10-28 00:52:26 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2024-10-28 00:52:26 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured POST /auth/login
2024-10-28 00:52:26 [http-nio-8080-exec-1] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.controller.AuthController.login() com argumento[s] = [com.example.demo.controller.AuthController$AuthRequest@4403e404]
2024-10-28 00:52:26 [http-nio-8080-exec-1] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com argumento[s] = [admin]
2024-10-28 00:52:26 [http-nio-8080-exec-1] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.repository.UsuarioRepository.findByUsername() com argumento[s] = [admin]
2024-10-28 00:52:26 [http-nio-8080-exec-1] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.repository.UsuarioRepository.findByUsername() com resultado = Optional[com.example.demo.model.Usuario@51c569ea]
2024-10-28 00:52:26 [http-nio-8080-exec-1] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com resultado = com.example.demo.model.Usuario@51c569ea
2024-10-28 00:52:26 [http-nio-8080-exec-1] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2024-10-28 00:52:26 [http-nio-8080-exec-1] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.repository.UsuarioRepository.findByUsername() com argumento[s] = [admin]
2024-10-28 00:52:26 [http-nio-8080-exec-1] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.repository.UsuarioRepository.findByUsername() com resultado = Optional[com.example.demo.model.Usuario@51c569ea]
2024-10-28 00:52:26 [http-nio-8080-exec-1] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.controller.AuthController.login() com resultado = <200 OK OK,com.example.demo.controller.AuthController$AuthResponse@26f039b8,[]>
2024-10-28 00:52:45 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing POST /graphql
2024-10-28 00:52:45 [http-nio-8080-exec-3] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com argumento[s] = [admin]
2024-10-28 00:52:45 [http-nio-8080-exec-3] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.repository.UsuarioRepository.findByUsername() com argumento[s] = [admin]
2024-10-28 00:52:45 [http-nio-8080-exec-3] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.repository.UsuarioRepository.findByUsername() com resultado = Optional[com.example.demo.model.Usuario@1b0e0103]
2024-10-28 00:52:45 [http-nio-8080-exec-3] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com resultado = com.example.demo.model.Usuario@1b0e0103
2024-10-28 00:52:45 [http-nio-8080-exec-3] INFO  c.e.d.s.JwtAuthenticationFilter - Usuário autenticado: admin
2024-10-28 00:52:45 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured POST /graphql
2024-10-28 00:52:45 [http-nio-8080-exec-3] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.controller.LivroGraphQLController.listarLivros() com argumento[s] = []
2024-10-28 00:52:45 [http-nio-8080-exec-3] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.LivroService.listarTodos() com argumento[s] = []
2024-10-28 00:52:45 [http-nio-8080-exec-3] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: org.springframework.data.repository.ListCrudRepository.findAll() com argumento[s] = []
2024-10-28 00:52:45 [http-nio-8080-exec-3] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: org.springframework.data.repository.ListCrudRepository.findAll() com resultado = [com.example.demo.model.Livro@1283bd53, com.example.demo.model.Livro@33ca8d27]
2024-10-28 00:52:45 [http-nio-8080-exec-3] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.LivroService.listarTodos() com resultado = [com.example.demo.model.Livro@1283bd53, com.example.demo.model.Livro@33ca8d27]
2024-10-28 00:52:45 [http-nio-8080-exec-3] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.controller.LivroGraphQLController.listarLivros() com resultado = [com.example.demo.model.Livro@1283bd53, com.example.demo.model.Livro@33ca8d27]
2024-10-28 01:02:32 [main] INFO  c.example.demo.DemoApplicationTests - Starting DemoApplicationTests using Java 21.0.2 with PID 11952 (started by michelle in C:\dev\workspace\eclipse-2023\demo-livro)
2024-10-28 01:02:32 [main] DEBUG c.example.demo.DemoApplicationTests - Running with Spring Boot v3.3.4, Spring v6.1.13
2024-10-28 01:02:32 [main] INFO  c.example.demo.DemoApplicationTests - No active profile set, falling back to 1 default profile: "default"
2024-10-28 01:02:34 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-10-28 01:02:34 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final
2024-10-28 01:02:34 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-10-28 01:02:35 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-10-28 01:02:35 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@25216999
2024-10-28 01:02:35 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-10-28 01:02:36 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-10-28 01:02:38 [main] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
2024-10-28 01:02:38 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-10-28 01:02:40 [main] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-10-28 01:02:40 [main] INFO  c.example.demo.DemoApplicationTests - Started DemoApplicationTests in 8.912 seconds (process running for 10.217)
2024-10-28 01:02:41 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-10-28 01:02:41 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-10-28 01:06:13 [main] INFO  com.example.demo.DemoApplication - Starting DemoApplication using Java 21.0.2 with PID 42380 (C:\dev\workspace\eclipse-2023\demo-livro\target\classes started by michelle in C:\dev\workspace\eclipse-2023\demo-livro)
2024-10-28 01:06:13 [main] DEBUG com.example.demo.DemoApplication - Running with Spring Boot v3.3.4, Spring v6.1.13
2024-10-28 01:06:13 [main] INFO  com.example.demo.DemoApplication - No active profile set, falling back to 1 default profile: "default"
2024-10-28 01:06:15 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-10-28 01:06:15 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.30]
2024-10-28 01:06:15 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-10-28 01:06:16 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-10-28 01:06:16 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final
2024-10-28 01:06:16 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-10-28 01:06:17 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-10-28 01:06:17 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@165aa43a
2024-10-28 01:06:17 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-10-28 01:06:19 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-10-28 01:06:20 [main] DEBUG c.e.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2024-10-28 01:06:20 [main] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
2024-10-28 01:06:20 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-10-28 01:06:22 [main] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-10-28 01:06:23 [main] INFO  com.example.demo.DemoApplication - Started DemoApplication in 10.38 seconds (process running for 10.836)
2024-10-28 01:07:28 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-10-28 01:07:28 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/login
2024-10-28 01:07:28 [http-nio-8080-exec-2] WARN  c.e.d.s.JwtAuthenticationFilter - Cabeçalho Authorization não encontrado ou não começa com Bearer
2024-10-28 01:07:28 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2024-10-28 01:07:28 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured POST /auth/login
2024-10-28 01:07:28 [http-nio-8080-exec-2] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.controller.AuthController.login() com argumento[s] = [com.example.demo.controller.AuthController$AuthRequest@39e47be9]
2024-10-28 01:07:28 [http-nio-8080-exec-2] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com argumento[s] = [admin]
2024-10-28 01:07:28 [http-nio-8080-exec-2] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.repository.UsuarioRepository.findByUsername() com argumento[s] = [admin]
2024-10-28 01:07:29 [http-nio-8080-exec-2] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.repository.UsuarioRepository.findByUsername() com resultado = Optional[com.example.demo.model.Usuario@1024cda0]
2024-10-28 01:07:29 [http-nio-8080-exec-2] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com resultado = com.example.demo.model.Usuario@1024cda0
2024-10-28 01:07:29 [http-nio-8080-exec-2] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2024-10-28 01:07:29 [http-nio-8080-exec-2] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.repository.UsuarioRepository.findByUsername() com argumento[s] = [admin]
2024-10-28 01:07:29 [http-nio-8080-exec-2] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.repository.UsuarioRepository.findByUsername() com resultado = Optional[com.example.demo.model.Usuario@1024cda0]
2024-10-28 01:07:29 [http-nio-8080-exec-2] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.controller.AuthController.login() com resultado = <200 OK OK,com.example.demo.controller.AuthController$AuthResponse@330c45b9,[]>
2024-10-28 01:07:55 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing POST /graphql
2024-10-28 01:07:55 [http-nio-8080-exec-3] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com argumento[s] = [admin]
2024-10-28 01:07:55 [http-nio-8080-exec-3] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.repository.UsuarioRepository.findByUsername() com argumento[s] = [admin]
2024-10-28 01:07:55 [http-nio-8080-exec-3] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.repository.UsuarioRepository.findByUsername() com resultado = Optional[com.example.demo.model.Usuario@3d5e47d7]
2024-10-28 01:07:55 [http-nio-8080-exec-3] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com resultado = com.example.demo.model.Usuario@3d5e47d7
2024-10-28 01:07:55 [http-nio-8080-exec-3] INFO  c.e.d.s.JwtAuthenticationFilter - Usuário autenticado: admin
2024-10-28 01:07:55 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured POST /graphql
2024-10-28 01:07:55 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.util.List com.example.demo.controller.LivroGraphQLController.listarLivros(); target is of class [com.example.demo.controller.LivroGraphQLController]
2024-10-28 01:07:55 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.util.List com.example.demo.controller.LivroGraphQLController.listarLivros(); target is of class [com.example.demo.controller.LivroGraphQLController]
2024-10-28 01:07:55 [http-nio-8080-exec-3] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.controller.LivroGraphQLController.listarLivros() com argumento[s] = []
2024-10-28 01:07:55 [http-nio-8080-exec-3] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.LivroService.listarTodos() com argumento[s] = []
2024-10-28 01:07:55 [http-nio-8080-exec-3] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: org.springframework.data.repository.ListCrudRepository.findAll() com argumento[s] = []
2024-10-28 01:07:55 [http-nio-8080-exec-3] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: org.springframework.data.repository.ListCrudRepository.findAll() com resultado = [com.example.demo.model.Livro@10be364a, com.example.demo.model.Livro@31d05ba2]
2024-10-28 01:07:55 [http-nio-8080-exec-3] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.LivroService.listarTodos() com resultado = [com.example.demo.model.Livro@10be364a, com.example.demo.model.Livro@31d05ba2]
2024-10-28 01:07:55 [http-nio-8080-exec-3] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.controller.LivroGraphQLController.listarLivros() com resultado = [com.example.demo.model.Livro@10be364a, com.example.demo.model.Livro@31d05ba2]
2024-10-28 09:14:16 [main] INFO  c.example.demo.DemoApplicationTests - Starting DemoApplicationTests using Java 21.0.2 with PID 13024 (started by Magna in C:\dev\workspace\eclipse-2024\demo)
2024-10-28 09:14:16 [main] DEBUG c.example.demo.DemoApplicationTests - Running with Spring Boot v3.3.4, Spring v6.1.13
2024-10-28 09:14:16 [main] INFO  c.example.demo.DemoApplicationTests - No active profile set, falling back to 1 default profile: "default"
2024-10-28 09:14:18 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-10-28 09:14:18 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final
2024-10-28 09:14:18 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-10-28 09:14:19 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-10-28 09:14:19 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@17053b5
2024-10-28 09:14:19 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-10-28 09:14:20 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-10-28 09:14:20 [main] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
2024-10-28 09:14:21 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-10-28 09:14:22 [main] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-10-28 09:14:22 [main] INFO  c.example.demo.DemoApplicationTests - Started DemoApplicationTests in 6.284 seconds (process running for 7.537)
2024-10-28 09:14:23 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-10-28 09:14:23 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-10-28 09:14:46 [main] INFO  com.example.demo.DemoApplication - Starting DemoApplication using Java 21.0.2 with PID 9060 (C:\dev\workspace\eclipse-2024\demo\target\classes started by Magna in C:\dev\workspace\eclipse-2024\demo)
2024-10-28 09:14:46 [main] DEBUG com.example.demo.DemoApplication - Running with Spring Boot v3.3.4, Spring v6.1.13
2024-10-28 09:14:46 [main] INFO  com.example.demo.DemoApplication - No active profile set, falling back to 1 default profile: "default"
2024-10-28 09:14:48 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-10-28 09:14:48 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.30]
2024-10-28 09:14:48 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-10-28 09:14:48 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-10-28 09:14:48 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final
2024-10-28 09:14:48 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-10-28 09:14:48 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-10-28 09:14:49 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7ffcb232
2024-10-28 09:14:49 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-10-28 09:14:50 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-10-28 09:14:50 [main] DEBUG c.e.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2024-10-28 09:14:50 [main] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
2024-10-28 09:14:51 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-10-28 09:14:52 [main] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-10-28 09:14:52 [main] INFO  com.example.demo.DemoApplication - Started DemoApplication in 6.424 seconds (process running for 6.759)
2024-10-28 09:18:54 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-10-28 09:18:54 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/login
2024-10-28 09:18:54 [http-nio-8080-exec-2] WARN  c.e.d.s.JwtAuthenticationFilter - Cabeçalho Authorization não encontrado ou não começa com Bearer
2024-10-28 09:18:54 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2024-10-28 09:18:54 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured POST /auth/login
2024-10-28 09:18:54 [http-nio-8080-exec-2] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.controller.AuthController.login() com argumento[s] = [com.example.demo.controller.AuthController$AuthRequest@731b223]
2024-10-28 09:18:55 [http-nio-8080-exec-2] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com argumento[s] = [admin]
2024-10-28 09:18:55 [http-nio-8080-exec-2] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.repository.UsuarioRepository.findByUsername() com argumento[s] = [admin]
2024-10-28 09:18:55 [http-nio-8080-exec-2] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.repository.UsuarioRepository.findByUsername() com resultado = Optional[com.example.demo.model.Usuario@b3b35a5]
2024-10-28 09:18:55 [http-nio-8080-exec-2] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com resultado = com.example.demo.model.Usuario@b3b35a5
2024-10-28 09:18:55 [http-nio-8080-exec-2] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2024-10-28 09:18:55 [http-nio-8080-exec-2] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.repository.UsuarioRepository.findByUsername() com argumento[s] = [admin]
2024-10-28 09:18:55 [http-nio-8080-exec-2] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.repository.UsuarioRepository.findByUsername() com resultado = Optional[com.example.demo.model.Usuario@b3b35a5]
2024-10-28 09:18:55 [http-nio-8080-exec-2] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.controller.AuthController.login() com resultado = <200 OK OK,com.example.demo.controller.AuthController$AuthResponse@13df3aea,[]>
2024-10-28 09:19:18 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /graphiql
2024-10-28 09:19:18 [http-nio-8080-exec-3] WARN  c.e.d.s.JwtAuthenticationFilter - Cabeçalho Authorization não encontrado ou não começa com Bearer
2024-10-28 09:19:18 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2024-10-28 09:19:18 [http-nio-8080-exec-3] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 0BD2606BB3B4728BF1D2A9A1B4C2866A
2024-10-28 09:19:18 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /graphiql
2024-10-28 09:19:18 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /graphiql?path=/graphql
2024-10-28 09:19:18 [http-nio-8080-exec-4] WARN  c.e.d.s.JwtAuthenticationFilter - Cabeçalho Authorization não encontrado ou não começa com Bearer
2024-10-28 09:19:18 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2024-10-28 09:19:18 [http-nio-8080-exec-4] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 0BD2606BB3B4728BF1D2A9A1B4C2866A
2024-10-28 09:19:18 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /graphiql?path=/graphql
2024-10-28 09:19:20 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing POST /graphql
2024-10-28 09:19:20 [http-nio-8080-exec-5] WARN  c.e.d.s.JwtAuthenticationFilter - Cabeçalho Authorization não encontrado ou não começa com Bearer
2024-10-28 09:19:20 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2024-10-28 09:19:20 [http-nio-8080-exec-5] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 0BD2606BB3B4728BF1D2A9A1B4C2866A
2024-10-28 09:19:20 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing POST /error
2024-10-28 09:19:20 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2024-10-28 09:19:20 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /favicon.ico
2024-10-28 09:19:20 [http-nio-8080-exec-6] WARN  c.e.d.s.JwtAuthenticationFilter - Cabeçalho Authorization não encontrado ou não começa com Bearer
2024-10-28 09:19:20 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2024-10-28 09:19:20 [http-nio-8080-exec-6] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 0BD2606BB3B4728BF1D2A9A1B4C2866A
2024-10-28 09:19:20 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2024-10-28 09:19:20 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2024-10-28 09:24:47 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing POST /graphql
2024-10-28 09:24:47 [http-nio-8080-exec-10] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com argumento[s] = [admin]
2024-10-28 09:24:47 [http-nio-8080-exec-10] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.repository.UsuarioRepository.findByUsername() com argumento[s] = [admin]
2024-10-28 09:24:47 [http-nio-8080-exec-10] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.repository.UsuarioRepository.findByUsername() com resultado = Optional[com.example.demo.model.Usuario@69b9539]
2024-10-28 09:24:47 [http-nio-8080-exec-10] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com resultado = com.example.demo.model.Usuario@69b9539
2024-10-28 09:24:47 [http-nio-8080-exec-10] INFO  c.e.d.s.JwtAuthenticationFilter - Usuário autenticado: admin
2024-10-28 09:24:47 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured POST /graphql
2024-10-28 09:25:03 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /graphql
2024-10-28 09:25:03 [http-nio-8080-exec-1] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com argumento[s] = [admin]
2024-10-28 09:25:03 [http-nio-8080-exec-1] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.repository.UsuarioRepository.findByUsername() com argumento[s] = [admin]
2024-10-28 09:25:03 [http-nio-8080-exec-1] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.repository.UsuarioRepository.findByUsername() com resultado = Optional[com.example.demo.model.Usuario@2aaac0f2]
2024-10-28 09:25:03 [http-nio-8080-exec-1] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com resultado = com.example.demo.model.Usuario@2aaac0f2
2024-10-28 09:25:03 [http-nio-8080-exec-1] INFO  c.e.d.s.JwtAuthenticationFilter - Usuário autenticado: admin
2024-10-28 09:25:03 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured POST /graphql
2024-10-28 09:25:03 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.util.List com.example.demo.controller.LivroGraphQLController.listarLivros(); target is of class [com.example.demo.controller.LivroGraphQLController]
2024-10-28 09:25:03 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.util.List com.example.demo.controller.LivroGraphQLController.listarLivros(); target is of class [com.example.demo.controller.LivroGraphQLController]
2024-10-28 09:25:03 [http-nio-8080-exec-1] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.controller.LivroGraphQLController.listarLivros() com argumento[s] = []
2024-10-28 09:25:03 [http-nio-8080-exec-1] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.LivroService.listarTodos() com argumento[s] = []
2024-10-28 09:25:03 [http-nio-8080-exec-1] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: org.springframework.data.repository.ListCrudRepository.findAll() com argumento[s] = []
2024-10-28 09:25:03 [http-nio-8080-exec-1] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: org.springframework.data.repository.ListCrudRepository.findAll() com resultado = [com.example.demo.model.Livro@553bf18a]
2024-10-28 09:25:03 [http-nio-8080-exec-1] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.LivroService.listarTodos() com resultado = [com.example.demo.model.Livro@553bf18a]
2024-10-28 09:25:03 [http-nio-8080-exec-1] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.controller.LivroGraphQLController.listarLivros() com resultado = [com.example.demo.model.Livro@553bf18a]
2024-10-28 09:25:44 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing POST /graphql
2024-10-28 09:25:44 [http-nio-8080-exec-2] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com argumento[s] = [admin]
2024-10-28 09:25:44 [http-nio-8080-exec-2] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.repository.UsuarioRepository.findByUsername() com argumento[s] = [admin]
2024-10-28 09:25:44 [http-nio-8080-exec-2] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.repository.UsuarioRepository.findByUsername() com resultado = Optional[com.example.demo.model.Usuario@ebf94f6]
2024-10-28 09:25:44 [http-nio-8080-exec-2] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com resultado = com.example.demo.model.Usuario@ebf94f6
2024-10-28 09:25:44 [http-nio-8080-exec-2] INFO  c.e.d.s.JwtAuthenticationFilter - Usuário autenticado: admin
2024-10-28 09:25:44 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured POST /graphql
2024-10-28 09:25:44 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public com.example.demo.model.Livro com.example.demo.controller.LivroGraphQLController.buscarLivroPorId(java.lang.Long); target is of class [com.example.demo.controller.LivroGraphQLController]
2024-10-28 09:25:44 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public com.example.demo.model.Livro com.example.demo.controller.LivroGraphQLController.buscarLivroPorId(java.lang.Long); target is of class [com.example.demo.controller.LivroGraphQLController]
2024-10-28 09:25:44 [http-nio-8080-exec-2] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.controller.LivroGraphQLController.buscarLivroPorId() com argumento[s] = [1]
2024-10-28 09:25:44 [http-nio-8080-exec-2] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.LivroService.buscarPorId() com argumento[s] = [1]
2024-10-28 09:25:44 [http-nio-8080-exec-2] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: org.springframework.data.repository.CrudRepository.findById() com argumento[s] = [1]
2024-10-28 09:25:44 [http-nio-8080-exec-2] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: org.springframework.data.repository.CrudRepository.findById() com resultado = Optional[com.example.demo.model.Livro@11cd23d5]
2024-10-28 09:25:44 [http-nio-8080-exec-2] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.LivroService.buscarPorId() com resultado = com.example.demo.model.Livro@11cd23d5
2024-10-28 09:25:44 [http-nio-8080-exec-2] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.controller.LivroGraphQLController.buscarLivroPorId() com resultado = com.example.demo.model.Livro@11cd23d5
2024-10-28 09:26:12 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing POST /graphql
2024-10-28 09:26:12 [http-nio-8080-exec-3] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com argumento[s] = [admin]
2024-10-28 09:26:12 [http-nio-8080-exec-3] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.repository.UsuarioRepository.findByUsername() com argumento[s] = [admin]
2024-10-28 09:26:12 [http-nio-8080-exec-3] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.repository.UsuarioRepository.findByUsername() com resultado = Optional[com.example.demo.model.Usuario@7e2f87c]
2024-10-28 09:26:12 [http-nio-8080-exec-3] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com resultado = com.example.demo.model.Usuario@7e2f87c
2024-10-28 09:26:12 [http-nio-8080-exec-3] INFO  c.e.d.s.JwtAuthenticationFilter - Usuário autenticado: admin
2024-10-28 09:26:12 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured POST /graphql
2024-10-28 09:26:12 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public com.example.demo.model.Livro com.example.demo.controller.LivroGraphQLController.buscarLivroPorId(java.lang.Long); target is of class [com.example.demo.controller.LivroGraphQLController]
2024-10-28 09:26:12 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public com.example.demo.model.Livro com.example.demo.controller.LivroGraphQLController.buscarLivroPorId(java.lang.Long); target is of class [com.example.demo.controller.LivroGraphQLController]
2024-10-28 09:26:12 [http-nio-8080-exec-3] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.controller.LivroGraphQLController.buscarLivroPorId() com argumento[s] = [1]
2024-10-28 09:26:12 [http-nio-8080-exec-3] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.LivroService.buscarPorId() com argumento[s] = [1]
2024-10-28 09:26:12 [http-nio-8080-exec-3] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: org.springframework.data.repository.CrudRepository.findById() com argumento[s] = [1]
2024-10-28 09:26:12 [http-nio-8080-exec-3] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: org.springframework.data.repository.CrudRepository.findById() com resultado = Optional[com.example.demo.model.Livro@1bffce38]
2024-10-28 09:26:12 [http-nio-8080-exec-3] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.LivroService.buscarPorId() com resultado = com.example.demo.model.Livro@1bffce38
2024-10-28 09:26:12 [http-nio-8080-exec-3] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.controller.LivroGraphQLController.buscarLivroPorId() com resultado = com.example.demo.model.Livro@1bffce38
2024-10-28 09:26:18 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing POST /graphql
2024-10-28 09:26:18 [http-nio-8080-exec-4] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com argumento[s] = [admin]
2024-10-28 09:26:18 [http-nio-8080-exec-4] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.repository.UsuarioRepository.findByUsername() com argumento[s] = [admin]
2024-10-28 09:26:18 [http-nio-8080-exec-4] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.repository.UsuarioRepository.findByUsername() com resultado = Optional[com.example.demo.model.Usuario@14f2a1c8]
2024-10-28 09:26:18 [http-nio-8080-exec-4] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com resultado = com.example.demo.model.Usuario@14f2a1c8
2024-10-28 09:26:18 [http-nio-8080-exec-4] INFO  c.e.d.s.JwtAuthenticationFilter - Usuário autenticado: admin
2024-10-28 09:26:18 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured POST /graphql
2024-10-28 09:26:18 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public com.example.demo.model.Livro com.example.demo.controller.LivroGraphQLController.buscarLivroPorId(java.lang.Long); target is of class [com.example.demo.controller.LivroGraphQLController]
2024-10-28 09:26:18 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public com.example.demo.model.Livro com.example.demo.controller.LivroGraphQLController.buscarLivroPorId(java.lang.Long); target is of class [com.example.demo.controller.LivroGraphQLController]
2024-10-28 09:26:18 [http-nio-8080-exec-4] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.controller.LivroGraphQLController.buscarLivroPorId() com argumento[s] = [1]
2024-10-28 09:26:18 [http-nio-8080-exec-4] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.LivroService.buscarPorId() com argumento[s] = [1]
2024-10-28 09:26:18 [http-nio-8080-exec-4] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: org.springframework.data.repository.CrudRepository.findById() com argumento[s] = [1]
2024-10-28 09:26:18 [http-nio-8080-exec-4] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: org.springframework.data.repository.CrudRepository.findById() com resultado = Optional[com.example.demo.model.Livro@60bd863a]
2024-10-28 09:26:18 [http-nio-8080-exec-4] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.LivroService.buscarPorId() com resultado = com.example.demo.model.Livro@60bd863a
2024-10-28 09:26:18 [http-nio-8080-exec-4] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.controller.LivroGraphQLController.buscarLivroPorId() com resultado = com.example.demo.model.Livro@60bd863a
2024-10-28 09:28:43 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing POST /graphql
2024-10-28 09:28:43 [http-nio-8080-exec-6] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com argumento[s] = [admin]
2024-10-28 09:28:43 [http-nio-8080-exec-6] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.repository.UsuarioRepository.findByUsername() com argumento[s] = [admin]
2024-10-28 09:28:43 [http-nio-8080-exec-6] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.repository.UsuarioRepository.findByUsername() com resultado = Optional[com.example.demo.model.Usuario@683fa8b]
2024-10-28 09:28:43 [http-nio-8080-exec-6] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com resultado = com.example.demo.model.Usuario@683fa8b
2024-10-28 09:28:43 [http-nio-8080-exec-6] INFO  c.e.d.s.JwtAuthenticationFilter - Usuário autenticado: admin
2024-10-28 09:28:43 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured POST /graphql
2024-10-28 09:28:58 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing POST /graphql
2024-10-28 09:28:58 [http-nio-8080-exec-7] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com argumento[s] = [admin]
2024-10-28 09:28:58 [http-nio-8080-exec-7] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.repository.UsuarioRepository.findByUsername() com argumento[s] = [admin]
2024-10-28 09:28:58 [http-nio-8080-exec-7] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.repository.UsuarioRepository.findByUsername() com resultado = Optional[com.example.demo.model.Usuario@5e73335e]
2024-10-28 09:28:58 [http-nio-8080-exec-7] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com resultado = com.example.demo.model.Usuario@5e73335e
2024-10-28 09:28:58 [http-nio-8080-exec-7] INFO  c.e.d.s.JwtAuthenticationFilter - Usuário autenticado: admin
2024-10-28 09:28:58 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured POST /graphql
2024-10-28 09:28:58 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.util.List com.example.demo.controller.LivroGraphQLController.listarLivros(); target is of class [com.example.demo.controller.LivroGraphQLController]
2024-10-28 09:28:58 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.util.List com.example.demo.controller.LivroGraphQLController.listarLivros(); target is of class [com.example.demo.controller.LivroGraphQLController]
2024-10-28 09:28:58 [http-nio-8080-exec-7] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.controller.LivroGraphQLController.listarLivros() com argumento[s] = []
2024-10-28 09:28:58 [http-nio-8080-exec-7] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.LivroService.listarTodos() com argumento[s] = []
2024-10-28 09:28:58 [http-nio-8080-exec-7] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: org.springframework.data.repository.ListCrudRepository.findAll() com argumento[s] = []
2024-10-28 09:28:58 [http-nio-8080-exec-7] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: org.springframework.data.repository.ListCrudRepository.findAll() com resultado = [com.example.demo.model.Livro@435bdb8a]
2024-10-28 09:28:58 [http-nio-8080-exec-7] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.LivroService.listarTodos() com resultado = [com.example.demo.model.Livro@435bdb8a]
2024-10-28 09:28:58 [http-nio-8080-exec-7] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.controller.LivroGraphQLController.listarLivros() com resultado = [com.example.demo.model.Livro@435bdb8a]
2024-10-28 09:29:43 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing POST /graphql
2024-10-28 09:29:43 [http-nio-8080-exec-8] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com argumento[s] = [admin]
2024-10-28 09:29:43 [http-nio-8080-exec-8] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.repository.UsuarioRepository.findByUsername() com argumento[s] = [admin]
2024-10-28 09:29:43 [http-nio-8080-exec-8] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.repository.UsuarioRepository.findByUsername() com resultado = Optional[com.example.demo.model.Usuario@d656083]
2024-10-28 09:29:43 [http-nio-8080-exec-8] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com resultado = com.example.demo.model.Usuario@d656083
2024-10-28 09:29:43 [http-nio-8080-exec-8] INFO  c.e.d.s.JwtAuthenticationFilter - Usuário autenticado: admin
2024-10-28 09:29:43 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured POST /graphql
2024-10-28 09:30:18 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing POST /graphql
2024-10-28 09:30:18 [http-nio-8080-exec-9] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com argumento[s] = [admin]
2024-10-28 09:30:18 [http-nio-8080-exec-9] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.repository.UsuarioRepository.findByUsername() com argumento[s] = [admin]
2024-10-28 09:30:18 [http-nio-8080-exec-9] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.repository.UsuarioRepository.findByUsername() com resultado = Optional[com.example.demo.model.Usuario@2b4bf383]
2024-10-28 09:30:18 [http-nio-8080-exec-9] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com resultado = com.example.demo.model.Usuario@2b4bf383
2024-10-28 09:30:18 [http-nio-8080-exec-9] INFO  c.e.d.s.JwtAuthenticationFilter - Usuário autenticado: admin
2024-10-28 09:30:18 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured POST /graphql
2024-10-28 09:30:18 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.util.List com.example.demo.controller.LivroGraphQLController.listarLivros(); target is of class [com.example.demo.controller.LivroGraphQLController]
2024-10-28 09:30:18 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.util.List com.example.demo.controller.LivroGraphQLController.listarLivros(); target is of class [com.example.demo.controller.LivroGraphQLController]
2024-10-28 09:30:18 [http-nio-8080-exec-9] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.controller.LivroGraphQLController.listarLivros() com argumento[s] = []
2024-10-28 09:30:18 [http-nio-8080-exec-9] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.LivroService.listarTodos() com argumento[s] = []
2024-10-28 09:30:18 [http-nio-8080-exec-9] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: org.springframework.data.repository.ListCrudRepository.findAll() com argumento[s] = []
2024-10-28 09:30:18 [http-nio-8080-exec-9] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: org.springframework.data.repository.ListCrudRepository.findAll() com resultado = [com.example.demo.model.Livro@1e2f0bcb]
2024-10-28 09:30:18 [http-nio-8080-exec-9] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.LivroService.listarTodos() com resultado = [com.example.demo.model.Livro@1e2f0bcb]
2024-10-28 09:30:18 [http-nio-8080-exec-9] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.controller.LivroGraphQLController.listarLivros() com resultado = [com.example.demo.model.Livro@1e2f0bcb]
2024-10-28 09:41:28 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /graphql
2024-10-28 09:41:28 [http-nio-8080-exec-1] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com argumento[s] = [admin]
2024-10-28 09:41:28 [http-nio-8080-exec-1] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.repository.UsuarioRepository.findByUsername() com argumento[s] = [admin]
2024-10-28 09:41:28 [http-nio-8080-exec-1] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.repository.UsuarioRepository.findByUsername() com resultado = Optional[com.example.demo.model.Usuario@209a4a5c]
2024-10-28 09:41:28 [http-nio-8080-exec-1] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com resultado = com.example.demo.model.Usuario@209a4a5c
2024-10-28 09:41:28 [http-nio-8080-exec-1] INFO  c.e.d.s.JwtAuthenticationFilter - Usuário autenticado: admin
2024-10-28 09:41:28 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured POST /graphql
2024-10-28 09:43:35 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing POST /graphql
2024-10-28 09:43:35 [http-nio-8080-exec-3] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com argumento[s] = [admin]
2024-10-28 09:43:35 [http-nio-8080-exec-3] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.repository.UsuarioRepository.findByUsername() com argumento[s] = [admin]
2024-10-28 09:43:35 [http-nio-8080-exec-3] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.repository.UsuarioRepository.findByUsername() com resultado = Optional[com.example.demo.model.Usuario@5f7d899c]
2024-10-28 09:43:35 [http-nio-8080-exec-3] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com resultado = com.example.demo.model.Usuario@5f7d899c
2024-10-28 09:43:35 [http-nio-8080-exec-3] INFO  c.e.d.s.JwtAuthenticationFilter - Usuário autenticado: admin
2024-10-28 09:43:35 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured POST /graphql
2024-10-28 09:44:39 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/login
2024-10-28 09:44:39 [http-nio-8080-exec-6] WARN  c.e.d.s.JwtAuthenticationFilter - Cabeçalho Authorization não encontrado ou não começa com Bearer
2024-10-28 09:44:39 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2024-10-28 09:44:39 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured POST /auth/login
2024-10-28 09:44:39 [http-nio-8080-exec-6] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.controller.AuthController.login() com argumento[s] = [com.example.demo.controller.AuthController$AuthRequest@40436a5b]
2024-10-28 09:44:39 [http-nio-8080-exec-6] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com argumento[s] = [admin]
2024-10-28 09:44:39 [http-nio-8080-exec-6] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.repository.UsuarioRepository.findByUsername() com argumento[s] = [admin]
2024-10-28 09:44:39 [http-nio-8080-exec-6] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.repository.UsuarioRepository.findByUsername() com resultado = Optional[com.example.demo.model.Usuario@ee210a2]
2024-10-28 09:44:39 [http-nio-8080-exec-6] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com resultado = com.example.demo.model.Usuario@ee210a2
2024-10-28 09:44:39 [http-nio-8080-exec-6] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2024-10-28 09:44:39 [http-nio-8080-exec-6] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.repository.UsuarioRepository.findByUsername() com argumento[s] = [admin]
2024-10-28 09:44:39 [http-nio-8080-exec-6] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.repository.UsuarioRepository.findByUsername() com resultado = Optional[com.example.demo.model.Usuario@ee210a2]
2024-10-28 09:44:39 [http-nio-8080-exec-6] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.controller.AuthController.login() com resultado = <200 OK OK,com.example.demo.controller.AuthController$AuthResponse@7ee0e668,[]>
2024-10-28 09:44:54 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing POST /graphql
2024-10-28 09:44:54 [http-nio-8080-exec-7] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com argumento[s] = [admin]
2024-10-28 09:44:54 [http-nio-8080-exec-7] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.repository.UsuarioRepository.findByUsername() com argumento[s] = [admin]
2024-10-28 09:44:54 [http-nio-8080-exec-7] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.repository.UsuarioRepository.findByUsername() com resultado = Optional[com.example.demo.model.Usuario@45e63be0]
2024-10-28 09:44:54 [http-nio-8080-exec-7] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com resultado = com.example.demo.model.Usuario@45e63be0
2024-10-28 09:44:54 [http-nio-8080-exec-7] INFO  c.e.d.s.JwtAuthenticationFilter - Usuário autenticado: admin
2024-10-28 09:44:54 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured POST /graphql
2024-10-28 09:45:16 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing POST /livros/cadastrar
2024-10-28 09:45:16 [http-nio-8080-exec-8] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com argumento[s] = [admin]
2024-10-28 09:45:16 [http-nio-8080-exec-8] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.repository.UsuarioRepository.findByUsername() com argumento[s] = [admin]
2024-10-28 09:45:16 [http-nio-8080-exec-8] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.repository.UsuarioRepository.findByUsername() com resultado = Optional[com.example.demo.model.Usuario@33adaa82]
2024-10-28 09:45:16 [http-nio-8080-exec-8] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com resultado = com.example.demo.model.Usuario@33adaa82
2024-10-28 09:45:16 [http-nio-8080-exec-8] INFO  c.e.d.s.JwtAuthenticationFilter - Usuário autenticado: admin
2024-10-28 09:45:16 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured POST /livros/cadastrar
2024-10-28 09:45:16 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.demo.controller.LivroController.cadastrar(com.example.demo.model.Livro); target is of class [com.example.demo.controller.LivroController]
2024-10-28 09:45:16 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.demo.controller.LivroController.cadastrar(com.example.demo.model.Livro); target is of class [com.example.demo.controller.LivroController]
2024-10-28 09:45:16 [http-nio-8080-exec-8] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.controller.LivroController.cadastrar() com argumento[s] = [com.example.demo.model.Livro@7ffb4712]
2024-10-28 09:45:16 [http-nio-8080-exec-8] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.LivroService.salvar() com argumento[s] = [com.example.demo.model.Livro@7ffb4712]
2024-10-28 09:45:16 [http-nio-8080-exec-8] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: org.springframework.data.repository.CrudRepository.save() com argumento[s] = [com.example.demo.model.Livro@7ffb4712]
2024-10-28 09:45:16 [http-nio-8080-exec-8] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: org.springframework.data.repository.CrudRepository.save() com resultado = com.example.demo.model.Livro@7ffb4712
2024-10-28 09:45:16 [http-nio-8080-exec-8] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.LivroService.salvar() com resultado = com.example.demo.model.Livro@7ffb4712
2024-10-28 09:45:16 [http-nio-8080-exec-8] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.controller.LivroController.cadastrar() com resultado = <201 CREATED Created,[]>
2024-10-28 09:45:19 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing POST /graphql
2024-10-28 09:45:20 [http-nio-8080-exec-9] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com argumento[s] = [admin]
2024-10-28 09:45:20 [http-nio-8080-exec-9] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.repository.UsuarioRepository.findByUsername() com argumento[s] = [admin]
2024-10-28 09:45:20 [http-nio-8080-exec-9] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.repository.UsuarioRepository.findByUsername() com resultado = Optional[com.example.demo.model.Usuario@187f8d3d]
2024-10-28 09:45:20 [http-nio-8080-exec-9] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com resultado = com.example.demo.model.Usuario@187f8d3d
2024-10-28 09:45:20 [http-nio-8080-exec-9] INFO  c.e.d.s.JwtAuthenticationFilter - Usuário autenticado: admin
2024-10-28 09:45:20 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured POST /graphql
2024-10-28 09:45:20 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.util.List com.example.demo.controller.LivroGraphQLController.listarLivros(); target is of class [com.example.demo.controller.LivroGraphQLController]
2024-10-28 09:45:20 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.util.List com.example.demo.controller.LivroGraphQLController.listarLivros(); target is of class [com.example.demo.controller.LivroGraphQLController]
2024-10-28 09:45:20 [http-nio-8080-exec-9] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.controller.LivroGraphQLController.listarLivros() com argumento[s] = []
2024-10-28 09:45:20 [http-nio-8080-exec-9] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.LivroService.listarTodos() com argumento[s] = []
2024-10-28 09:45:20 [http-nio-8080-exec-9] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: org.springframework.data.repository.ListCrudRepository.findAll() com argumento[s] = []
2024-10-28 09:45:20 [http-nio-8080-exec-9] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: org.springframework.data.repository.ListCrudRepository.findAll() com resultado = [com.example.demo.model.Livro@47a3f4af, com.example.demo.model.Livro@701ae078]
2024-10-28 09:45:20 [http-nio-8080-exec-9] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.LivroService.listarTodos() com resultado = [com.example.demo.model.Livro@47a3f4af, com.example.demo.model.Livro@701ae078]
2024-10-28 09:45:20 [http-nio-8080-exec-9] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.controller.LivroGraphQLController.listarLivros() com resultado = [com.example.demo.model.Livro@47a3f4af, com.example.demo.model.Livro@701ae078]
2024-10-28 09:49:36 [main] INFO  c.example.demo.DemoApplicationTests - Starting DemoApplicationTests using Java 21.0.2 with PID 11964 (started by Magna in C:\dev\workspace\eclipse-2024\demo)
2024-10-28 09:49:36 [main] DEBUG c.example.demo.DemoApplicationTests - Running with Spring Boot v3.3.4, Spring v6.1.13
2024-10-28 09:49:36 [main] INFO  c.example.demo.DemoApplicationTests - No active profile set, falling back to 1 default profile: "default"
2024-10-28 09:49:38 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-10-28 09:49:38 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final
2024-10-28 09:49:38 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-10-28 09:49:38 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-10-28 09:49:38 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@338a4c61
2024-10-28 09:49:38 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-10-28 09:49:39 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-10-28 09:49:40 [main] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
2024-10-28 09:49:40 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-10-28 09:49:41 [main] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-10-28 09:49:42 [main] INFO  c.example.demo.DemoApplicationTests - Started DemoApplicationTests in 5.998 seconds (process running for 6.936)
2024-10-28 09:49:42 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-10-28 09:49:42 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-10-28 09:51:02 [main] INFO  com.example.demo.DemoApplication - Starting DemoApplication using Java 21.0.2 with PID 13348 (C:\dev\workspace\eclipse-2024\demo\target\classes started by Magna in C:\dev\workspace\eclipse-2024\demo)
2024-10-28 09:51:02 [main] DEBUG com.example.demo.DemoApplication - Running with Spring Boot v3.3.4, Spring v6.1.13
2024-10-28 09:51:02 [main] INFO  com.example.demo.DemoApplication - No active profile set, falling back to 1 default profile: "default"
2024-10-28 09:51:04 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-10-28 09:51:04 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.30]
2024-10-28 09:51:04 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-10-28 09:51:04 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-10-28 09:51:04 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final
2024-10-28 09:51:04 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-10-28 09:51:04 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-10-28 09:51:04 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@22cd8ec2
2024-10-28 09:51:04 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-10-28 09:51:05 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-10-28 09:51:06 [main] DEBUG c.e.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2024-10-28 09:51:06 [main] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
2024-10-28 09:51:06 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-10-28 09:51:07 [main] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-10-28 09:51:07 [main] INFO  com.example.demo.DemoApplication - Started DemoApplication in 6.088 seconds (process running for 6.424)
2024-10-28 09:51:32 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-10-28 09:51:32 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /graphql
2024-10-28 09:51:32 [http-nio-8080-exec-1] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com argumento[s] = [admin]
2024-10-28 09:51:32 [http-nio-8080-exec-1] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.repository.UsuarioRepository.findByUsername() com argumento[s] = [admin]
2024-10-28 09:51:33 [http-nio-8080-exec-1] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.repository.UsuarioRepository.findByUsername() com resultado = Optional[com.example.demo.model.Usuario@33cbe069]
2024-10-28 09:51:33 [http-nio-8080-exec-1] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com resultado = com.example.demo.model.Usuario@33cbe069
2024-10-28 09:51:33 [http-nio-8080-exec-1] INFO  c.e.d.s.JwtAuthenticationFilter - Usuário autenticado: admin
2024-10-28 09:51:33 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured POST /graphql
2024-10-28 09:52:44 [main] INFO  c.example.demo.DemoApplicationTests - Starting DemoApplicationTests using Java 21.0.2 with PID 17500 (started by Magna in C:\dev\workspace\eclipse-2024\demo)
2024-10-28 09:52:44 [main] DEBUG c.example.demo.DemoApplicationTests - Running with Spring Boot v3.3.4, Spring v6.1.13
2024-10-28 09:52:44 [main] INFO  c.example.demo.DemoApplicationTests - No active profile set, falling back to 1 default profile: "default"
2024-10-28 09:52:46 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-10-28 09:52:46 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final
2024-10-28 09:52:46 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-10-28 09:52:46 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-10-28 09:52:46 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1b25d695
2024-10-28 09:52:46 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-10-28 09:52:47 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-10-28 09:52:48 [main] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
2024-10-28 09:52:48 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-10-28 09:52:49 [main] DEBUG o.s.g.d.m.a.s.AnnotatedControllerExceptionResolver - @GraphQlException methods in ControllerAdvice beans: none
2024-10-28 09:52:49 [main] INFO  o.s.g.e.DefaultSchemaResourceGraphQlSourceBuilder - Loaded 1 resource(s) in the GraphQL schema.
2024-10-28 09:52:49 [main] DEBUG o.s.g.e.DefaultSchemaResourceGraphQlSourceBuilder - Loaded GraphQL schema resources: (file [C:\dev\workspace\eclipse-2024\demo\target\classes\graphql\schema.graphqls])
2024-10-28 09:52:49 [main] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-10-28 09:52:50 [main] INFO  c.example.demo.DemoApplicationTests - Started DemoApplicationTests in 5.876 seconds (process running for 6.872)
2024-10-28 09:52:50 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-10-28 09:52:50 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-10-28 09:53:24 [main] INFO  com.example.demo.DemoApplication - Starting DemoApplication using Java 21.0.2 with PID 17240 (C:\dev\workspace\eclipse-2024\demo\target\classes started by Magna in C:\dev\workspace\eclipse-2024\demo)
2024-10-28 09:53:24 [main] DEBUG com.example.demo.DemoApplication - Running with Spring Boot v3.3.4, Spring v6.1.13
2024-10-28 09:53:24 [main] INFO  com.example.demo.DemoApplication - No active profile set, falling back to 1 default profile: "default"
2024-10-28 09:53:26 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-10-28 09:53:26 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.30]
2024-10-28 09:53:26 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-10-28 09:53:26 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-10-28 09:53:26 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final
2024-10-28 09:53:26 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-10-28 09:53:26 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-10-28 09:53:26 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@9bf63d2
2024-10-28 09:53:26 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-10-28 09:53:27 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-10-28 09:53:28 [main] DEBUG c.e.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2024-10-28 09:53:28 [main] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
2024-10-28 09:53:28 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-10-28 09:53:29 [main] DEBUG o.s.g.d.m.a.s.AnnotatedControllerExceptionResolver - @GraphQlException methods in ControllerAdvice beans: none
2024-10-28 09:53:29 [main] INFO  o.s.g.e.DefaultSchemaResourceGraphQlSourceBuilder - Loaded 1 resource(s) in the GraphQL schema.
2024-10-28 09:53:29 [main] DEBUG o.s.g.e.DefaultSchemaResourceGraphQlSourceBuilder - Loaded GraphQL schema resources: (file [C:\dev\workspace\eclipse-2024\demo\target\classes\graphql\schema.graphqls])
2024-10-28 09:53:29 [main] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-10-28 09:53:29 [main] INFO  com.example.demo.DemoApplication - Started DemoApplication in 6.085 seconds (process running for 6.41)
2024-10-28 09:55:38 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-10-28 09:55:38 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /graphql
2024-10-28 09:55:38 [http-nio-8080-exec-1] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com argumento[s] = [admin]
2024-10-28 09:55:38 [http-nio-8080-exec-1] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.repository.UsuarioRepository.findByUsername() com argumento[s] = [admin]
2024-10-28 09:55:39 [http-nio-8080-exec-1] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.repository.UsuarioRepository.findByUsername() com resultado = Optional[com.example.demo.model.Usuario@6692f6c4]
2024-10-28 09:55:39 [http-nio-8080-exec-1] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com resultado = com.example.demo.model.Usuario@6692f6c4
2024-10-28 09:55:39 [http-nio-8080-exec-1] INFO  c.e.d.s.JwtAuthenticationFilter - Usuário autenticado: admin
2024-10-28 09:55:39 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured POST /graphql
2024-10-28 09:55:39 [http-nio-8080-exec-1] DEBUG o.s.g.s.webmvc.GraphQlHttpHandler - Executing: document='query {
  listarLivros {
    id
    titulo
    autor
  }
}
', id=aedc1b4d-d8dd-bb12-4dff-5f4c14eac12c, Locale=pt_BR
2024-10-28 09:55:39 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.util.List com.example.demo.controller.LivroGraphQLController.listarLivros(); target is of class [com.example.demo.controller.LivroGraphQLController]
2024-10-28 09:55:39 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.util.List com.example.demo.controller.LivroGraphQLController.listarLivros(); target is of class [com.example.demo.controller.LivroGraphQLController]
2024-10-28 09:55:39 [http-nio-8080-exec-1] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.controller.LivroGraphQLController.listarLivros() com argumento[s] = []
2024-10-28 09:55:39 [http-nio-8080-exec-1] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.LivroService.listarTodos() com argumento[s] = []
2024-10-28 09:55:39 [http-nio-8080-exec-1] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: org.springframework.data.repository.ListCrudRepository.findAll() com argumento[s] = []
2024-10-28 09:55:39 [http-nio-8080-exec-1] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: org.springframework.data.repository.ListCrudRepository.findAll() com resultado = [com.example.demo.model.Livro@55458f1f, com.example.demo.model.Livro@32ae9b17]
2024-10-28 09:55:39 [http-nio-8080-exec-1] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.LivroService.listarTodos() com resultado = [com.example.demo.model.Livro@55458f1f, com.example.demo.model.Livro@32ae9b17]
2024-10-28 09:55:39 [http-nio-8080-exec-1] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.controller.LivroGraphQLController.listarLivros() com resultado = [com.example.demo.model.Livro@55458f1f, com.example.demo.model.Livro@32ae9b17]
2024-10-28 09:55:39 [http-nio-8080-exec-1] DEBUG o.s.g.s.webmvc.GraphQlHttpHandler - Execution result is ready.
2024-10-28 09:55:41 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing POST /graphql
2024-10-28 09:55:41 [http-nio-8080-exec-2] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com argumento[s] = [admin]
2024-10-28 09:55:41 [http-nio-8080-exec-2] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.repository.UsuarioRepository.findByUsername() com argumento[s] = [admin]
2024-10-28 09:55:41 [http-nio-8080-exec-2] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.repository.UsuarioRepository.findByUsername() com resultado = Optional[com.example.demo.model.Usuario@172ed84b]
2024-10-28 09:55:41 [http-nio-8080-exec-2] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com resultado = com.example.demo.model.Usuario@172ed84b
2024-10-28 09:55:41 [http-nio-8080-exec-2] INFO  c.e.d.s.JwtAuthenticationFilter - Usuário autenticado: admin
2024-10-28 09:55:41 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured POST /graphql
2024-10-28 09:55:41 [http-nio-8080-exec-2] DEBUG o.s.g.s.webmvc.GraphQlHttpHandler - Executing: document='mutation {
  cadastrarLivro(titulo: "Novo Livro", autor: "Autor Desconhecido") {
    id
    titulo
    autor
  }
}
', id=e1eaeed7-f1ff-e78c-7cf0-62eee34e9feb, Locale=pt_BR
2024-10-28 09:55:41 [http-nio-8080-exec-2] DEBUG o.s.g.s.webmvc.GraphQlHttpHandler - Execution result is ready.
2024-10-28 09:55:52 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing POST /graphql
2024-10-28 09:55:52 [http-nio-8080-exec-4] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com argumento[s] = [admin]
2024-10-28 09:55:52 [http-nio-8080-exec-4] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.repository.UsuarioRepository.findByUsername() com argumento[s] = [admin]
2024-10-28 09:55:52 [http-nio-8080-exec-4] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.repository.UsuarioRepository.findByUsername() com resultado = Optional[com.example.demo.model.Usuario@11d76c04]
2024-10-28 09:55:52 [http-nio-8080-exec-4] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com resultado = com.example.demo.model.Usuario@11d76c04
2024-10-28 09:55:52 [http-nio-8080-exec-4] INFO  c.e.d.s.JwtAuthenticationFilter - Usuário autenticado: admin
2024-10-28 09:55:52 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured POST /graphql
2024-10-28 09:55:52 [http-nio-8080-exec-4] DEBUG o.s.g.s.webmvc.GraphQlHttpHandler - Executing: document='query {
  listarLivros {
    id
    titulo
    autor
  }
}
', id=b2985b41-70b0-0e1a-e5fb-969d2125de6e, Locale=pt_BR
2024-10-28 09:55:52 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.util.List com.example.demo.controller.LivroGraphQLController.listarLivros(); target is of class [com.example.demo.controller.LivroGraphQLController]
2024-10-28 09:55:52 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.util.List com.example.demo.controller.LivroGraphQLController.listarLivros(); target is of class [com.example.demo.controller.LivroGraphQLController]
2024-10-28 09:55:52 [http-nio-8080-exec-4] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.controller.LivroGraphQLController.listarLivros() com argumento[s] = []
2024-10-28 09:55:52 [http-nio-8080-exec-4] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.LivroService.listarTodos() com argumento[s] = []
2024-10-28 09:55:52 [http-nio-8080-exec-4] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: org.springframework.data.repository.ListCrudRepository.findAll() com argumento[s] = []
2024-10-28 09:55:52 [http-nio-8080-exec-4] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: org.springframework.data.repository.ListCrudRepository.findAll() com resultado = [com.example.demo.model.Livro@1bc0538c, com.example.demo.model.Livro@6ebc3e22]
2024-10-28 09:55:52 [http-nio-8080-exec-4] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.LivroService.listarTodos() com resultado = [com.example.demo.model.Livro@1bc0538c, com.example.demo.model.Livro@6ebc3e22]
2024-10-28 09:55:52 [http-nio-8080-exec-4] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.controller.LivroGraphQLController.listarLivros() com resultado = [com.example.demo.model.Livro@1bc0538c, com.example.demo.model.Livro@6ebc3e22]
2024-10-28 09:55:52 [http-nio-8080-exec-4] DEBUG o.s.g.s.webmvc.GraphQlHttpHandler - Execution result is ready.
2024-10-28 09:56:31 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /livros/listar
2024-10-28 09:56:31 [http-nio-8080-exec-5] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com argumento[s] = [admin]
2024-10-28 09:56:31 [http-nio-8080-exec-5] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.repository.UsuarioRepository.findByUsername() com argumento[s] = [admin]
2024-10-28 09:56:31 [http-nio-8080-exec-5] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.repository.UsuarioRepository.findByUsername() com resultado = Optional[com.example.demo.model.Usuario@49ce5b7c]
2024-10-28 09:56:31 [http-nio-8080-exec-5] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com resultado = com.example.demo.model.Usuario@49ce5b7c
2024-10-28 09:56:31 [http-nio-8080-exec-5] INFO  c.e.d.s.JwtAuthenticationFilter - Usuário autenticado: admin
2024-10-28 09:56:31 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /livros/listar
2024-10-28 09:56:31 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.demo.controller.LivroController.listarTodos(); target is of class [com.example.demo.controller.LivroController]
2024-10-28 09:56:31 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.demo.controller.LivroController.listarTodos(); target is of class [com.example.demo.controller.LivroController]
2024-10-28 09:56:31 [http-nio-8080-exec-5] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.controller.LivroController.listarTodos() com argumento[s] = []
2024-10-28 09:56:31 [http-nio-8080-exec-5] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.LivroService.listarTodos() com argumento[s] = []
2024-10-28 09:56:31 [http-nio-8080-exec-5] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: org.springframework.data.repository.ListCrudRepository.findAll() com argumento[s] = []
2024-10-28 09:56:31 [http-nio-8080-exec-5] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: org.springframework.data.repository.ListCrudRepository.findAll() com resultado = [com.example.demo.model.Livro@7f03bd0f, com.example.demo.model.Livro@6fcb6125]
2024-10-28 09:56:31 [http-nio-8080-exec-5] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.LivroService.listarTodos() com resultado = [com.example.demo.model.Livro@7f03bd0f, com.example.demo.model.Livro@6fcb6125]
2024-10-28 09:56:31 [http-nio-8080-exec-5] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.controller.LivroController.listarTodos() com resultado = <200 OK OK,[com.example.demo.model.Livro@7f03bd0f, com.example.demo.model.Livro@6fcb6125],[]>
2024-10-28 09:58:03 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing POST /graphql
2024-10-28 09:58:03 [http-nio-8080-exec-8] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com argumento[s] = [admin]
2024-10-28 09:58:03 [http-nio-8080-exec-8] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.repository.UsuarioRepository.findByUsername() com argumento[s] = [admin]
2024-10-28 09:58:03 [http-nio-8080-exec-8] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.repository.UsuarioRepository.findByUsername() com resultado = Optional[com.example.demo.model.Usuario@207c0e12]
2024-10-28 09:58:03 [http-nio-8080-exec-8] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com resultado = com.example.demo.model.Usuario@207c0e12
2024-10-28 09:58:03 [http-nio-8080-exec-8] INFO  c.e.d.s.JwtAuthenticationFilter - Usuário autenticado: admin
2024-10-28 09:58:03 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured POST /graphql
2024-10-28 09:58:03 [http-nio-8080-exec-8] DEBUG o.s.g.s.webmvc.GraphQlHttpHandler - Executing: document='mutation {
  cadastrarLivro(titulo: "Novo Livro", autor: "Autor Desconhecido") {
    id
    titulo
    autor
  }
}
', id=9d8a1532-bb1b-ea0b-d0f3-c6290631509e, Locale=pt_BR
2024-10-28 09:58:03 [http-nio-8080-exec-8] DEBUG o.s.g.s.webmvc.GraphQlHttpHandler - Execution result is ready.
2024-10-28 09:59:58 [main] INFO  com.example.demo.DemoApplication - Starting DemoApplication using Java 21.0.2 with PID 6376 (C:\dev\workspace\eclipse-2024\demo\target\classes started by Magna in C:\dev\workspace\eclipse-2024\demo)
2024-10-28 09:59:58 [main] DEBUG com.example.demo.DemoApplication - Running with Spring Boot v3.3.4, Spring v6.1.13
2024-10-28 09:59:58 [main] INFO  com.example.demo.DemoApplication - No active profile set, falling back to 1 default profile: "default"
2024-10-28 10:00:00 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-10-28 10:00:00 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.30]
2024-10-28 10:00:00 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-10-28 10:00:01 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-10-28 10:00:01 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final
2024-10-28 10:00:01 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-10-28 10:00:01 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-10-28 10:00:01 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3a8fb023
2024-10-28 10:00:01 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-10-28 10:00:02 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-10-28 10:00:03 [main] DEBUG c.e.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2024-10-28 10:00:03 [main] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
2024-10-28 10:00:03 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-10-28 10:00:03 [main] DEBUG o.s.g.d.m.a.s.AnnotatedControllerExceptionResolver - @GraphQlException methods in ControllerAdvice beans: none
2024-10-28 10:00:04 [main] INFO  o.s.g.e.DefaultSchemaResourceGraphQlSourceBuilder - Loaded 1 resource(s) in the GraphQL schema.
2024-10-28 10:00:04 [main] DEBUG o.s.g.e.DefaultSchemaResourceGraphQlSourceBuilder - Loaded GraphQL schema resources: (file [C:\dev\workspace\eclipse-2024\demo\target\classes\graphql\schema.graphqls])
2024-10-28 10:00:04 [main] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-10-28 10:00:04 [main] INFO  com.example.demo.DemoApplication - Started DemoApplication in 6.711 seconds (process running for 7.068)
2024-10-28 10:03:34 [main] INFO  c.example.demo.DemoApplicationTests - Starting DemoApplicationTests using Java 21.0.2 with PID 9052 (started by Magna in C:\dev\workspace\eclipse-2024\demo)
2024-10-28 10:03:34 [main] DEBUG c.example.demo.DemoApplicationTests - Running with Spring Boot v3.3.4, Spring v6.1.13
2024-10-28 10:03:34 [main] INFO  c.example.demo.DemoApplicationTests - No active profile set, falling back to 1 default profile: "default"
2024-10-28 10:03:35 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-10-28 10:03:35 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final
2024-10-28 10:03:35 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-10-28 10:03:36 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-10-28 10:03:36 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3d764641
2024-10-28 10:03:36 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-10-28 10:03:37 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-10-28 10:03:38 [main] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
2024-10-28 10:03:38 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-10-28 10:03:38 [main] DEBUG o.s.g.d.m.a.s.AnnotatedControllerExceptionResolver - @GraphQlException methods in ControllerAdvice beans: none
2024-10-28 10:03:38 [main] INFO  o.s.g.e.DefaultSchemaResourceGraphQlSourceBuilder - Loaded 1 resource(s) in the GraphQL schema.
2024-10-28 10:03:38 [main] DEBUG o.s.g.e.DefaultSchemaResourceGraphQlSourceBuilder - Loaded GraphQL schema resources: (file [C:\dev\workspace\eclipse-2024\demo\target\classes\graphql\schema.graphqls])
2024-10-28 10:03:39 [main] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-10-28 10:03:39 [main] INFO  c.example.demo.DemoApplicationTests - Started DemoApplicationTests in 5.961 seconds (process running for 6.922)
2024-10-28 10:03:40 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-10-28 10:03:40 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-10-28 10:03:44 [main] INFO  com.example.demo.DemoApplication - Starting DemoApplication using Java 21.0.2 with PID 17636 (C:\dev\workspace\eclipse-2024\demo\target\classes started by Magna in C:\dev\workspace\eclipse-2024\demo)
2024-10-28 10:03:44 [main] DEBUG com.example.demo.DemoApplication - Running with Spring Boot v3.3.4, Spring v6.1.13
2024-10-28 10:03:44 [main] INFO  com.example.demo.DemoApplication - No active profile set, falling back to 1 default profile: "default"
2024-10-28 10:03:46 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-10-28 10:03:46 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.30]
2024-10-28 10:03:46 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-10-28 10:03:46 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-10-28 10:03:46 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final
2024-10-28 10:03:46 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-10-28 10:03:46 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-10-28 10:03:47 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@102af1bb
2024-10-28 10:03:47 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-10-28 10:03:47 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-10-28 10:03:48 [main] DEBUG c.e.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2024-10-28 10:03:48 [main] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
2024-10-28 10:03:48 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-10-28 10:03:49 [main] DEBUG o.s.g.d.m.a.s.AnnotatedControllerExceptionResolver - @GraphQlException methods in ControllerAdvice beans: none
2024-10-28 10:03:49 [main] INFO  o.s.g.e.DefaultSchemaResourceGraphQlSourceBuilder - Loaded 1 resource(s) in the GraphQL schema.
2024-10-28 10:03:49 [main] DEBUG o.s.g.e.DefaultSchemaResourceGraphQlSourceBuilder - Loaded GraphQL schema resources: (file [C:\dev\workspace\eclipse-2024\demo\target\classes\graphql\schema.graphqls])
2024-10-28 10:03:49 [main] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-10-28 10:03:49 [main] INFO  com.example.demo.DemoApplication - Started DemoApplication in 6.022 seconds (process running for 6.35)
2024-10-28 10:05:17 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-10-28 10:05:17 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /graphql
2024-10-28 10:05:17 [http-nio-8080-exec-1] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com argumento[s] = [admin]
2024-10-28 10:05:17 [http-nio-8080-exec-1] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.repository.UsuarioRepository.findByUsername() com argumento[s] = [admin]
2024-10-28 10:05:17 [http-nio-8080-exec-1] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.repository.UsuarioRepository.findByUsername() com resultado = Optional[com.example.demo.model.Usuario@7d94d012]
2024-10-28 10:05:17 [http-nio-8080-exec-1] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com resultado = com.example.demo.model.Usuario@7d94d012
2024-10-28 10:05:17 [http-nio-8080-exec-1] INFO  c.e.d.s.JwtAuthenticationFilter - Usuário autenticado: admin
2024-10-28 10:05:17 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured POST /graphql
2024-10-28 10:05:17 [http-nio-8080-exec-1] DEBUG o.s.g.s.webmvc.GraphQlHttpHandler - Executing: document='query {
  listarLivros {
    id
    titulo
    autor
  }
}
', id=0f1ea63b-f9ef-9954-a4b7-59181e2ad55b, Locale=pt_BR
2024-10-28 10:05:17 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.util.List com.example.demo.controller.LivroGraphQLController.listarLivros(); target is of class [com.example.demo.controller.LivroGraphQLController]
2024-10-28 10:05:17 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.util.List com.example.demo.controller.LivroGraphQLController.listarLivros(); target is of class [com.example.demo.controller.LivroGraphQLController]
2024-10-28 10:05:17 [http-nio-8080-exec-1] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.controller.LivroGraphQLController.listarLivros() com argumento[s] = []
2024-10-28 10:05:17 [http-nio-8080-exec-1] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.LivroService.listarTodos() com argumento[s] = []
2024-10-28 10:05:17 [http-nio-8080-exec-1] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: org.springframework.data.repository.ListCrudRepository.findAll() com argumento[s] = []
2024-10-28 10:05:17 [http-nio-8080-exec-1] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: org.springframework.data.repository.ListCrudRepository.findAll() com resultado = [com.example.demo.model.Livro@33a930c9, com.example.demo.model.Livro@11b28a30]
2024-10-28 10:05:17 [http-nio-8080-exec-1] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.LivroService.listarTodos() com resultado = [com.example.demo.model.Livro@33a930c9, com.example.demo.model.Livro@11b28a30]
2024-10-28 10:05:17 [http-nio-8080-exec-1] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.controller.LivroGraphQLController.listarLivros() com resultado = [com.example.demo.model.Livro@33a930c9, com.example.demo.model.Livro@11b28a30]
2024-10-28 10:05:17 [http-nio-8080-exec-1] DEBUG o.s.g.s.webmvc.GraphQlHttpHandler - Execution result is ready.
2024-10-28 10:05:20 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing POST /graphql
2024-10-28 10:05:20 [http-nio-8080-exec-2] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com argumento[s] = [admin]
2024-10-28 10:05:20 [http-nio-8080-exec-2] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.repository.UsuarioRepository.findByUsername() com argumento[s] = [admin]
2024-10-28 10:05:20 [http-nio-8080-exec-2] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.repository.UsuarioRepository.findByUsername() com resultado = Optional[com.example.demo.model.Usuario@d656083]
2024-10-28 10:05:20 [http-nio-8080-exec-2] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com resultado = com.example.demo.model.Usuario@d656083
2024-10-28 10:05:20 [http-nio-8080-exec-2] INFO  c.e.d.s.JwtAuthenticationFilter - Usuário autenticado: admin
2024-10-28 10:05:20 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured POST /graphql
2024-10-28 10:05:20 [http-nio-8080-exec-2] DEBUG o.s.g.s.webmvc.GraphQlHttpHandler - Executing: document='mutation {
  cadastrarLivro(titulo: "Novo Livro", autor: "Autor Desconhecido") {
    id
    titulo
    autor
  }
}
', id=ca85bdce-40ae-2ae9-36c2-16c8e973c112, Locale=pt_BR
2024-10-28 10:05:20 [http-nio-8080-exec-2] DEBUG o.s.g.s.webmvc.GraphQlHttpHandler - Execution result is ready.
2024-10-28 10:06:02 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing POST /graphql
2024-10-28 10:06:02 [http-nio-8080-exec-3] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com argumento[s] = [admin]
2024-10-28 10:06:02 [http-nio-8080-exec-3] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.repository.UsuarioRepository.findByUsername() com argumento[s] = [admin]
2024-10-28 10:06:02 [http-nio-8080-exec-3] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.repository.UsuarioRepository.findByUsername() com resultado = Optional[com.example.demo.model.Usuario@2b4bf383]
2024-10-28 10:06:02 [http-nio-8080-exec-3] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com resultado = com.example.demo.model.Usuario@2b4bf383
2024-10-28 10:06:02 [http-nio-8080-exec-3] INFO  c.e.d.s.JwtAuthenticationFilter - Usuário autenticado: admin
2024-10-28 10:06:02 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured POST /graphql
2024-10-28 10:06:02 [http-nio-8080-exec-3] DEBUG o.s.g.s.webmvc.GraphQlHttpHandler - Executing: document='query {
  listarLivros {
    id
    titulo
    autor
  }
}
', id=14210d16-1388-b3e2-bbaf-9e476ac1504f, Locale=pt_BR
2024-10-28 10:06:02 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.util.List com.example.demo.controller.LivroGraphQLController.listarLivros(); target is of class [com.example.demo.controller.LivroGraphQLController]
2024-10-28 10:06:02 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.util.List com.example.demo.controller.LivroGraphQLController.listarLivros(); target is of class [com.example.demo.controller.LivroGraphQLController]
2024-10-28 10:06:02 [http-nio-8080-exec-3] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.controller.LivroGraphQLController.listarLivros() com argumento[s] = []
2024-10-28 10:06:02 [http-nio-8080-exec-3] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.LivroService.listarTodos() com argumento[s] = []
2024-10-28 10:06:02 [http-nio-8080-exec-3] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: org.springframework.data.repository.ListCrudRepository.findAll() com argumento[s] = []
2024-10-28 10:06:02 [http-nio-8080-exec-3] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: org.springframework.data.repository.ListCrudRepository.findAll() com resultado = [com.example.demo.model.Livro@1e2f0bcb, com.example.demo.model.Livro@713ec451]
2024-10-28 10:06:02 [http-nio-8080-exec-3] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.LivroService.listarTodos() com resultado = [com.example.demo.model.Livro@1e2f0bcb, com.example.demo.model.Livro@713ec451]
2024-10-28 10:06:02 [http-nio-8080-exec-3] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.controller.LivroGraphQLController.listarLivros() com resultado = [com.example.demo.model.Livro@1e2f0bcb, com.example.demo.model.Livro@713ec451]
2024-10-28 10:06:02 [http-nio-8080-exec-3] DEBUG o.s.g.s.webmvc.GraphQlHttpHandler - Execution result is ready.
2024-10-28 10:06:16 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing POST /graphql
2024-10-28 10:06:16 [http-nio-8080-exec-4] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com argumento[s] = [admin]
2024-10-28 10:06:16 [http-nio-8080-exec-4] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.repository.UsuarioRepository.findByUsername() com argumento[s] = [admin]
2024-10-28 10:06:16 [http-nio-8080-exec-4] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.repository.UsuarioRepository.findByUsername() com resultado = Optional[com.example.demo.model.Usuario@1638cadc]
2024-10-28 10:06:16 [http-nio-8080-exec-4] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com resultado = com.example.demo.model.Usuario@1638cadc
2024-10-28 10:06:16 [http-nio-8080-exec-4] INFO  c.e.d.s.JwtAuthenticationFilter - Usuário autenticado: admin
2024-10-28 10:06:16 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured POST /graphql
2024-10-28 10:06:16 [http-nio-8080-exec-4] DEBUG o.s.g.s.webmvc.GraphQlHttpHandler - Executing: document='mutation {
  cadastrarLivro(titulo: "Novo Livro", autor: "Autor Desconhecido") {
    id
    titulo
    autor
  }
}
mutation {
  atualizarLivro(id: 2, titulo: "Título Atualizado", autor: "Autor Atualizado") {
    id
    titulo
    autor

}
', id=9730b517-c4fb-30d2-770d-3cb7f4808d7b, Locale=pt_BR
2024-10-28 10:06:16 [http-nio-8080-exec-4] DEBUG o.s.g.s.webmvc.GraphQlHttpHandler - Execution result has errors: [InvalidSyntaxError{ message=Invalid syntax with offending token '<EOF>' at line 15 column 1 ,offendingToken=<EOF> ,locations=[SourceLocation{line=15, column=1}] ,sourcePreview=    autor

}
}].
2024-10-28 10:06:29 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing POST /graphql
2024-10-28 10:06:29 [http-nio-8080-exec-5] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com argumento[s] = [admin]
2024-10-28 10:06:29 [http-nio-8080-exec-5] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.repository.UsuarioRepository.findByUsername() com argumento[s] = [admin]
2024-10-28 10:06:29 [http-nio-8080-exec-5] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.repository.UsuarioRepository.findByUsername() com resultado = Optional[com.example.demo.model.Usuario@36a0861a]
2024-10-28 10:06:29 [http-nio-8080-exec-5] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com resultado = com.example.demo.model.Usuario@36a0861a
2024-10-28 10:06:29 [http-nio-8080-exec-5] INFO  c.e.d.s.JwtAuthenticationFilter - Usuário autenticado: admin
2024-10-28 10:06:29 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured POST /graphql
2024-10-28 10:06:29 [http-nio-8080-exec-5] DEBUG o.s.g.s.webmvc.GraphQlHttpHandler - Executing: document='
mutation {
  atualizarLivro(id: 2, titulo: "Título Atualizado", autor: "Autor Atualizado") {
    id
    titulo
    autor

}
', id=a8c1337d-2b08-71e7-773f-c991774aad71, Locale=pt_BR
2024-10-28 10:06:29 [http-nio-8080-exec-5] DEBUG o.s.g.s.webmvc.GraphQlHttpHandler - Execution result has errors: [InvalidSyntaxError{ message=Invalid syntax with offending token '<EOF>' at line 9 column 1 ,offendingToken=<EOF> ,locations=[SourceLocation{line=9, column=1}] ,sourcePreview=    autor

}
}].
2024-10-28 10:06:55 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing POST /graphql
2024-10-28 10:06:55 [http-nio-8080-exec-6] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com argumento[s] = [admin]
2024-10-28 10:06:55 [http-nio-8080-exec-6] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.repository.UsuarioRepository.findByUsername() com argumento[s] = [admin]
2024-10-28 10:06:55 [http-nio-8080-exec-6] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.repository.UsuarioRepository.findByUsername() com resultado = Optional[com.example.demo.model.Usuario@cd70d7f]
2024-10-28 10:06:55 [http-nio-8080-exec-6] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com resultado = com.example.demo.model.Usuario@cd70d7f
2024-10-28 10:06:55 [http-nio-8080-exec-6] INFO  c.e.d.s.JwtAuthenticationFilter - Usuário autenticado: admin
2024-10-28 10:06:55 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured POST /graphql
2024-10-28 10:06:55 [http-nio-8080-exec-6] DEBUG o.s.g.s.webmvc.GraphQlHttpHandler - Executing: document='
mutation {
  atualizarLivro(id: 2, titulo: "Título Atualizado", autor: "Autor Atualizado") {
    id
    titulo
    autor

}
', id=15e14174-26e2-8d2f-f6fa-e56416d4fb82, Locale=pt_BR
2024-10-28 10:06:55 [http-nio-8080-exec-6] DEBUG o.s.g.s.webmvc.GraphQlHttpHandler - Execution result has errors: [InvalidSyntaxError{ message=Invalid syntax with offending token '<EOF>' at line 9 column 1 ,offendingToken=<EOF> ,locations=[SourceLocation{line=9, column=1}] ,sourcePreview=    autor

}
}].
2024-10-28 10:07:45 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing POST /graphql
2024-10-28 10:07:45 [http-nio-8080-exec-8] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com argumento[s] = [admin]
2024-10-28 10:07:45 [http-nio-8080-exec-8] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.repository.UsuarioRepository.findByUsername() com argumento[s] = [admin]
2024-10-28 10:07:45 [http-nio-8080-exec-8] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.repository.UsuarioRepository.findByUsername() com resultado = Optional[com.example.demo.model.Usuario@e084737]
2024-10-28 10:07:45 [http-nio-8080-exec-8] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com resultado = com.example.demo.model.Usuario@e084737
2024-10-28 10:07:45 [http-nio-8080-exec-8] INFO  c.e.d.s.JwtAuthenticationFilter - Usuário autenticado: admin
2024-10-28 10:07:45 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured POST /graphql
2024-10-28 10:07:45 [http-nio-8080-exec-8] DEBUG o.s.g.s.webmvc.GraphQlHttpHandler - Executing: document='mutation {
  atualizarLivro(id: 2, titulo: "Título Atualizado", autor: "Autor Atualizado") {
    id
    titulo
    autor
  }
}
', id=20b60a89-400d-5a60-0383-1f6af61ba8f3, Locale=pt_BR
2024-10-28 10:07:45 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public com.example.demo.model.Livro com.example.demo.controller.LivroGraphQLController.atualizarLivro(java.lang.Long,java.lang.String,java.lang.String); target is of class [com.example.demo.controller.LivroGraphQLController]
2024-10-28 10:07:45 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public com.example.demo.model.Livro com.example.demo.controller.LivroGraphQLController.atualizarLivro(java.lang.Long,java.lang.String,java.lang.String); target is of class [com.example.demo.controller.LivroGraphQLController]
2024-10-28 10:07:45 [http-nio-8080-exec-8] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.controller.LivroGraphQLController.atualizarLivro() com argumento[s] = [2, Título Atualizado, Autor Atualizado]
2024-10-28 10:07:45 [http-nio-8080-exec-8] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.LivroService.atualizar() com argumento[s] = [2, com.example.demo.model.Livro@3ef7c65c]
2024-10-28 10:07:45 [http-nio-8080-exec-8] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: org.springframework.data.repository.CrudRepository.findById() com argumento[s] = [2]
2024-10-28 10:07:45 [http-nio-8080-exec-8] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: org.springframework.data.repository.CrudRepository.findById() com resultado = Optional[com.example.demo.model.Livro@5427bf02]
2024-10-28 10:07:45 [http-nio-8080-exec-8] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: org.springframework.data.repository.CrudRepository.save() com argumento[s] = [com.example.demo.model.Livro@5427bf02]
2024-10-28 10:07:45 [http-nio-8080-exec-8] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: org.springframework.data.repository.CrudRepository.save() com resultado = com.example.demo.model.Livro@5427bf02
2024-10-28 10:07:45 [http-nio-8080-exec-8] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.LivroService.atualizar() com resultado = com.example.demo.model.Livro@5427bf02
2024-10-28 10:07:45 [http-nio-8080-exec-8] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.controller.LivroGraphQLController.atualizarLivro() com resultado = com.example.demo.model.Livro@5427bf02
2024-10-28 10:07:45 [http-nio-8080-exec-8] DEBUG o.s.g.s.webmvc.GraphQlHttpHandler - Execution result is ready.
2024-10-28 10:07:58 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing POST /graphql
2024-10-28 10:07:58 [http-nio-8080-exec-9] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com argumento[s] = [admin]
2024-10-28 10:07:58 [http-nio-8080-exec-9] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.repository.UsuarioRepository.findByUsername() com argumento[s] = [admin]
2024-10-28 10:07:58 [http-nio-8080-exec-9] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.repository.UsuarioRepository.findByUsername() com resultado = Optional[com.example.demo.model.Usuario@59906f90]
2024-10-28 10:07:58 [http-nio-8080-exec-9] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com resultado = com.example.demo.model.Usuario@59906f90
2024-10-28 10:07:58 [http-nio-8080-exec-9] INFO  c.e.d.s.JwtAuthenticationFilter - Usuário autenticado: admin
2024-10-28 10:07:58 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured POST /graphql
2024-10-28 10:07:58 [http-nio-8080-exec-9] DEBUG o.s.g.s.webmvc.GraphQlHttpHandler - Executing: document='query {
  listarLivros {
    id
    titulo
    autor
  }
}
', id=cbc98a17-afcb-a862-5f8b-4d4959db5912, Locale=pt_BR
2024-10-28 10:07:58 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.util.List com.example.demo.controller.LivroGraphQLController.listarLivros(); target is of class [com.example.demo.controller.LivroGraphQLController]
2024-10-28 10:07:58 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.util.List com.example.demo.controller.LivroGraphQLController.listarLivros(); target is of class [com.example.demo.controller.LivroGraphQLController]
2024-10-28 10:07:58 [http-nio-8080-exec-9] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.controller.LivroGraphQLController.listarLivros() com argumento[s] = []
2024-10-28 10:07:58 [http-nio-8080-exec-9] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.LivroService.listarTodos() com argumento[s] = []
2024-10-28 10:07:58 [http-nio-8080-exec-9] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: org.springframework.data.repository.ListCrudRepository.findAll() com argumento[s] = []
2024-10-28 10:07:58 [http-nio-8080-exec-9] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: org.springframework.data.repository.ListCrudRepository.findAll() com resultado = [com.example.demo.model.Livro@4bee59e4, com.example.demo.model.Livro@63a46184]
2024-10-28 10:07:58 [http-nio-8080-exec-9] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.LivroService.listarTodos() com resultado = [com.example.demo.model.Livro@4bee59e4, com.example.demo.model.Livro@63a46184]
2024-10-28 10:07:58 [http-nio-8080-exec-9] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.controller.LivroGraphQLController.listarLivros() com resultado = [com.example.demo.model.Livro@4bee59e4, com.example.demo.model.Livro@63a46184]
2024-10-28 10:07:58 [http-nio-8080-exec-9] DEBUG o.s.g.s.webmvc.GraphQlHttpHandler - Execution result is ready.
2024-10-28 10:08:20 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing POST /graphql
2024-10-28 10:08:20 [http-nio-8080-exec-7] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com argumento[s] = [admin]
2024-10-28 10:08:20 [http-nio-8080-exec-7] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.repository.UsuarioRepository.findByUsername() com argumento[s] = [admin]
2024-10-28 10:08:20 [http-nio-8080-exec-7] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.repository.UsuarioRepository.findByUsername() com resultado = Optional[com.example.demo.model.Usuario@103eb914]
2024-10-28 10:08:20 [http-nio-8080-exec-7] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com resultado = com.example.demo.model.Usuario@103eb914
2024-10-28 10:08:20 [http-nio-8080-exec-7] INFO  c.e.d.s.JwtAuthenticationFilter - Usuário autenticado: admin
2024-10-28 10:08:20 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured POST /graphql
2024-10-28 10:08:20 [http-nio-8080-exec-7] DEBUG o.s.g.s.webmvc.GraphQlHttpHandler - Executing: document='mutation {
  cadastrarLivro(titulo: "Novo Livro", autor: "Autor Desconhecido") {
    id
    titulo
    autor
  }
}
', id=56fe050a-8419-990c-abe5-1f74ea964252, Locale=pt_BR
2024-10-28 10:08:20 [http-nio-8080-exec-7] DEBUG o.s.g.s.webmvc.GraphQlHttpHandler - Execution result is ready.
2024-10-28 10:10:38 [main] INFO  com.example.demo.DemoApplication - Starting DemoApplication using Java 21.0.2 with PID 13272 (C:\dev\workspace\eclipse-2024\demo\target\classes started by Magna in C:\dev\workspace\eclipse-2024\demo)
2024-10-28 10:10:38 [main] DEBUG com.example.demo.DemoApplication - Running with Spring Boot v3.3.4, Spring v6.1.13
2024-10-28 10:10:38 [main] INFO  com.example.demo.DemoApplication - No active profile set, falling back to 1 default profile: "default"
2024-10-28 10:10:40 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-10-28 10:10:40 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.30]
2024-10-28 10:10:40 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-10-28 10:10:40 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-10-28 10:10:40 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final
2024-10-28 10:10:40 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-10-28 10:10:41 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-10-28 10:10:41 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@102af1bb
2024-10-28 10:10:41 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-10-28 10:10:42 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-10-28 10:10:43 [main] DEBUG c.e.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2024-10-28 10:10:43 [main] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
2024-10-28 10:10:43 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-10-28 10:10:43 [main] DEBUG o.s.g.d.m.a.s.AnnotatedControllerExceptionResolver - @GraphQlException methods in ControllerAdvice beans: none
2024-10-28 10:10:44 [main] INFO  o.s.g.e.DefaultSchemaResourceGraphQlSourceBuilder - Loaded 1 resource(s) in the GraphQL schema.
2024-10-28 10:10:44 [main] DEBUG o.s.g.e.DefaultSchemaResourceGraphQlSourceBuilder - Loaded GraphQL schema resources: (file [C:\dev\workspace\eclipse-2024\demo\target\classes\graphql\schema.graphqls])
2024-10-28 10:10:44 [main] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-10-28 10:10:44 [main] INFO  com.example.demo.DemoApplication - Started DemoApplication in 6.395 seconds (process running for 6.713)
2024-10-28 10:11:06 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-10-28 10:11:06 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /graphql
2024-10-28 10:11:06 [http-nio-8080-exec-1] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com argumento[s] = [admin]
2024-10-28 10:11:06 [http-nio-8080-exec-1] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.repository.UsuarioRepository.findByUsername() com argumento[s] = [admin]
2024-10-28 10:11:06 [http-nio-8080-exec-1] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.repository.UsuarioRepository.findByUsername() com resultado = Optional[com.example.demo.model.Usuario@6e724e8d]
2024-10-28 10:11:06 [http-nio-8080-exec-1] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com resultado = com.example.demo.model.Usuario@6e724e8d
2024-10-28 10:11:06 [http-nio-8080-exec-1] INFO  c.e.d.s.JwtAuthenticationFilter - Usuário autenticado: admin
2024-10-28 10:11:06 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured POST /graphql
2024-10-28 10:11:06 [http-nio-8080-exec-1] DEBUG o.s.g.s.webmvc.GraphQlHttpHandler - Executing: document='query {
  listarLivros {
    id
    titulo
    autor
  }
}
', id=af0506d8-ef13-9576-3dcf-c40e853bdc64, Locale=pt_BR
2024-10-28 10:11:06 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.util.List com.example.demo.controller.LivroGraphQLController.listarLivros(); target is of class [com.example.demo.controller.LivroGraphQLController]
2024-10-28 10:11:06 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.util.List com.example.demo.controller.LivroGraphQLController.listarLivros(); target is of class [com.example.demo.controller.LivroGraphQLController]
2024-10-28 10:11:06 [http-nio-8080-exec-1] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.controller.LivroGraphQLController.listarLivros() com argumento[s] = []
2024-10-28 10:11:06 [http-nio-8080-exec-1] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.LivroService.listarTodos() com argumento[s] = []
2024-10-28 10:11:06 [http-nio-8080-exec-1] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: org.springframework.data.repository.ListCrudRepository.findAll() com argumento[s] = []
2024-10-28 10:11:06 [http-nio-8080-exec-1] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: org.springframework.data.repository.ListCrudRepository.findAll() com resultado = [com.example.demo.model.Livro@37ff063d, com.example.demo.model.Livro@78d2363c]
2024-10-28 10:11:06 [http-nio-8080-exec-1] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.LivroService.listarTodos() com resultado = [com.example.demo.model.Livro@37ff063d, com.example.demo.model.Livro@78d2363c]
2024-10-28 10:11:06 [http-nio-8080-exec-1] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.controller.LivroGraphQLController.listarLivros() com resultado = [com.example.demo.model.Livro@37ff063d, com.example.demo.model.Livro@78d2363c]
2024-10-28 10:11:06 [http-nio-8080-exec-1] DEBUG o.s.g.s.webmvc.GraphQlHttpHandler - Execution result is ready.
2024-10-28 10:11:09 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing POST /graphql
2024-10-28 10:11:09 [http-nio-8080-exec-2] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com argumento[s] = [admin]
2024-10-28 10:11:09 [http-nio-8080-exec-2] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.repository.UsuarioRepository.findByUsername() com argumento[s] = [admin]
2024-10-28 10:11:09 [http-nio-8080-exec-2] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.repository.UsuarioRepository.findByUsername() com resultado = Optional[com.example.demo.model.Usuario@2fd3e751]
2024-10-28 10:11:09 [http-nio-8080-exec-2] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com resultado = com.example.demo.model.Usuario@2fd3e751
2024-10-28 10:11:09 [http-nio-8080-exec-2] INFO  c.e.d.s.JwtAuthenticationFilter - Usuário autenticado: admin
2024-10-28 10:11:09 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured POST /graphql
2024-10-28 10:11:09 [http-nio-8080-exec-2] DEBUG o.s.g.s.webmvc.GraphQlHttpHandler - Executing: document='mutation {
  cadastrarLivro(titulo: "Novo Livro", autor: "Autor Desconhecido") {
    id
    titulo
    autor
  }
}
', id=3eefe353-0835-a3e2-256a-63c6816dd9d5, Locale=pt_BR
2024-10-28 10:11:09 [http-nio-8080-exec-2] DEBUG o.s.g.s.webmvc.GraphQlHttpHandler - Execution result is ready.
2024-10-28 10:15:02 [main] INFO  com.example.demo.DemoApplication - Starting DemoApplication using Java 21.0.2 with PID 10372 (C:\dev\workspace\eclipse-2024\demo\target\classes started by Magna in C:\dev\workspace\eclipse-2024\demo)
2024-10-28 10:15:02 [main] DEBUG com.example.demo.DemoApplication - Running with Spring Boot v3.3.4, Spring v6.1.13
2024-10-28 10:15:02 [main] INFO  com.example.demo.DemoApplication - No active profile set, falling back to 1 default profile: "default"
2024-10-28 10:15:04 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-10-28 10:15:04 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.30]
2024-10-28 10:15:04 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-10-28 10:15:04 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-10-28 10:15:04 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final
2024-10-28 10:15:04 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-10-28 10:15:05 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-10-28 10:15:05 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6f68756d
2024-10-28 10:15:05 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-10-28 10:15:06 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-10-28 10:15:06 [main] DEBUG c.e.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2024-10-28 10:15:06 [main] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
2024-10-28 10:15:06 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-10-28 10:15:07 [main] DEBUG o.s.g.d.m.a.s.AnnotatedControllerExceptionResolver - @GraphQlException methods in ControllerAdvice beans: none
2024-10-28 10:15:07 [main] INFO  o.s.g.e.DefaultSchemaResourceGraphQlSourceBuilder - Loaded 1 resource(s) in the GraphQL schema.
2024-10-28 10:15:07 [main] DEBUG o.s.g.e.DefaultSchemaResourceGraphQlSourceBuilder - Loaded GraphQL schema resources: (file [C:\dev\workspace\eclipse-2024\demo\target\classes\graphql\schema.graphqls])
2024-10-28 10:15:07 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'filterChain' defined in class path resource [com/example/demo/config/SecurityConfig.class]: Failed to instantiate [org.springframework.security.web.SecurityFilterChain]: Factory method 'filterChain' threw exception with message: Error creating bean with name 'mvcHandlerMappingIntrospector' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Error creating bean with name 'routerFunctionMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Error creating bean with name 'graphQlRouterFunction' defined in class path resource [org/springframework/boot/autoconfigure/graphql/servlet/GraphQlWebMvcAutoConfiguration.class]: Unsatisfied dependency expressed through method 'graphQlRouterFunction' parameter 0: Error creating bean with name 'graphQlHttpHandler' defined in class path resource [org/springframework/boot/autoconfigure/graphql/servlet/GraphQlWebMvcAutoConfiguration.class]: Unsatisfied dependency expressed through method 'graphQlHttpHandler' parameter 0: Error creating bean with name 'webGraphQlHandler' defined in class path resource [org/springframework/boot/autoconfigure/graphql/servlet/GraphQlWebMvcAutoConfiguration.class]: Unsatisfied dependency expressed through method 'webGraphQlHandler' parameter 0: Error creating bean with name 'executionGraphQlService' defined in class path resource [org/springframework/boot/autoconfigure/graphql/GraphQlAutoConfiguration.class]: Unsatisfied dependency expressed through method 'executionGraphQlService' parameter 0: Error creating bean with name 'graphQlSource' defined in class path resource [org/springframework/boot/autoconfigure/graphql/GraphQlAutoConfiguration.class]: Failed to instantiate [org.springframework.graphql.execution.GraphQlSource]: Factory method 'graphQlSource' threw exception with message: errors=[The field type 'Long' is not present when resolving type 'Livro' [@1:1]]
2024-10-28 10:15:07 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-10-28 10:15:07 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-10-28 10:15:07 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2024-10-28 10:15:07 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'filterChain' defined in class path resource [com/example/demo/config/SecurityConfig.class]: Failed to instantiate [org.springframework.security.web.SecurityFilterChain]: Factory method 'filterChain' threw exception with message: Error creating bean with name 'mvcHandlerMappingIntrospector' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Error creating bean with name 'routerFunctionMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Error creating bean with name 'graphQlRouterFunction' defined in class path resource [org/springframework/boot/autoconfigure/graphql/servlet/GraphQlWebMvcAutoConfiguration.class]: Unsatisfied dependency expressed through method 'graphQlRouterFunction' parameter 0: Error creating bean with name 'graphQlHttpHandler' defined in class path resource [org/springframework/boot/autoconfigure/graphql/servlet/GraphQlWebMvcAutoConfiguration.class]: Unsatisfied dependency expressed through method 'graphQlHttpHandler' parameter 0: Error creating bean with name 'webGraphQlHandler' defined in class path resource [org/springframework/boot/autoconfigure/graphql/servlet/GraphQlWebMvcAutoConfiguration.class]: Unsatisfied dependency expressed through method 'webGraphQlHandler' parameter 0: Error creating bean with name 'executionGraphQlService' defined in class path resource [org/springframework/boot/autoconfigure/graphql/GraphQlAutoConfiguration.class]: Unsatisfied dependency expressed through method 'executionGraphQlService' parameter 0: Error creating bean with name 'graphQlSource' defined in class path resource [org/springframework/boot/autoconfigure/graphql/GraphQlAutoConfiguration.class]: Failed to instantiate [org.springframework.graphql.execution.GraphQlSource]: Factory method 'graphQlSource' threw exception with message: errors=[The field type 'Long' is not present when resolving type 'Livro' [@1:1]]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:648)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:636)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.demo.DemoApplication.main(DemoApplication.java:10)
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.security.web.SecurityFilterChain]: Factory method 'filterChain' threw exception with message: Error creating bean with name 'mvcHandlerMappingIntrospector' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Error creating bean with name 'routerFunctionMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Error creating bean with name 'graphQlRouterFunction' defined in class path resource [org/springframework/boot/autoconfigure/graphql/servlet/GraphQlWebMvcAutoConfiguration.class]: Unsatisfied dependency expressed through method 'graphQlRouterFunction' parameter 0: Error creating bean with name 'graphQlHttpHandler' defined in class path resource [org/springframework/boot/autoconfigure/graphql/servlet/GraphQlWebMvcAutoConfiguration.class]: Unsatisfied dependency expressed through method 'graphQlHttpHandler' parameter 0: Error creating bean with name 'webGraphQlHandler' defined in class path resource [org/springframework/boot/autoconfigure/graphql/servlet/GraphQlWebMvcAutoConfiguration.class]: Unsatisfied dependency expressed through method 'webGraphQlHandler' parameter 0: Error creating bean with name 'executionGraphQlService' defined in class path resource [org/springframework/boot/autoconfigure/graphql/GraphQlAutoConfiguration.class]: Unsatisfied dependency expressed through method 'executionGraphQlService' parameter 0: Error creating bean with name 'graphQlSource' defined in class path resource [org/springframework/boot/autoconfigure/graphql/GraphQlAutoConfiguration.class]: Failed to instantiate [org.springframework.graphql.execution.GraphQlSource]: Factory method 'graphQlSource' threw exception with message: errors=[The field type 'Long' is not present when resolving type 'Livro' [@1:1]]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:178)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:644)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'mvcHandlerMappingIntrospector' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Error creating bean with name 'routerFunctionMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Error creating bean with name 'graphQlRouterFunction' defined in class path resource [org/springframework/boot/autoconfigure/graphql/servlet/GraphQlWebMvcAutoConfiguration.class]: Unsatisfied dependency expressed through method 'graphQlRouterFunction' parameter 0: Error creating bean with name 'graphQlHttpHandler' defined in class path resource [org/springframework/boot/autoconfigure/graphql/servlet/GraphQlWebMvcAutoConfiguration.class]: Unsatisfied dependency expressed through method 'graphQlHttpHandler' parameter 0: Error creating bean with name 'webGraphQlHandler' defined in class path resource [org/springframework/boot/autoconfigure/graphql/servlet/GraphQlWebMvcAutoConfiguration.class]: Unsatisfied dependency expressed through method 'webGraphQlHandler' parameter 0: Error creating bean with name 'executionGraphQlService' defined in class path resource [org/springframework/boot/autoconfigure/graphql/GraphQlAutoConfiguration.class]: Unsatisfied dependency expressed through method 'executionGraphQlService' parameter 0: Error creating bean with name 'graphQlSource' defined in class path resource [org/springframework/boot/autoconfigure/graphql/GraphQlAutoConfiguration.class]: Failed to instantiate [org.springframework.graphql.execution.GraphQlSource]: Factory method 'graphQlSource' threw exception with message: errors=[The field type 'Long' is not present when resolving type 'Livro' [@1:1]]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1806)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1249)
	at org.springframework.security.config.annotation.web.AbstractRequestMatcherRegistry.createMvcMatchers(AbstractRequestMatcherRegistry.java:122)
	at org.springframework.security.config.annotation.web.AbstractRequestMatcherRegistry.requestMatchers(AbstractRequestMatcherRegistry.java:212)
	at org.springframework.security.config.annotation.web.AbstractRequestMatcherRegistry.requestMatchers(AbstractRequestMatcherRegistry.java:350)
	at com.example.demo.config.SecurityConfig.lambda$filterChain$2(SecurityConfig.java:41)
	at org.springframework.security.config.annotation.web.builders.HttpSecurity.authorizeHttpRequests(HttpSecurity.java:1467)
	at com.example.demo.config.SecurityConfig.filterChain(SecurityConfig.java:39)
	at com.example.demo.config.SecurityConfig$$SpringCGLIB$$0.CGLIB$filterChain$0(<generated>)
	at com.example.demo.config.SecurityConfig$$SpringCGLIB$$FastClass$$1.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:258)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:348)
	at com.example.demo.config.SecurityConfig$$SpringCGLIB$$0.filterChain(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:146)
	... 20 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'routerFunctionMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Error creating bean with name 'graphQlRouterFunction' defined in class path resource [org/springframework/boot/autoconfigure/graphql/servlet/GraphQlWebMvcAutoConfiguration.class]: Unsatisfied dependency expressed through method 'graphQlRouterFunction' parameter 0: Error creating bean with name 'graphQlHttpHandler' defined in class path resource [org/springframework/boot/autoconfigure/graphql/servlet/GraphQlWebMvcAutoConfiguration.class]: Unsatisfied dependency expressed through method 'graphQlHttpHandler' parameter 0: Error creating bean with name 'webGraphQlHandler' defined in class path resource [org/springframework/boot/autoconfigure/graphql/servlet/GraphQlWebMvcAutoConfiguration.class]: Unsatisfied dependency expressed through method 'webGraphQlHandler' parameter 0: Error creating bean with name 'executionGraphQlService' defined in class path resource [org/springframework/boot/autoconfigure/graphql/GraphQlAutoConfiguration.class]: Unsatisfied dependency expressed through method 'executionGraphQlService' parameter 0: Error creating bean with name 'graphQlSource' defined in class path resource [org/springframework/boot/autoconfigure/graphql/GraphQlAutoConfiguration.class]: Failed to instantiate [org.springframework.graphql.execution.GraphQlSource]: Factory method 'graphQlSource' threw exception with message: errors=[The field type 'Long' is not present when resolving type 'Livro' [@1:1]]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1806)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:665)
	at org.springframework.context.support.AbstractApplicationContext.getBeansOfType(AbstractApplicationContext.java:1397)
	at org.springframework.beans.factory.BeanFactoryUtils.beansOfTypeIncludingAncestors(BeanFactoryUtils.java:368)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.initHandlerMappings(HandlerMappingIntrospector.java:130)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.afterPropertiesSet(HandlerMappingIntrospector.java:118)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	... 41 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'graphQlRouterFunction' defined in class path resource [org/springframework/boot/autoconfigure/graphql/servlet/GraphQlWebMvcAutoConfiguration.class]: Unsatisfied dependency expressed through method 'graphQlRouterFunction' parameter 0: Error creating bean with name 'graphQlHttpHandler' defined in class path resource [org/springframework/boot/autoconfigure/graphql/servlet/GraphQlWebMvcAutoConfiguration.class]: Unsatisfied dependency expressed through method 'graphQlHttpHandler' parameter 0: Error creating bean with name 'webGraphQlHandler' defined in class path resource [org/springframework/boot/autoconfigure/graphql/servlet/GraphQlWebMvcAutoConfiguration.class]: Unsatisfied dependency expressed through method 'webGraphQlHandler' parameter 0: Error creating bean with name 'executionGraphQlService' defined in class path resource [org/springframework/boot/autoconfigure/graphql/GraphQlAutoConfiguration.class]: Unsatisfied dependency expressed through method 'executionGraphQlService' parameter 0: Error creating bean with name 'graphQlSource' defined in class path resource [org/springframework/boot/autoconfigure/graphql/GraphQlAutoConfiguration.class]: Failed to instantiate [org.springframework.graphql.execution.GraphQlSource]: Factory method 'graphQlSource' threw exception with message: errors=[The field type 'Long' is not present when resolving type 'Livro' [@1:1]]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:542)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory$1.orderedStream(DefaultListableBeanFactory.java:473)
	at org.springframework.web.servlet.function.support.RouterFunctionMapping.initRouterFunctions(RouterFunctionMapping.java:152)
	at org.springframework.web.servlet.function.support.RouterFunctionMapping.afterPropertiesSet(RouterFunctionMapping.java:130)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	... 54 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'graphQlHttpHandler' defined in class path resource [org/springframework/boot/autoconfigure/graphql/servlet/GraphQlWebMvcAutoConfiguration.class]: Unsatisfied dependency expressed through method 'graphQlHttpHandler' parameter 0: Error creating bean with name 'webGraphQlHandler' defined in class path resource [org/springframework/boot/autoconfigure/graphql/servlet/GraphQlWebMvcAutoConfiguration.class]: Unsatisfied dependency expressed through method 'webGraphQlHandler' parameter 0: Error creating bean with name 'executionGraphQlService' defined in class path resource [org/springframework/boot/autoconfigure/graphql/GraphQlAutoConfiguration.class]: Unsatisfied dependency expressed through method 'executionGraphQlService' parameter 0: Error creating bean with name 'graphQlSource' defined in class path resource [org/springframework/boot/autoconfigure/graphql/GraphQlAutoConfiguration.class]: Failed to instantiate [org.springframework.graphql.execution.GraphQlSource]: Factory method 'graphQlSource' threw exception with message: errors=[The field type 'Long' is not present when resolving type 'Livro' [@1:1]]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:542)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	... 68 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'webGraphQlHandler' defined in class path resource [org/springframework/boot/autoconfigure/graphql/servlet/GraphQlWebMvcAutoConfiguration.class]: Unsatisfied dependency expressed through method 'webGraphQlHandler' parameter 0: Error creating bean with name 'executionGraphQlService' defined in class path resource [org/springframework/boot/autoconfigure/graphql/GraphQlAutoConfiguration.class]: Unsatisfied dependency expressed through method 'executionGraphQlService' parameter 0: Error creating bean with name 'graphQlSource' defined in class path resource [org/springframework/boot/autoconfigure/graphql/GraphQlAutoConfiguration.class]: Failed to instantiate [org.springframework.graphql.execution.GraphQlSource]: Factory method 'graphQlSource' threw exception with message: errors=[The field type 'Long' is not present when resolving type 'Livro' [@1:1]]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:542)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	... 82 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'executionGraphQlService' defined in class path resource [org/springframework/boot/autoconfigure/graphql/GraphQlAutoConfiguration.class]: Unsatisfied dependency expressed through method 'executionGraphQlService' parameter 0: Error creating bean with name 'graphQlSource' defined in class path resource [org/springframework/boot/autoconfigure/graphql/GraphQlAutoConfiguration.class]: Failed to instantiate [org.springframework.graphql.execution.GraphQlSource]: Factory method 'graphQlSource' threw exception with message: errors=[The field type 'Long' is not present when resolving type 'Livro' [@1:1]]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:542)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	... 96 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'graphQlSource' defined in class path resource [org/springframework/boot/autoconfigure/graphql/GraphQlAutoConfiguration.class]: Failed to instantiate [org.springframework.graphql.execution.GraphQlSource]: Factory method 'graphQlSource' threw exception with message: errors=[The field type 'Long' is not present when resolving type 'Livro' [@1:1]]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:648)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:636)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	... 110 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.graphql.execution.GraphQlSource]: Factory method 'graphQlSource' threw exception with message: errors=[The field type 'Long' is not present when resolving type 'Livro' [@1:1]]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:178)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:644)
	... 124 common frames omitted
Caused by: graphql.schema.idl.errors.SchemaProblem: errors=[The field type 'Long' is not present when resolving type 'Livro' [@1:1]]
	at graphql.schema.idl.SchemaGenerator.makeExecutableSchema(SchemaGenerator.java:108)
	at graphql.schema.idl.SchemaGenerator.makeExecutableSchema(SchemaGenerator.java:84)
	at org.springframework.graphql.execution.DefaultSchemaResourceGraphQlSourceBuilder.initGraphQlSchema(DefaultSchemaResourceGraphQlSourceBuilder.java:175)
	at org.springframework.graphql.execution.AbstractGraphQlSourceBuilder.build(AbstractGraphQlSourceBuilder.java:106)
	at org.springframework.boot.autoconfigure.graphql.GraphQlAutoConfiguration.graphQlSource(GraphQlAutoConfiguration.java:115)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:146)
	... 125 common frames omitted
2024-10-28 10:19:59 [main] INFO  c.example.demo.DemoApplicationTests - Starting DemoApplicationTests using Java 21.0.2 with PID 17788 (started by Magna in C:\dev\workspace\eclipse-2024\demo)
2024-10-28 10:19:59 [main] DEBUG c.example.demo.DemoApplicationTests - Running with Spring Boot v3.3.4, Spring v6.1.13
2024-10-28 10:19:59 [main] INFO  c.example.demo.DemoApplicationTests - No active profile set, falling back to 1 default profile: "default"
2024-10-28 10:20:01 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-10-28 10:20:01 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final
2024-10-28 10:20:01 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-10-28 10:20:02 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-10-28 10:20:02 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3c3ab672
2024-10-28 10:20:02 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-10-28 10:20:03 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-10-28 10:20:03 [main] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
2024-10-28 10:20:03 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-10-28 10:20:04 [main] DEBUG o.s.g.d.m.a.s.AnnotatedControllerExceptionResolver - @GraphQlException methods in ControllerAdvice beans: none
2024-10-28 10:20:04 [main] INFO  o.s.g.e.DefaultSchemaResourceGraphQlSourceBuilder - Loaded 1 resource(s) in the GraphQL schema.
2024-10-28 10:20:04 [main] DEBUG o.s.g.e.DefaultSchemaResourceGraphQlSourceBuilder - Loaded GraphQL schema resources: (file [C:\dev\workspace\eclipse-2024\demo\target\classes\graphql\schema.graphqls])
2024-10-28 10:20:04 [main] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-10-28 10:20:05 [main] INFO  c.example.demo.DemoApplicationTests - Started DemoApplicationTests in 5.659 seconds (process running for 6.53)
2024-10-28 10:20:05 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-10-28 10:20:05 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-10-28 10:20:59 [main] INFO  com.example.demo.DemoApplication - Starting DemoApplication using Java 21.0.2 with PID 8880 (C:\dev\workspace\eclipse-2024\demo\target\classes started by Magna in C:\dev\workspace\eclipse-2024\demo)
2024-10-28 10:20:59 [main] DEBUG com.example.demo.DemoApplication - Running with Spring Boot v3.3.4, Spring v6.1.13
2024-10-28 10:20:59 [main] INFO  com.example.demo.DemoApplication - No active profile set, falling back to 1 default profile: "default"
2024-10-28 10:21:01 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-10-28 10:21:01 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.30]
2024-10-28 10:21:01 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-10-28 10:21:01 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-10-28 10:21:01 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final
2024-10-28 10:21:01 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-10-28 10:21:02 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-10-28 10:21:02 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3fe8ad3f
2024-10-28 10:21:02 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-10-28 10:21:03 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-10-28 10:21:03 [main] DEBUG c.e.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2024-10-28 10:21:03 [main] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
2024-10-28 10:21:03 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-10-28 10:21:04 [main] DEBUG o.s.g.d.m.a.s.AnnotatedControllerExceptionResolver - @GraphQlException methods in ControllerAdvice beans: none
2024-10-28 10:21:04 [main] INFO  o.s.g.e.DefaultSchemaResourceGraphQlSourceBuilder - Loaded 1 resource(s) in the GraphQL schema.
2024-10-28 10:21:04 [main] DEBUG o.s.g.e.DefaultSchemaResourceGraphQlSourceBuilder - Loaded GraphQL schema resources: (file [C:\dev\workspace\eclipse-2024\demo\target\classes\graphql\schema.graphqls])
2024-10-28 10:21:04 [main] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-10-28 10:21:05 [main] INFO  com.example.demo.DemoApplication - Started DemoApplication in 6.04 seconds (process running for 6.366)
2024-10-28 10:21:10 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-10-28 10:21:10 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /graphql
2024-10-28 10:21:10 [http-nio-8080-exec-1] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com argumento[s] = [admin]
2024-10-28 10:21:10 [http-nio-8080-exec-1] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.repository.UsuarioRepository.findByUsername() com argumento[s] = [admin]
2024-10-28 10:21:10 [http-nio-8080-exec-1] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.repository.UsuarioRepository.findByUsername() com resultado = Optional[com.example.demo.model.Usuario@543a9815]
2024-10-28 10:21:10 [http-nio-8080-exec-1] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com resultado = com.example.demo.model.Usuario@543a9815
2024-10-28 10:21:10 [http-nio-8080-exec-1] INFO  c.e.d.s.JwtAuthenticationFilter - Usuário autenticado: admin
2024-10-28 10:21:10 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured POST /graphql
2024-10-28 10:21:10 [http-nio-8080-exec-1] DEBUG o.s.g.s.webmvc.GraphQlHttpHandler - Executing: document='query {
  listarLivros {
    id
    titulo
    autor
  }
}
', id=8553ee8f-46d8-b56d-a768-c02cc48855e7, Locale=pt_BR
2024-10-28 10:21:10 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.util.List com.example.demo.controller.LivroGraphQLController.listarLivros(); target is of class [com.example.demo.controller.LivroGraphQLController]
2024-10-28 10:21:10 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.util.List com.example.demo.controller.LivroGraphQLController.listarLivros(); target is of class [com.example.demo.controller.LivroGraphQLController]
2024-10-28 10:21:10 [http-nio-8080-exec-1] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.controller.LivroGraphQLController.listarLivros() com argumento[s] = []
2024-10-28 10:21:10 [http-nio-8080-exec-1] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.LivroService.listarTodos() com argumento[s] = []
2024-10-28 10:21:10 [http-nio-8080-exec-1] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: org.springframework.data.repository.ListCrudRepository.findAll() com argumento[s] = []
2024-10-28 10:21:10 [http-nio-8080-exec-1] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: org.springframework.data.repository.ListCrudRepository.findAll() com resultado = [com.example.demo.model.Livro@3cf5d48, com.example.demo.model.Livro@751358bf]
2024-10-28 10:21:10 [http-nio-8080-exec-1] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.LivroService.listarTodos() com resultado = [com.example.demo.model.Livro@3cf5d48, com.example.demo.model.Livro@751358bf]
2024-10-28 10:21:10 [http-nio-8080-exec-1] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.controller.LivroGraphQLController.listarLivros() com resultado = [com.example.demo.model.Livro@3cf5d48, com.example.demo.model.Livro@751358bf]
2024-10-28 10:21:10 [http-nio-8080-exec-1] DEBUG o.s.g.s.webmvc.GraphQlHttpHandler - Execution result is ready.
2024-10-28 10:21:22 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing POST /graphql
2024-10-28 10:21:22 [http-nio-8080-exec-2] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com argumento[s] = [admin]
2024-10-28 10:21:22 [http-nio-8080-exec-2] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.repository.UsuarioRepository.findByUsername() com argumento[s] = [admin]
2024-10-28 10:21:22 [http-nio-8080-exec-2] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.repository.UsuarioRepository.findByUsername() com resultado = Optional[com.example.demo.model.Usuario@1ad2fe22]
2024-10-28 10:21:22 [http-nio-8080-exec-2] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com resultado = com.example.demo.model.Usuario@1ad2fe22
2024-10-28 10:21:22 [http-nio-8080-exec-2] INFO  c.e.d.s.JwtAuthenticationFilter - Usuário autenticado: admin
2024-10-28 10:21:22 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured POST /graphql
2024-10-28 10:21:22 [http-nio-8080-exec-2] DEBUG o.s.g.s.webmvc.GraphQlHttpHandler - Executing: document='mutation {
  cadastrarLivro(titulo: "Novo ", autor: "Autor") {
    id
    titulo
    autor
  }
}
', id=552c7cd2-da17-4b7d-4c6f-a9ef3fbde80c, Locale=pt_BR
2024-10-28 10:21:22 [http-nio-8080-exec-2] DEBUG o.s.g.s.webmvc.GraphQlHttpHandler - Execution result is ready.
2024-10-28 10:30:41 [main] INFO  com.example.demo.DemoApplication - Starting DemoApplication using Java 21.0.2 with PID 12908 (C:\dev\workspace\eclipse-2024\demo\target\classes started by Magna in C:\dev\workspace\eclipse-2024\demo)
2024-10-28 10:30:41 [main] DEBUG com.example.demo.DemoApplication - Running with Spring Boot v3.3.4, Spring v6.1.13
2024-10-28 10:30:41 [main] INFO  com.example.demo.DemoApplication - No active profile set, falling back to 1 default profile: "default"
2024-10-28 10:30:42 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-10-28 10:30:42 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.30]
2024-10-28 10:30:42 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-10-28 10:30:43 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-10-28 10:30:43 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final
2024-10-28 10:30:43 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-10-28 10:30:43 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-10-28 10:30:43 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@37cf91d8
2024-10-28 10:30:43 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-10-28 10:30:44 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-10-28 10:30:45 [main] DEBUG c.e.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2024-10-28 10:30:45 [main] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
2024-10-28 10:30:45 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-10-28 10:30:45 [main] DEBUG o.s.g.d.m.a.s.AnnotatedControllerExceptionResolver - @GraphQlException methods in ControllerAdvice beans: none
2024-10-28 10:30:45 [main] INFO  o.s.g.e.DefaultSchemaResourceGraphQlSourceBuilder - Loaded 1 resource(s) in the GraphQL schema.
2024-10-28 10:30:45 [main] DEBUG o.s.g.e.DefaultSchemaResourceGraphQlSourceBuilder - Loaded GraphQL schema resources: (file [C:\dev\workspace\eclipse-2024\demo\target\classes\graphql\schema.graphqls])
2024-10-28 10:30:46 [main] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-10-28 10:30:46 [main] INFO  com.example.demo.DemoApplication - Started DemoApplication in 6.053 seconds (process running for 6.392)
2024-10-28 10:30:49 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-10-28 10:30:49 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /graphql
2024-10-28 10:30:49 [http-nio-8080-exec-1] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com argumento[s] = [admin]
2024-10-28 10:30:49 [http-nio-8080-exec-1] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.repository.UsuarioRepository.findByUsername() com argumento[s] = [admin]
2024-10-28 10:30:49 [http-nio-8080-exec-1] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.repository.UsuarioRepository.findByUsername() com resultado = Optional[com.example.demo.model.Usuario@216d3c58]
2024-10-28 10:30:49 [http-nio-8080-exec-1] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com resultado = com.example.demo.model.Usuario@216d3c58
2024-10-28 10:30:49 [http-nio-8080-exec-1] INFO  c.e.d.s.JwtAuthenticationFilter - Usuário autenticado: admin
2024-10-28 10:30:49 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured POST /graphql
2024-10-28 10:30:49 [http-nio-8080-exec-1] DEBUG o.s.g.s.webmvc.GraphQlHttpHandler - Executing: document='query {
  listarLivros {
    id
    titulo
    autor
  }
}
', id=37ff4b12-cdbc-8dc5-da01-281f3e9ef5df, Locale=pt_BR
2024-10-28 10:30:49 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.util.List com.example.demo.controller.LivroGraphQLController.listarLivros(); target is of class [com.example.demo.controller.LivroGraphQLController]
2024-10-28 10:30:49 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.util.List com.example.demo.controller.LivroGraphQLController.listarLivros(); target is of class [com.example.demo.controller.LivroGraphQLController]
2024-10-28 10:30:49 [http-nio-8080-exec-1] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.controller.LivroGraphQLController.listarLivros() com argumento[s] = []
2024-10-28 10:30:49 [http-nio-8080-exec-1] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.LivroService.listarTodos() com argumento[s] = []
2024-10-28 10:30:49 [http-nio-8080-exec-1] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: org.springframework.data.repository.ListCrudRepository.findAll() com argumento[s] = []
2024-10-28 10:30:49 [http-nio-8080-exec-1] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: org.springframework.data.repository.ListCrudRepository.findAll() com resultado = [com.example.demo.model.Livro@525187d5, com.example.demo.model.Livro@7becda35]
2024-10-28 10:30:49 [http-nio-8080-exec-1] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.LivroService.listarTodos() com resultado = [com.example.demo.model.Livro@525187d5, com.example.demo.model.Livro@7becda35]
2024-10-28 10:30:49 [http-nio-8080-exec-1] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.controller.LivroGraphQLController.listarLivros() com resultado = [com.example.demo.model.Livro@525187d5, com.example.demo.model.Livro@7becda35]
2024-10-28 10:30:49 [http-nio-8080-exec-1] DEBUG o.s.g.s.webmvc.GraphQlHttpHandler - Execution result is ready.
2024-10-28 10:30:51 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing POST /graphql
2024-10-28 10:30:51 [http-nio-8080-exec-2] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com argumento[s] = [admin]
2024-10-28 10:30:51 [http-nio-8080-exec-2] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.repository.UsuarioRepository.findByUsername() com argumento[s] = [admin]
2024-10-28 10:30:51 [http-nio-8080-exec-2] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.repository.UsuarioRepository.findByUsername() com resultado = Optional[com.example.demo.model.Usuario@6b7d969c]
2024-10-28 10:30:51 [http-nio-8080-exec-2] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com resultado = com.example.demo.model.Usuario@6b7d969c
2024-10-28 10:30:51 [http-nio-8080-exec-2] INFO  c.e.d.s.JwtAuthenticationFilter - Usuário autenticado: admin
2024-10-28 10:30:51 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured POST /graphql
2024-10-28 10:30:51 [http-nio-8080-exec-2] DEBUG o.s.g.s.webmvc.GraphQlHttpHandler - Executing: document='mutation {
  cadastrarLivro(titulo: "Novo ", autor: "Autor") {
    id
    titulo
    autor
  }
}
', id=c7ae67d5-098e-2212-fc0a-c85ad0afd6dc, Locale=pt_BR
2024-10-28 10:30:51 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public com.example.demo.model.Livro com.example.demo.controller.LivroGraphQLController.cadastrarLivro(java.lang.String,java.lang.String); target is of class [com.example.demo.controller.LivroGraphQLController]
2024-10-28 10:30:51 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public com.example.demo.model.Livro com.example.demo.controller.LivroGraphQLController.cadastrarLivro(java.lang.String,java.lang.String); target is of class [com.example.demo.controller.LivroGraphQLController]
2024-10-28 10:30:51 [http-nio-8080-exec-2] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.controller.LivroGraphQLController.cadastrarLivro() com argumento[s] = [Novo , Autor]
2024-10-28 10:30:51 [http-nio-8080-exec-2] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.LivroService.salvar() com argumento[s] = [com.example.demo.model.Livro@46c42fc6]
2024-10-28 10:30:51 [http-nio-8080-exec-2] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: org.springframework.data.repository.CrudRepository.save() com argumento[s] = [com.example.demo.model.Livro@46c42fc6]
2024-10-28 10:30:51 [http-nio-8080-exec-2] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: org.springframework.data.repository.CrudRepository.save() com resultado = com.example.demo.model.Livro@46c42fc6
2024-10-28 10:30:51 [http-nio-8080-exec-2] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.LivroService.salvar() com resultado = com.example.demo.model.Livro@46c42fc6
2024-10-28 10:30:51 [http-nio-8080-exec-2] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.controller.LivroGraphQLController.cadastrarLivro() com resultado = com.example.demo.model.Livro@46c42fc6
2024-10-28 10:30:51 [http-nio-8080-exec-2] DEBUG o.s.g.s.webmvc.GraphQlHttpHandler - Execution result is ready.
2024-10-28 10:31:52 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing POST /graphql
2024-10-28 10:31:52 [http-nio-8080-exec-4] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com argumento[s] = [admin]
2024-10-28 10:31:52 [http-nio-8080-exec-4] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.repository.UsuarioRepository.findByUsername() com argumento[s] = [admin]
2024-10-28 10:31:52 [http-nio-8080-exec-4] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.repository.UsuarioRepository.findByUsername() com resultado = Optional[com.example.demo.model.Usuario@65d23f4b]
2024-10-28 10:31:52 [http-nio-8080-exec-4] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com resultado = com.example.demo.model.Usuario@65d23f4b
2024-10-28 10:31:52 [http-nio-8080-exec-4] INFO  c.e.d.s.JwtAuthenticationFilter - Usuário autenticado: admin
2024-10-28 10:31:52 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured POST /graphql
2024-10-28 10:31:52 [http-nio-8080-exec-4] DEBUG o.s.g.s.webmvc.GraphQlHttpHandler - Executing: document='query {
  listarLivros {
    id
    titulo
    autor
  }
}
', id=d808c283-a20c-70d3-3f2a-824ca2b74f92, Locale=pt_BR
2024-10-28 10:31:52 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.util.List com.example.demo.controller.LivroGraphQLController.listarLivros(); target is of class [com.example.demo.controller.LivroGraphQLController]
2024-10-28 10:31:52 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.util.List com.example.demo.controller.LivroGraphQLController.listarLivros(); target is of class [com.example.demo.controller.LivroGraphQLController]
2024-10-28 10:31:52 [http-nio-8080-exec-4] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.controller.LivroGraphQLController.listarLivros() com argumento[s] = []
2024-10-28 10:31:52 [http-nio-8080-exec-4] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.LivroService.listarTodos() com argumento[s] = []
2024-10-28 10:31:52 [http-nio-8080-exec-4] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: org.springframework.data.repository.ListCrudRepository.findAll() com argumento[s] = []
2024-10-28 10:31:52 [http-nio-8080-exec-4] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: org.springframework.data.repository.ListCrudRepository.findAll() com resultado = [com.example.demo.model.Livro@24c5cc62, com.example.demo.model.Livro@2f7f2a4e, com.example.demo.model.Livro@4445a960]
2024-10-28 10:31:52 [http-nio-8080-exec-4] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.LivroService.listarTodos() com resultado = [com.example.demo.model.Livro@24c5cc62, com.example.demo.model.Livro@2f7f2a4e, com.example.demo.model.Livro@4445a960]
2024-10-28 10:31:52 [http-nio-8080-exec-4] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.controller.LivroGraphQLController.listarLivros() com resultado = [com.example.demo.model.Livro@24c5cc62, com.example.demo.model.Livro@2f7f2a4e, com.example.demo.model.Livro@4445a960]
2024-10-28 10:31:52 [http-nio-8080-exec-4] DEBUG o.s.g.s.webmvc.GraphQlHttpHandler - Execution result is ready.
2024-10-28 10:35:32 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing POST /graphql
2024-10-28 10:35:32 [http-nio-8080-exec-6] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com argumento[s] = [admin]
2024-10-28 10:35:32 [http-nio-8080-exec-6] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.repository.UsuarioRepository.findByUsername() com argumento[s] = [admin]
2024-10-28 10:35:32 [http-nio-8080-exec-6] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.repository.UsuarioRepository.findByUsername() com resultado = Optional[com.example.demo.model.Usuario@7ae6e154]
2024-10-28 10:35:32 [http-nio-8080-exec-6] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com resultado = com.example.demo.model.Usuario@7ae6e154
2024-10-28 10:35:32 [http-nio-8080-exec-6] INFO  c.e.d.s.JwtAuthenticationFilter - Usuário autenticado: admin
2024-10-28 10:35:32 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured POST /graphql
2024-10-28 10:35:32 [http-nio-8080-exec-6] DEBUG o.s.g.s.webmvc.GraphQlHttpHandler - Executing: document='mutation {
  atualizarLivro(id: 3, autor: "Autor Atualizado") {
    id
    titulo
    autor
  }
}

', id=1b8f2bce-860a-c274-60ee-a5560ba1a8db, Locale=pt_BR
2024-10-28 10:35:32 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public com.example.demo.model.Livro com.example.demo.controller.LivroGraphQLController.atualizarLivro(java.lang.Long,java.lang.String,java.lang.String); target is of class [com.example.demo.controller.LivroGraphQLController]
2024-10-28 10:35:32 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public com.example.demo.model.Livro com.example.demo.controller.LivroGraphQLController.atualizarLivro(java.lang.Long,java.lang.String,java.lang.String); target is of class [com.example.demo.controller.LivroGraphQLController]
2024-10-28 10:35:32 [http-nio-8080-exec-6] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.controller.LivroGraphQLController.atualizarLivro() com argumento[s] = [3, null, Autor Atualizado]
2024-10-28 10:35:32 [http-nio-8080-exec-6] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.LivroService.atualizar() com argumento[s] = [3, com.example.demo.model.Livro@490887f5]
2024-10-28 10:35:32 [http-nio-8080-exec-6] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: org.springframework.data.repository.CrudRepository.findById() com argumento[s] = [3]
2024-10-28 10:35:32 [http-nio-8080-exec-6] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: org.springframework.data.repository.CrudRepository.findById() com resultado = Optional[com.example.demo.model.Livro@62a6aaa9]
2024-10-28 10:35:32 [http-nio-8080-exec-6] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: org.springframework.data.repository.CrudRepository.save() com argumento[s] = [com.example.demo.model.Livro@62a6aaa9]
2024-10-28 10:35:32 [http-nio-8080-exec-6] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: org.springframework.data.repository.CrudRepository.save() com resultado = com.example.demo.model.Livro@62a6aaa9
2024-10-28 10:35:32 [http-nio-8080-exec-6] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.LivroService.atualizar() com resultado = com.example.demo.model.Livro@62a6aaa9
2024-10-28 10:35:32 [http-nio-8080-exec-6] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.controller.LivroGraphQLController.atualizarLivro() com resultado = com.example.demo.model.Livro@62a6aaa9
2024-10-28 10:35:32 [http-nio-8080-exec-6] DEBUG o.s.g.s.webmvc.GraphQlHttpHandler - Execution result is ready.
2024-10-28 10:35:37 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing POST /graphql
2024-10-28 10:35:37 [http-nio-8080-exec-7] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com argumento[s] = [admin]
2024-10-28 10:35:37 [http-nio-8080-exec-7] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.repository.UsuarioRepository.findByUsername() com argumento[s] = [admin]
2024-10-28 10:35:37 [http-nio-8080-exec-7] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.repository.UsuarioRepository.findByUsername() com resultado = Optional[com.example.demo.model.Usuario@16becd80]
2024-10-28 10:35:37 [http-nio-8080-exec-7] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com resultado = com.example.demo.model.Usuario@16becd80
2024-10-28 10:35:37 [http-nio-8080-exec-7] INFO  c.e.d.s.JwtAuthenticationFilter - Usuário autenticado: admin
2024-10-28 10:35:37 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured POST /graphql
2024-10-28 10:35:37 [http-nio-8080-exec-7] DEBUG o.s.g.s.webmvc.GraphQlHttpHandler - Executing: document='query {
  listarLivros {
    id
    titulo
    autor
  }
}
', id=f7c7eebc-98e5-f0a1-3308-d6d2a53e7e0f, Locale=pt_BR
2024-10-28 10:35:37 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.util.List com.example.demo.controller.LivroGraphQLController.listarLivros(); target is of class [com.example.demo.controller.LivroGraphQLController]
2024-10-28 10:35:37 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.util.List com.example.demo.controller.LivroGraphQLController.listarLivros(); target is of class [com.example.demo.controller.LivroGraphQLController]
2024-10-28 10:35:37 [http-nio-8080-exec-7] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.controller.LivroGraphQLController.listarLivros() com argumento[s] = []
2024-10-28 10:35:37 [http-nio-8080-exec-7] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.LivroService.listarTodos() com argumento[s] = []
2024-10-28 10:35:37 [http-nio-8080-exec-7] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: org.springframework.data.repository.ListCrudRepository.findAll() com argumento[s] = []
2024-10-28 10:35:37 [http-nio-8080-exec-7] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: org.springframework.data.repository.ListCrudRepository.findAll() com resultado = [com.example.demo.model.Livro@7e5aab88, com.example.demo.model.Livro@3e1dbb47, com.example.demo.model.Livro@27d8d33b]
2024-10-28 10:35:37 [http-nio-8080-exec-7] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.LivroService.listarTodos() com resultado = [com.example.demo.model.Livro@7e5aab88, com.example.demo.model.Livro@3e1dbb47, com.example.demo.model.Livro@27d8d33b]
2024-10-28 10:35:37 [http-nio-8080-exec-7] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.controller.LivroGraphQLController.listarLivros() com resultado = [com.example.demo.model.Livro@7e5aab88, com.example.demo.model.Livro@3e1dbb47, com.example.demo.model.Livro@27d8d33b]
2024-10-28 10:35:37 [http-nio-8080-exec-7] DEBUG o.s.g.s.webmvc.GraphQlHttpHandler - Execution result is ready.
2024-10-28 10:38:12 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing POST /graphql
2024-10-28 10:38:12 [http-nio-8080-exec-9] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com argumento[s] = [admin]
2024-10-28 10:38:12 [http-nio-8080-exec-9] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.repository.UsuarioRepository.findByUsername() com argumento[s] = [admin]
2024-10-28 10:38:12 [http-nio-8080-exec-9] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.repository.UsuarioRepository.findByUsername() com resultado = Optional[com.example.demo.model.Usuario@5df4fa0]
2024-10-28 10:38:12 [http-nio-8080-exec-9] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com resultado = com.example.demo.model.Usuario@5df4fa0
2024-10-28 10:38:12 [http-nio-8080-exec-9] INFO  c.e.d.s.JwtAuthenticationFilter - Usuário autenticado: admin
2024-10-28 10:38:12 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured POST /graphql
2024-10-28 10:38:12 [http-nio-8080-exec-9] DEBUG o.s.g.s.webmvc.GraphQlHttpHandler - Executing: document='
mutation {
  deletarLivro(id: 3) {
    id
    titulo
    autor
  }
}
', id=d0e99ba4-a08b-a858-7f31-c27764718ae7, Locale=pt_BR
2024-10-28 10:38:12 [http-nio-8080-exec-9] DEBUG o.s.g.s.webmvc.GraphQlHttpHandler - Execution result has errors: [ValidationError{validationErrorType=SubselectionNotAllowed, queryPath=[deletarLivro], message=Validation error (SubselectionNotAllowed@[deletarLivro]) : Subselection not allowed on leaf type 'Boolean' of field 'deletarLivro', locations=[SourceLocation{line=3, column=3}], description='Validation error (SubselectionNotAllowed@[deletarLivro]) : Subselection not allowed on leaf type 'Boolean' of field 'deletarLivro'', extensions=[]}].
2024-10-28 10:38:34 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing POST /graphql
2024-10-28 10:38:34 [http-nio-8080-exec-10] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com argumento[s] = [admin]
2024-10-28 10:38:34 [http-nio-8080-exec-10] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.repository.UsuarioRepository.findByUsername() com argumento[s] = [admin]
2024-10-28 10:38:34 [http-nio-8080-exec-10] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.repository.UsuarioRepository.findByUsername() com resultado = Optional[com.example.demo.model.Usuario@2fd3e751]
2024-10-28 10:38:34 [http-nio-8080-exec-10] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com resultado = com.example.demo.model.Usuario@2fd3e751
2024-10-28 10:38:34 [http-nio-8080-exec-10] INFO  c.e.d.s.JwtAuthenticationFilter - Usuário autenticado: admin
2024-10-28 10:38:34 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured POST /graphql
2024-10-28 10:38:34 [http-nio-8080-exec-10] DEBUG o.s.g.s.webmvc.GraphQlHttpHandler - Executing: document='
mutation {
  deletarLivro(id: 3) {
  }
}
', id=8b76cd07-8249-8782-261e-5ec2e92cdf2e, Locale=pt_BR
2024-10-28 10:38:34 [http-nio-8080-exec-10] DEBUG o.s.g.s.webmvc.GraphQlHttpHandler - Execution result has errors: [InvalidSyntaxError{ message=Invalid syntax with offending token '}' at line 4 column 3 ,offendingToken=} ,locations=[SourceLocation{line=4, column=3}] ,sourcePreview=
mutation {
  deletarLivro(id: 3) {
  }
}
}].
2024-10-28 10:38:40 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /graphql
2024-10-28 10:38:40 [http-nio-8080-exec-1] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com argumento[s] = [admin]
2024-10-28 10:38:40 [http-nio-8080-exec-1] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.repository.UsuarioRepository.findByUsername() com argumento[s] = [admin]
2024-10-28 10:38:40 [http-nio-8080-exec-1] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.repository.UsuarioRepository.findByUsername() com resultado = Optional[com.example.demo.model.Usuario@4f638a2e]
2024-10-28 10:38:40 [http-nio-8080-exec-1] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com resultado = com.example.demo.model.Usuario@4f638a2e
2024-10-28 10:38:40 [http-nio-8080-exec-1] INFO  c.e.d.s.JwtAuthenticationFilter - Usuário autenticado: admin
2024-10-28 10:38:40 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured POST /graphql
2024-10-28 10:38:40 [http-nio-8080-exec-1] DEBUG o.s.g.s.webmvc.GraphQlHttpHandler - Executing: document='
mutation {
  deletarLivro(id: 3) 
}
', id=528b9ca1-b2d9-fd68-89db-338418eddc04, Locale=pt_BR
2024-10-28 10:38:40 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.lang.Boolean com.example.demo.controller.LivroGraphQLController.deletarLivro(java.lang.Long); target is of class [com.example.demo.controller.LivroGraphQLController]
2024-10-28 10:38:40 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.lang.Boolean com.example.demo.controller.LivroGraphQLController.deletarLivro(java.lang.Long); target is of class [com.example.demo.controller.LivroGraphQLController]
2024-10-28 10:38:40 [http-nio-8080-exec-1] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.controller.LivroGraphQLController.deletarLivro() com argumento[s] = [3]
2024-10-28 10:38:40 [http-nio-8080-exec-1] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.LivroService.deletarPorId() com argumento[s] = [3]
2024-10-28 10:38:40 [http-nio-8080-exec-1] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: org.springframework.data.repository.CrudRepository.deleteById() com argumento[s] = [3]
2024-10-28 10:38:40 [http-nio-8080-exec-1] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: org.springframework.data.repository.CrudRepository.deleteById() com resultado = null
2024-10-28 10:38:40 [http-nio-8080-exec-1] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.LivroService.deletarPorId() com resultado = null
2024-10-28 10:38:40 [http-nio-8080-exec-1] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.controller.LivroGraphQLController.deletarLivro() com resultado = true
2024-10-28 10:38:40 [http-nio-8080-exec-1] DEBUG o.s.g.s.webmvc.GraphQlHttpHandler - Execution result is ready.
2024-10-28 10:38:44 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing POST /graphql
2024-10-28 10:38:44 [http-nio-8080-exec-2] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com argumento[s] = [admin]
2024-10-28 10:38:44 [http-nio-8080-exec-2] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.repository.UsuarioRepository.findByUsername() com argumento[s] = [admin]
2024-10-28 10:38:44 [http-nio-8080-exec-2] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.repository.UsuarioRepository.findByUsername() com resultado = Optional[com.example.demo.model.Usuario@5d46b82]
2024-10-28 10:38:44 [http-nio-8080-exec-2] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com resultado = com.example.demo.model.Usuario@5d46b82
2024-10-28 10:38:44 [http-nio-8080-exec-2] INFO  c.e.d.s.JwtAuthenticationFilter - Usuário autenticado: admin
2024-10-28 10:38:44 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured POST /graphql
2024-10-28 10:38:44 [http-nio-8080-exec-2] DEBUG o.s.g.s.webmvc.GraphQlHttpHandler - Executing: document='query {
  listarLivros {
    id
    titulo
    autor
  }
}
', id=94e8a312-e765-7df4-2a42-72c9e770a2c6, Locale=pt_BR
2024-10-28 10:38:44 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.util.List com.example.demo.controller.LivroGraphQLController.listarLivros(); target is of class [com.example.demo.controller.LivroGraphQLController]
2024-10-28 10:38:44 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.util.List com.example.demo.controller.LivroGraphQLController.listarLivros(); target is of class [com.example.demo.controller.LivroGraphQLController]
2024-10-28 10:38:44 [http-nio-8080-exec-2] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.controller.LivroGraphQLController.listarLivros() com argumento[s] = []
2024-10-28 10:38:44 [http-nio-8080-exec-2] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.LivroService.listarTodos() com argumento[s] = []
2024-10-28 10:38:44 [http-nio-8080-exec-2] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: org.springframework.data.repository.ListCrudRepository.findAll() com argumento[s] = []
2024-10-28 10:38:44 [http-nio-8080-exec-2] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: org.springframework.data.repository.ListCrudRepository.findAll() com resultado = [com.example.demo.model.Livro@619fef4f, com.example.demo.model.Livro@4dabd98f]
2024-10-28 10:38:44 [http-nio-8080-exec-2] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.LivroService.listarTodos() com resultado = [com.example.demo.model.Livro@619fef4f, com.example.demo.model.Livro@4dabd98f]
2024-10-28 10:38:44 [http-nio-8080-exec-2] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.controller.LivroGraphQLController.listarLivros() com resultado = [com.example.demo.model.Livro@619fef4f, com.example.demo.model.Livro@4dabd98f]
2024-10-28 10:38:44 [http-nio-8080-exec-2] DEBUG o.s.g.s.webmvc.GraphQlHttpHandler - Execution result is ready.
2024-10-28 10:39:05 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing POST /graphql
2024-10-28 10:39:05 [http-nio-8080-exec-3] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com argumento[s] = [admin]
2024-10-28 10:39:05 [http-nio-8080-exec-3] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.repository.UsuarioRepository.findByUsername() com argumento[s] = [admin]
2024-10-28 10:39:05 [http-nio-8080-exec-3] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.repository.UsuarioRepository.findByUsername() com resultado = Optional[com.example.demo.model.Usuario@40996a31]
2024-10-28 10:39:05 [http-nio-8080-exec-3] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com resultado = com.example.demo.model.Usuario@40996a31
2024-10-28 10:39:05 [http-nio-8080-exec-3] INFO  c.e.d.s.JwtAuthenticationFilter - Usuário autenticado: admin
2024-10-28 10:39:05 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured POST /graphql
2024-10-28 10:39:05 [http-nio-8080-exec-3] DEBUG o.s.g.s.webmvc.GraphQlHttpHandler - Executing: document='mutation {
  atualizarLivro(id: 3, titulo: "Título Atualizado", autor: "Autor Atualizado") {
    id
    titulo
    autor
  }
}
mutation cadastro{
  cadastrarLivro(titulo: "Novo ", autor: "Autor") {
    id
    titulo
    autor
  }
}

mutation {
  deletarLivro(id: 3) {
    id
    titulo
    autor
  }
}
', operationName='cadastro', id=4ff6dcba-0e70-17e8-925d-3e4079ce3cae, Locale=pt_BR
2024-10-28 10:39:05 [http-nio-8080-exec-3] DEBUG o.s.g.s.webmvc.GraphQlHttpHandler - Execution result has errors: [ValidationError{validationErrorType=LoneAnonymousOperationViolation, queryPath=[], message=Validation error (LoneAnonymousOperationViolation) : Operation 'cadastro' is following anonymous operation, locations=[SourceLocation{line=8, column=1}], description='Validation error (LoneAnonymousOperationViolation) : Operation 'cadastro' is following anonymous operation', extensions=[]}, ValidationError{validationErrorType=LoneAnonymousOperationViolation, queryPath=[], message=Validation error (LoneAnonymousOperationViolation) : Anonymous operation with other operations, locations=[SourceLocation{line=16, column=1}], description='Validation error (LoneAnonymousOperationViolation) : Anonymous operation with other operations', extensions=[]}, ValidationError{validationErrorType=SubselectionNotAllowed, queryPath=[deletarLivro], message=Validation error (SubselectionNotAllowed@[deletarLivro]) : Subselection not allowed on leaf type 'Boolean' of field 'deletarLivro', locations=[SourceLocation{line=17, column=3}], description='Validation error (SubselectionNotAllowed@[deletarLivro]) : Subselection not allowed on leaf type 'Boolean' of field 'deletarLivro'', extensions=[]}].
2024-10-28 10:39:42 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing POST /graphql
2024-10-28 10:39:42 [http-nio-8080-exec-4] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com argumento[s] = [admin]
2024-10-28 10:39:42 [http-nio-8080-exec-4] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.repository.UsuarioRepository.findByUsername() com argumento[s] = [admin]
2024-10-28 10:39:42 [http-nio-8080-exec-4] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.repository.UsuarioRepository.findByUsername() com resultado = Optional[com.example.demo.model.Usuario@1e661883]
2024-10-28 10:39:42 [http-nio-8080-exec-4] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com resultado = com.example.demo.model.Usuario@1e661883
2024-10-28 10:39:42 [http-nio-8080-exec-4] INFO  c.e.d.s.JwtAuthenticationFilter - Usuário autenticado: admin
2024-10-28 10:39:42 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured POST /graphql
2024-10-28 10:39:42 [http-nio-8080-exec-4] DEBUG o.s.g.s.webmvc.GraphQlHttpHandler - Executing: document='mutation atualiza{
  atualizarLivro(id: 32, titulo: "Título Atualizado", autor: "Autor Atualizado") {
    id
    titulo
    autor
  }
}
mutation cadastro{
  cadastrarLivro(titulo: "Novo ", autor: "Autor") {
    id
    titulo
    autor
  }
}

mutation deleta {
  deletarLivro(id: 3) {
    id
    titulo
    autor
  }
}
', operationName='cadastro', id=9148928d-81d6-7ea4-74ee-d8216a34bcfb, Locale=pt_BR
2024-10-28 10:39:42 [http-nio-8080-exec-4] DEBUG o.s.g.s.webmvc.GraphQlHttpHandler - Execution result has errors: [ValidationError{validationErrorType=SubselectionNotAllowed, queryPath=[deletarLivro], message=Validation error (SubselectionNotAllowed@[deletarLivro]) : Subselection not allowed on leaf type 'Boolean' of field 'deletarLivro', locations=[SourceLocation{line=17, column=3}], description='Validation error (SubselectionNotAllowed@[deletarLivro]) : Subselection not allowed on leaf type 'Boolean' of field 'deletarLivro'', extensions=[]}].
2024-10-28 10:39:58 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing POST /graphql
2024-10-28 10:39:58 [http-nio-8080-exec-5] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com argumento[s] = [admin]
2024-10-28 10:39:58 [http-nio-8080-exec-5] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.repository.UsuarioRepository.findByUsername() com argumento[s] = [admin]
2024-10-28 10:39:58 [http-nio-8080-exec-5] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.repository.UsuarioRepository.findByUsername() com resultado = Optional[com.example.demo.model.Usuario@172ed84b]
2024-10-28 10:39:58 [http-nio-8080-exec-5] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com resultado = com.example.demo.model.Usuario@172ed84b
2024-10-28 10:39:58 [http-nio-8080-exec-5] INFO  c.e.d.s.JwtAuthenticationFilter - Usuário autenticado: admin
2024-10-28 10:39:58 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured POST /graphql
2024-10-28 10:39:58 [http-nio-8080-exec-5] DEBUG o.s.g.s.webmvc.GraphQlHttpHandler - Executing: document='mutation atualiza {
  atualizarLivro(id: 32, titulo: "Título Atualizado", autor: "Autor Atualizado") {
    id
    titulo
    autor
  }
}

mutation cadastro {
  cadastrarLivro(titulo: "Novo ", autor: "Autor") {
    id
    titulo
    autor
  }
}

mutation deleta {
  deletarLivro(id: 3)
}', operationName='cadastro', id=3b685746-7867-9860-116b-97b36cecc2a9, Locale=pt_BR
2024-10-28 10:39:58 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public com.example.demo.model.Livro com.example.demo.controller.LivroGraphQLController.cadastrarLivro(java.lang.String,java.lang.String); target is of class [com.example.demo.controller.LivroGraphQLController]
2024-10-28 10:39:58 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public com.example.demo.model.Livro com.example.demo.controller.LivroGraphQLController.cadastrarLivro(java.lang.String,java.lang.String); target is of class [com.example.demo.controller.LivroGraphQLController]
2024-10-28 10:39:58 [http-nio-8080-exec-5] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.controller.LivroGraphQLController.cadastrarLivro() com argumento[s] = [Novo , Autor]
2024-10-28 10:39:58 [http-nio-8080-exec-5] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.LivroService.salvar() com argumento[s] = [com.example.demo.model.Livro@65124c0]
2024-10-28 10:39:58 [http-nio-8080-exec-5] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: org.springframework.data.repository.CrudRepository.save() com argumento[s] = [com.example.demo.model.Livro@65124c0]
2024-10-28 10:39:58 [http-nio-8080-exec-5] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: org.springframework.data.repository.CrudRepository.save() com resultado = com.example.demo.model.Livro@65124c0
2024-10-28 10:39:58 [http-nio-8080-exec-5] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.LivroService.salvar() com resultado = com.example.demo.model.Livro@65124c0
2024-10-28 10:39:58 [http-nio-8080-exec-5] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.controller.LivroGraphQLController.cadastrarLivro() com resultado = com.example.demo.model.Livro@65124c0
2024-10-28 10:39:58 [http-nio-8080-exec-5] DEBUG o.s.g.s.webmvc.GraphQlHttpHandler - Execution result is ready.
2024-10-28 10:40:10 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing POST /graphql
2024-10-28 10:40:10 [http-nio-8080-exec-6] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com argumento[s] = [admin]
2024-10-28 10:40:10 [http-nio-8080-exec-6] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.repository.UsuarioRepository.findByUsername() com argumento[s] = [admin]
2024-10-28 10:40:10 [http-nio-8080-exec-6] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.repository.UsuarioRepository.findByUsername() com resultado = Optional[com.example.demo.model.Usuario@70c1fb9e]
2024-10-28 10:40:10 [http-nio-8080-exec-6] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com resultado = com.example.demo.model.Usuario@70c1fb9e
2024-10-28 10:40:10 [http-nio-8080-exec-6] INFO  c.e.d.s.JwtAuthenticationFilter - Usuário autenticado: admin
2024-10-28 10:40:10 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured POST /graphql
2024-10-28 10:40:10 [http-nio-8080-exec-6] DEBUG o.s.g.s.webmvc.GraphQlHttpHandler - Executing: document='query {
  listarLivros {
    id
    titulo
    autor
  }
}
', id=08e4ad7e-bfb7-bcd5-de21-c2cb127369ba, Locale=pt_BR
2024-10-28 10:40:10 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.util.List com.example.demo.controller.LivroGraphQLController.listarLivros(); target is of class [com.example.demo.controller.LivroGraphQLController]
2024-10-28 10:40:10 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.util.List com.example.demo.controller.LivroGraphQLController.listarLivros(); target is of class [com.example.demo.controller.LivroGraphQLController]
2024-10-28 10:40:10 [http-nio-8080-exec-6] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.controller.LivroGraphQLController.listarLivros() com argumento[s] = []
2024-10-28 10:40:10 [http-nio-8080-exec-6] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.LivroService.listarTodos() com argumento[s] = []
2024-10-28 10:40:10 [http-nio-8080-exec-6] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: org.springframework.data.repository.ListCrudRepository.findAll() com argumento[s] = []
2024-10-28 10:40:10 [http-nio-8080-exec-6] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: org.springframework.data.repository.ListCrudRepository.findAll() com resultado = [com.example.demo.model.Livro@25c1920e, com.example.demo.model.Livro@2089e302, com.example.demo.model.Livro@6d223c2c]
2024-10-28 10:40:10 [http-nio-8080-exec-6] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.LivroService.listarTodos() com resultado = [com.example.demo.model.Livro@25c1920e, com.example.demo.model.Livro@2089e302, com.example.demo.model.Livro@6d223c2c]
2024-10-28 10:40:10 [http-nio-8080-exec-6] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.controller.LivroGraphQLController.listarLivros() com resultado = [com.example.demo.model.Livro@25c1920e, com.example.demo.model.Livro@2089e302, com.example.demo.model.Livro@6d223c2c]
2024-10-28 10:40:10 [http-nio-8080-exec-6] DEBUG o.s.g.s.webmvc.GraphQlHttpHandler - Execution result is ready.
2024-10-28 10:40:17 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing POST /graphql
2024-10-28 10:40:17 [http-nio-8080-exec-7] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com argumento[s] = [admin]
2024-10-28 10:40:17 [http-nio-8080-exec-7] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.repository.UsuarioRepository.findByUsername() com argumento[s] = [admin]
2024-10-28 10:40:17 [http-nio-8080-exec-7] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.repository.UsuarioRepository.findByUsername() com resultado = Optional[com.example.demo.model.Usuario@526c598a]
2024-10-28 10:40:17 [http-nio-8080-exec-7] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com resultado = com.example.demo.model.Usuario@526c598a
2024-10-28 10:40:17 [http-nio-8080-exec-7] INFO  c.e.d.s.JwtAuthenticationFilter - Usuário autenticado: admin
2024-10-28 10:40:17 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured POST /graphql
2024-10-28 10:40:17 [http-nio-8080-exec-7] DEBUG o.s.g.s.webmvc.GraphQlHttpHandler - Executing: document='mutation atualiza {
  atualizarLivro(id: 32, titulo: "Título Atualizado", autor: "Autor Atualizado") {
    id
    titulo
    autor
  }
}

mutation cadastro {
  cadastrarLivro(titulo: "Novo ", autor: "Autor") {
    id
    titulo
    autor
  }
}

mutation deleta {
  deletarLivro(id: 3)
}', operationName='deleta', id=cdedfb27-a930-b4b1-6562-5f43ebb8ab9b, Locale=pt_BR
2024-10-28 10:40:17 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.lang.Boolean com.example.demo.controller.LivroGraphQLController.deletarLivro(java.lang.Long); target is of class [com.example.demo.controller.LivroGraphQLController]
2024-10-28 10:40:17 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.lang.Boolean com.example.demo.controller.LivroGraphQLController.deletarLivro(java.lang.Long); target is of class [com.example.demo.controller.LivroGraphQLController]
2024-10-28 10:40:17 [http-nio-8080-exec-7] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.controller.LivroGraphQLController.deletarLivro() com argumento[s] = [3]
2024-10-28 10:40:17 [http-nio-8080-exec-7] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.LivroService.deletarPorId() com argumento[s] = [3]
2024-10-28 10:40:17 [http-nio-8080-exec-7] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: org.springframework.data.repository.CrudRepository.deleteById() com argumento[s] = [3]
2024-10-28 10:40:17 [http-nio-8080-exec-7] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: org.springframework.data.repository.CrudRepository.deleteById() com resultado = null
2024-10-28 10:40:17 [http-nio-8080-exec-7] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.LivroService.deletarPorId() com resultado = null
2024-10-28 10:40:17 [http-nio-8080-exec-7] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.controller.LivroGraphQLController.deletarLivro() com resultado = true
2024-10-28 10:40:17 [http-nio-8080-exec-7] DEBUG o.s.g.s.webmvc.GraphQlHttpHandler - Execution result is ready.
2024-10-28 10:40:22 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing POST /graphql
2024-10-28 10:40:22 [http-nio-8080-exec-8] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com argumento[s] = [admin]
2024-10-28 10:40:22 [http-nio-8080-exec-8] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.repository.UsuarioRepository.findByUsername() com argumento[s] = [admin]
2024-10-28 10:40:22 [http-nio-8080-exec-8] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.repository.UsuarioRepository.findByUsername() com resultado = Optional[com.example.demo.model.Usuario@7f4835a3]
2024-10-28 10:40:22 [http-nio-8080-exec-8] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com resultado = com.example.demo.model.Usuario@7f4835a3
2024-10-28 10:40:22 [http-nio-8080-exec-8] INFO  c.e.d.s.JwtAuthenticationFilter - Usuário autenticado: admin
2024-10-28 10:40:22 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured POST /graphql
2024-10-28 10:40:22 [http-nio-8080-exec-8] DEBUG o.s.g.s.webmvc.GraphQlHttpHandler - Executing: document='query {
  listarLivros {
    id
    titulo
    autor
  }
}
', id=0108f9cc-4489-9183-68d0-0decd3e040d9, Locale=pt_BR
2024-10-28 10:40:22 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.util.List com.example.demo.controller.LivroGraphQLController.listarLivros(); target is of class [com.example.demo.controller.LivroGraphQLController]
2024-10-28 10:40:22 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.util.List com.example.demo.controller.LivroGraphQLController.listarLivros(); target is of class [com.example.demo.controller.LivroGraphQLController]
2024-10-28 10:40:22 [http-nio-8080-exec-8] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.controller.LivroGraphQLController.listarLivros() com argumento[s] = []
2024-10-28 10:40:22 [http-nio-8080-exec-8] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.LivroService.listarTodos() com argumento[s] = []
2024-10-28 10:40:22 [http-nio-8080-exec-8] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: org.springframework.data.repository.ListCrudRepository.findAll() com argumento[s] = []
2024-10-28 10:40:22 [http-nio-8080-exec-8] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: org.springframework.data.repository.ListCrudRepository.findAll() com resultado = [com.example.demo.model.Livro@25a78aa9, com.example.demo.model.Livro@681f4e44, com.example.demo.model.Livro@19a74d15]
2024-10-28 10:40:22 [http-nio-8080-exec-8] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.LivroService.listarTodos() com resultado = [com.example.demo.model.Livro@25a78aa9, com.example.demo.model.Livro@681f4e44, com.example.demo.model.Livro@19a74d15]
2024-10-28 10:40:22 [http-nio-8080-exec-8] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.controller.LivroGraphQLController.listarLivros() com resultado = [com.example.demo.model.Livro@25a78aa9, com.example.demo.model.Livro@681f4e44, com.example.demo.model.Livro@19a74d15]
2024-10-28 10:40:22 [http-nio-8080-exec-8] DEBUG o.s.g.s.webmvc.GraphQlHttpHandler - Execution result is ready.
2024-10-28 10:40:30 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing POST /graphql
2024-10-28 10:40:30 [http-nio-8080-exec-9] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com argumento[s] = [admin]
2024-10-28 10:40:30 [http-nio-8080-exec-9] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.repository.UsuarioRepository.findByUsername() com argumento[s] = [admin]
2024-10-28 10:40:30 [http-nio-8080-exec-9] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.repository.UsuarioRepository.findByUsername() com resultado = Optional[com.example.demo.model.Usuario@3d31a808]
2024-10-28 10:40:30 [http-nio-8080-exec-9] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com resultado = com.example.demo.model.Usuario@3d31a808
2024-10-28 10:40:30 [http-nio-8080-exec-9] INFO  c.e.d.s.JwtAuthenticationFilter - Usuário autenticado: admin
2024-10-28 10:40:30 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured POST /graphql
2024-10-28 10:40:30 [http-nio-8080-exec-9] DEBUG o.s.g.s.webmvc.GraphQlHttpHandler - Executing: document='mutation atualiza {
  atualizarLivro(id: 3, titulo: "Título Atualizado", autor: "Autor Atualizado") {
    id
    titulo
    autor
  }
}

mutation cadastro {
  cadastrarLivro(titulo: "Novo ", autor: "Autor") {
    id
    titulo
    autor
  }
}

mutation deleta {
  deletarLivro(id: 3)
}', operationName='atualiza', id=8087f96c-cd1e-1e8a-4b45-8eee840f00be, Locale=pt_BR
2024-10-28 10:40:30 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public com.example.demo.model.Livro com.example.demo.controller.LivroGraphQLController.atualizarLivro(java.lang.Long,java.lang.String,java.lang.String); target is of class [com.example.demo.controller.LivroGraphQLController]
2024-10-28 10:40:30 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public com.example.demo.model.Livro com.example.demo.controller.LivroGraphQLController.atualizarLivro(java.lang.Long,java.lang.String,java.lang.String); target is of class [com.example.demo.controller.LivroGraphQLController]
2024-10-28 10:40:30 [http-nio-8080-exec-9] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.controller.LivroGraphQLController.atualizarLivro() com argumento[s] = [3, Título Atualizado, Autor Atualizado]
2024-10-28 10:40:30 [http-nio-8080-exec-9] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.LivroService.atualizar() com argumento[s] = [3, com.example.demo.model.Livro@1c8bcaad]
2024-10-28 10:40:30 [http-nio-8080-exec-9] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: org.springframework.data.repository.CrudRepository.findById() com argumento[s] = [3]
2024-10-28 10:40:30 [http-nio-8080-exec-9] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: org.springframework.data.repository.CrudRepository.findById() com resultado = Optional.empty
2024-10-28 10:40:30 [http-nio-8080-exec-9] ERROR c.example.demo.aspect.LoggingAspect - Exceção em com.example.demo.service.LivroService.atualizar() com causa = NULL
2024-10-28 10:40:30 [http-nio-8080-exec-9] ERROR c.example.demo.aspect.LoggingAspect - Exceção em com.example.demo.controller.LivroGraphQLController.atualizarLivro() com causa = NULL
2024-10-28 10:40:30 [http-nio-8080-exec-9] ERROR o.s.g.e.ExceptionResolversExceptionHandler - Unresolved EntityNotFoundException for executionId 8087f96c-cd1e-1e8a-4b45-8eee840f00be
jakarta.persistence.EntityNotFoundException: Livro com o id '3' não foi encontrado.
	at com.example.demo.service.LivroService.lambda$0(LivroService.java:29)
	at java.base/java.util.Optional.orElseThrow(Optional.java:403)
	at com.example.demo.service.LivroService.buscarPorId(LivroService.java:29)
	at com.example.demo.service.LivroService.atualizar(LivroService.java:37)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at com.example.demo.aspect.LoggingAspect.logAround(LoggingAspect.java:39)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:627)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:71)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at com.example.demo.service.LivroService$$SpringCGLIB$$0.atualizar(<generated>)
	at com.example.demo.controller.LivroGraphQLController.atualizarLivro(LivroGraphQLController.java:54)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at com.example.demo.aspect.LoggingAspect.logAround(LoggingAspect.java:39)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:627)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:71)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.proceed(AuthorizationManagerBeforeMethodInterceptor.java:269)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.attemptAuthorization(AuthorizationManagerBeforeMethodInterceptor.java:264)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.invoke(AuthorizationManagerBeforeMethodInterceptor.java:197)
	at org.springframework.security.config.annotation.method.configuration.DeferringMethodInterceptor.invoke(DeferringMethodInterceptor.java:44)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at com.example.demo.controller.LivroGraphQLController$$SpringCGLIB$$0.atualizarLivro(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.graphql.data.method.InvocableHandlerMethodSupport.doInvoke(InvocableHandlerMethodSupport.java:117)
	at org.springframework.graphql.data.method.annotation.support.DataFetcherHandlerMethod.validateAndInvoke(DataFetcherHandlerMethod.java:142)
	at org.springframework.graphql.data.method.annotation.support.DataFetcherHandlerMethod.invoke(DataFetcherHandlerMethod.java:125)
	at org.springframework.graphql.data.method.annotation.support.DataFetcherHandlerMethod.invoke(DataFetcherHandlerMethod.java:103)
	at org.springframework.graphql.data.method.annotation.support.AnnotatedControllerConfigurer$SchemaMappingDataFetcher.get(AnnotatedControllerConfigurer.java:520)
	at org.springframework.graphql.execution.ContextDataFetcherDecorator.lambda$get$0(ContextDataFetcherDecorator.java:87)
	at io.micrometer.context.ContextSnapshot.lambda$wrap$1(ContextSnapshot.java:106)
	at org.springframework.graphql.execution.ContextDataFetcherDecorator.get(ContextDataFetcherDecorator.java:87)
	at graphql.execution.ExecutionStrategy.invokeDataFetcher(ExecutionStrategy.java:533)
	at graphql.execution.ExecutionStrategy.fetchField(ExecutionStrategy.java:497)
	at graphql.execution.ExecutionStrategy.fetchField(ExecutionStrategy.java:438)
	at graphql.execution.ExecutionStrategy.resolveFieldWithInfo(ExecutionStrategy.java:397)
	at graphql.execution.ExecutionStrategy.resolveField(ExecutionStrategy.java:361)
	at graphql.execution.AsyncSerialExecutionStrategy.lambda$execute$1(AsyncSerialExecutionStrategy.java:57)
	at graphql.execution.Async.eachSequentiallyPolymorphicImpl(Async.java:329)
	at graphql.execution.Async.eachSequentially(Async.java:317)
	at graphql.execution.AsyncSerialExecutionStrategy.execute(AsyncSerialExecutionStrategy.java:52)
	at graphql.execution.Execution.executeOperation(Execution.java:180)
	at graphql.execution.Execution.execute(Execution.java:116)
	at graphql.GraphQL.execute(GraphQL.java:546)
	at graphql.GraphQL.lambda$parseValidateAndExecute$13(GraphQL.java:476)
	at java.base/java.util.concurrent.CompletableFuture.uniComposeStage(CompletableFuture.java:1187)
	at java.base/java.util.concurrent.CompletableFuture.thenCompose(CompletableFuture.java:2341)
	at graphql.GraphQL.parseValidateAndExecute(GraphQL.java:471)
	at graphql.GraphQL.lambda$executeAsync$9(GraphQL.java:429)
	at java.base/java.util.concurrent.CompletableFuture.uniComposeStage(CompletableFuture.java:1187)
	at java.base/java.util.concurrent.CompletableFuture.thenCompose(CompletableFuture.java:2341)
	at graphql.GraphQL.executeAsync(GraphQL.java:418)
	at org.springframework.graphql.execution.DefaultExecutionGraphQlService.lambda$execute$2(DefaultExecutionGraphQlService.java:104)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:47)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.Mono.subscribeWith(Mono.java:4642)
	at reactor.core.publisher.Mono.toFuture(Mono.java:5154)
	at org.springframework.graphql.server.webmvc.GraphQlHttpHandler.prepareResponse(GraphQlHttpHandler.java:82)
	at org.springframework.graphql.server.webmvc.AbstractGraphQlHttpHandler.handleRequest(AbstractGraphQlHttpHandler.java:132)
	at org.springframework.web.servlet.function.support.HandlerFunctionAdapter.handle(HandlerFunctionAdapter.java:108)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.example.demo.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-10-28 10:40:30 [http-nio-8080-exec-9] DEBUG o.s.g.s.webmvc.GraphQlHttpHandler - Execution result has errors: [INTERNAL_ERROR for 8087f96c-cd1e-1e8a-4b45-8eee840f00be].
2024-10-28 10:40:50 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing POST /graphql
2024-10-28 10:40:50 [http-nio-8080-exec-10] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com argumento[s] = [admin]
2024-10-28 10:40:50 [http-nio-8080-exec-10] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.repository.UsuarioRepository.findByUsername() com argumento[s] = [admin]
2024-10-28 10:40:50 [http-nio-8080-exec-10] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.repository.UsuarioRepository.findByUsername() com resultado = Optional[com.example.demo.model.Usuario@2e26fbe]
2024-10-28 10:40:50 [http-nio-8080-exec-10] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com resultado = com.example.demo.model.Usuario@2e26fbe
2024-10-28 10:40:50 [http-nio-8080-exec-10] INFO  c.e.d.s.JwtAuthenticationFilter - Usuário autenticado: admin
2024-10-28 10:40:50 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured POST /graphql
2024-10-28 10:40:50 [http-nio-8080-exec-10] DEBUG o.s.g.s.webmvc.GraphQlHttpHandler - Executing: document='mutation atualiza {
  atualizarLivro(id: 4, titulo: "Título Atualizado", autor: "Autor Atualizado") {
    id
    titulo
    autor
  }
}

mutation cadastro {
  cadastrarLivro(titulo: "Novo ", autor: "Autor") {
    id
    titulo
    autor
  }
}

mutation deleta {
  deletarLivro(id: 3)
}', operationName='atualiza', id=8bedc97a-66e0-cebd-b3e3-bf7573200aee, Locale=pt_BR
2024-10-28 10:40:50 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public com.example.demo.model.Livro com.example.demo.controller.LivroGraphQLController.atualizarLivro(java.lang.Long,java.lang.String,java.lang.String); target is of class [com.example.demo.controller.LivroGraphQLController]
2024-10-28 10:40:50 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public com.example.demo.model.Livro com.example.demo.controller.LivroGraphQLController.atualizarLivro(java.lang.Long,java.lang.String,java.lang.String); target is of class [com.example.demo.controller.LivroGraphQLController]
2024-10-28 10:40:50 [http-nio-8080-exec-10] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.controller.LivroGraphQLController.atualizarLivro() com argumento[s] = [4, Título Atualizado, Autor Atualizado]
2024-10-28 10:40:50 [http-nio-8080-exec-10] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.LivroService.atualizar() com argumento[s] = [4, com.example.demo.model.Livro@2f5bf93b]
2024-10-28 10:40:50 [http-nio-8080-exec-10] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: org.springframework.data.repository.CrudRepository.findById() com argumento[s] = [4]
2024-10-28 10:40:50 [http-nio-8080-exec-10] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: org.springframework.data.repository.CrudRepository.findById() com resultado = Optional[com.example.demo.model.Livro@5b8296d2]
2024-10-28 10:40:50 [http-nio-8080-exec-10] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: org.springframework.data.repository.CrudRepository.save() com argumento[s] = [com.example.demo.model.Livro@5b8296d2]
2024-10-28 10:40:50 [http-nio-8080-exec-10] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: org.springframework.data.repository.CrudRepository.save() com resultado = com.example.demo.model.Livro@5b8296d2
2024-10-28 10:40:50 [http-nio-8080-exec-10] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.LivroService.atualizar() com resultado = com.example.demo.model.Livro@5b8296d2
2024-10-28 10:40:50 [http-nio-8080-exec-10] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.controller.LivroGraphQLController.atualizarLivro() com resultado = com.example.demo.model.Livro@5b8296d2
2024-10-28 10:40:50 [http-nio-8080-exec-10] DEBUG o.s.g.s.webmvc.GraphQlHttpHandler - Execution result is ready.
2024-10-28 10:40:52 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /graphql
2024-10-28 10:40:52 [http-nio-8080-exec-1] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com argumento[s] = [admin]
2024-10-28 10:40:52 [http-nio-8080-exec-1] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.repository.UsuarioRepository.findByUsername() com argumento[s] = [admin]
2024-10-28 10:40:52 [http-nio-8080-exec-1] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.repository.UsuarioRepository.findByUsername() com resultado = Optional[com.example.demo.model.Usuario@5f5f394d]
2024-10-28 10:40:52 [http-nio-8080-exec-1] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com resultado = com.example.demo.model.Usuario@5f5f394d
2024-10-28 10:40:52 [http-nio-8080-exec-1] INFO  c.e.d.s.JwtAuthenticationFilter - Usuário autenticado: admin
2024-10-28 10:40:52 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured POST /graphql
2024-10-28 10:40:52 [http-nio-8080-exec-1] DEBUG o.s.g.s.webmvc.GraphQlHttpHandler - Executing: document='query {
  listarLivros {
    id
    titulo
    autor
  }
}
', id=135e5784-05c2-6f8c-6941-d730d95319be, Locale=pt_BR
2024-10-28 10:40:52 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.util.List com.example.demo.controller.LivroGraphQLController.listarLivros(); target is of class [com.example.demo.controller.LivroGraphQLController]
2024-10-28 10:40:52 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.util.List com.example.demo.controller.LivroGraphQLController.listarLivros(); target is of class [com.example.demo.controller.LivroGraphQLController]
2024-10-28 10:40:52 [http-nio-8080-exec-1] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.controller.LivroGraphQLController.listarLivros() com argumento[s] = []
2024-10-28 10:40:52 [http-nio-8080-exec-1] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.LivroService.listarTodos() com argumento[s] = []
2024-10-28 10:40:52 [http-nio-8080-exec-1] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: org.springframework.data.repository.ListCrudRepository.findAll() com argumento[s] = []
2024-10-28 10:40:52 [http-nio-8080-exec-1] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: org.springframework.data.repository.ListCrudRepository.findAll() com resultado = [com.example.demo.model.Livro@64ece396, com.example.demo.model.Livro@14544bd0, com.example.demo.model.Livro@44134390]
2024-10-28 10:40:52 [http-nio-8080-exec-1] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.LivroService.listarTodos() com resultado = [com.example.demo.model.Livro@64ece396, com.example.demo.model.Livro@14544bd0, com.example.demo.model.Livro@44134390]
2024-10-28 10:40:52 [http-nio-8080-exec-1] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.controller.LivroGraphQLController.listarLivros() com resultado = [com.example.demo.model.Livro@64ece396, com.example.demo.model.Livro@14544bd0, com.example.demo.model.Livro@44134390]
2024-10-28 10:40:52 [http-nio-8080-exec-1] DEBUG o.s.g.s.webmvc.GraphQlHttpHandler - Execution result is ready.
