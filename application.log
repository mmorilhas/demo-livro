2024-11-07 11:27:43 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=14h56m55s573ms294µs200ns).
2024-11-07 11:41:02 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=13m22s847ms645µs700ns).
2024-11-07 12:44:29 [main] INFO  com.example.demo.DemoApplication - Starting DemoApplication using Java 21.0.2 with PID 10480 (C:\dev\workspace\eclipse-2023\demo-livro\target\classes started by michelle in C:\dev\workspace\eclipse-2023\demo-livro)
2024-11-07 12:44:29 [main] DEBUG com.example.demo.DemoApplication - Running with Spring Boot v3.3.4, Spring v6.1.13
2024-11-07 12:44:29 [main] INFO  com.example.demo.DemoApplication - No active profile set, falling back to 1 default profile: "default"
2024-11-07 12:44:31 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-11-07 12:44:31 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.30]
2024-11-07 12:44:31 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-11-07 12:44:31 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-11-07 12:44:31 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final
2024-11-07 12:44:31 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-11-07 12:44:32 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-11-07 12:44:32 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6a2badb1
2024-11-07 12:44:32 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-11-07 12:44:33 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-11-07 12:44:34 [main] DEBUG c.e.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2024-11-07 12:44:34 [main] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
2024-11-07 12:44:34 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-11-07 12:44:35 [main] DEBUG o.s.g.d.m.a.s.AnnotatedControllerExceptionResolver - @GraphQlException methods in ControllerAdvice beans: none
2024-11-07 12:44:36 [main] INFO  o.s.g.e.DefaultSchemaResourceGraphQlSourceBuilder - Loaded 1 resource(s) in the GraphQL schema.
2024-11-07 12:44:36 [main] DEBUG o.s.g.e.DefaultSchemaResourceGraphQlSourceBuilder - Loaded GraphQL schema resources: (file [C:\dev\workspace\eclipse-2023\demo-livro\target\classes\graphql\schema.graphqls])
2024-11-07 12:44:36 [main] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-11-07 12:44:36 [main] INFO  com.example.demo.DemoApplication - Started DemoApplication in 7.98 seconds (process running for 8.35)
2024-11-07 12:44:46 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-11-07 12:44:46 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/login
2024-11-07 12:44:46 [http-nio-8080-exec-2] WARN  c.e.d.s.JwtAuthenticationFilter - Cabeçalho Authorization não encontrado ou não começa com Bearer
2024-11-07 12:44:46 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2024-11-07 12:44:46 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured POST /auth/login
2024-11-07 12:44:46 [http-nio-8080-exec-2] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.controller.AuthController.login() com argumento[s] = [com.example.demo.controller.AuthController$AuthRequest@76b1deea]
2024-11-07 12:44:46 [http-nio-8080-exec-2] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com argumento[s] = [admin]
2024-11-07 12:44:46 [http-nio-8080-exec-2] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.repository.UsuarioRepository.findByUsername() com argumento[s] = [admin]
2024-11-07 12:44:46 [http-nio-8080-exec-2] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.repository.UsuarioRepository.findByUsername() com resultado = Optional[com.example.demo.model.Usuario@5f4ddaad]
2024-11-07 12:44:46 [http-nio-8080-exec-2] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com resultado = com.example.demo.model.Usuario@5f4ddaad
2024-11-07 12:44:46 [http-nio-8080-exec-2] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2024-11-07 12:44:46 [http-nio-8080-exec-2] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.repository.UsuarioRepository.findByUsername() com argumento[s] = [admin]
2024-11-07 12:44:46 [http-nio-8080-exec-2] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.repository.UsuarioRepository.findByUsername() com resultado = Optional[com.example.demo.model.Usuario@5f4ddaad]
2024-11-07 12:44:46 [http-nio-8080-exec-2] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.controller.AuthController.login() com resultado = <200 OK OK,com.example.demo.controller.AuthController$AuthResponse@685d3e37,[]>
2024-11-07 12:45:04 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing POST /graphql
2024-11-07 12:45:04 [http-nio-8080-exec-3] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com argumento[s] = [admin]
2024-11-07 12:45:04 [http-nio-8080-exec-3] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.repository.UsuarioRepository.findByUsername() com argumento[s] = [admin]
2024-11-07 12:45:04 [http-nio-8080-exec-3] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.repository.UsuarioRepository.findByUsername() com resultado = Optional[com.example.demo.model.Usuario@b5fdcbd]
2024-11-07 12:45:04 [http-nio-8080-exec-3] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com resultado = com.example.demo.model.Usuario@b5fdcbd
2024-11-07 12:45:04 [http-nio-8080-exec-3] INFO  c.e.d.s.JwtAuthenticationFilter - Usuário autenticado: admin
2024-11-07 12:45:04 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured POST /graphql
2024-11-07 12:45:04 [http-nio-8080-exec-3] DEBUG o.s.g.s.webmvc.GraphQlHttpHandler - Executing: document='{
  listarLivros {
    id
    titulo
    autores {
      id
      nome
      biografia
    }
    genero {
      id
      nome
    }
  }
}', id=0092d0a6-3774-81f3-5a35-fdde52dda8bb, Locale=pt_BR
2024-11-07 12:45:04 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.util.List com.example.demo.controller.LivroGraphQLController.listarLivros(); target is of class [com.example.demo.controller.LivroGraphQLController]
2024-11-07 12:45:05 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.util.List com.example.demo.controller.LivroGraphQLController.listarLivros(); target is of class [com.example.demo.controller.LivroGraphQLController]
2024-11-07 12:45:05 [http-nio-8080-exec-3] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.controller.LivroGraphQLController.listarLivros() com argumento[s] = []
2024-11-07 12:45:05 [http-nio-8080-exec-3] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.LivroService.listarLivros() com argumento[s] = []
2024-11-07 12:45:05 [http-nio-8080-exec-3] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: org.springframework.data.repository.ListCrudRepository.findAll() com argumento[s] = []
2024-11-07 12:45:05 [http-nio-8080-exec-3] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: org.springframework.data.repository.ListCrudRepository.findAll() com resultado = [com.example.demo.model.Livro@6e2557c8, com.example.demo.model.Livro@6d023d5c]
2024-11-07 12:45:05 [http-nio-8080-exec-3] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.LivroService.listarLivros() com resultado = [com.example.demo.model.Livro@6e2557c8, com.example.demo.model.Livro@6d023d5c]
2024-11-07 12:45:05 [http-nio-8080-exec-3] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.controller.LivroGraphQLController.listarLivros() com resultado = [com.example.demo.model.Livro@6e2557c8, com.example.demo.model.Livro@6d023d5c]
2024-11-07 12:45:05 [http-nio-8080-exec-3] DEBUG o.s.g.s.webmvc.GraphQlHttpHandler - Execution result is ready.
2024-11-07 12:45:30 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing POST /graphql
2024-11-07 12:45:30 [http-nio-8080-exec-4] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com argumento[s] = [admin]
2024-11-07 12:45:30 [http-nio-8080-exec-4] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.repository.UsuarioRepository.findByUsername() com argumento[s] = [admin]
2024-11-07 12:45:30 [http-nio-8080-exec-4] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.repository.UsuarioRepository.findByUsername() com resultado = Optional[com.example.demo.model.Usuario@1a33eee0]
2024-11-07 12:45:30 [http-nio-8080-exec-4] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com resultado = com.example.demo.model.Usuario@1a33eee0
2024-11-07 12:45:30 [http-nio-8080-exec-4] INFO  c.e.d.s.JwtAuthenticationFilter - Usuário autenticado: admin
2024-11-07 12:45:30 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured POST /graphql
2024-11-07 12:45:30 [http-nio-8080-exec-4] DEBUG o.s.g.s.webmvc.GraphQlHttpHandler - Executing: document='{
  listarLivros {
    id
    titulo
    autores {
      id
      nome
      
    }
    genero {
      id
      nome
    }
  }
}', id=3b03739e-95ef-302d-aa05-9c53962c2b36, Locale=pt_BR
2024-11-07 12:45:30 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.util.List com.example.demo.controller.LivroGraphQLController.listarLivros(); target is of class [com.example.demo.controller.LivroGraphQLController]
2024-11-07 12:45:30 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.util.List com.example.demo.controller.LivroGraphQLController.listarLivros(); target is of class [com.example.demo.controller.LivroGraphQLController]
2024-11-07 12:45:30 [http-nio-8080-exec-4] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.controller.LivroGraphQLController.listarLivros() com argumento[s] = []
2024-11-07 12:45:30 [http-nio-8080-exec-4] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.LivroService.listarLivros() com argumento[s] = []
2024-11-07 12:45:30 [http-nio-8080-exec-4] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: org.springframework.data.repository.ListCrudRepository.findAll() com argumento[s] = []
2024-11-07 12:45:30 [http-nio-8080-exec-4] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: org.springframework.data.repository.ListCrudRepository.findAll() com resultado = [com.example.demo.model.Livro@11e02ec2, com.example.demo.model.Livro@7207ffcb]
2024-11-07 12:45:30 [http-nio-8080-exec-4] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.LivroService.listarLivros() com resultado = [com.example.demo.model.Livro@11e02ec2, com.example.demo.model.Livro@7207ffcb]
2024-11-07 12:45:30 [http-nio-8080-exec-4] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.controller.LivroGraphQLController.listarLivros() com resultado = [com.example.demo.model.Livro@11e02ec2, com.example.demo.model.Livro@7207ffcb]
2024-11-07 12:45:30 [http-nio-8080-exec-4] DEBUG o.s.g.s.webmvc.GraphQlHttpHandler - Execution result is ready.
2024-11-07 12:59:09 [main] INFO  com.example.demo.DemoApplication - Starting DemoApplication using Java 21.0.2 with PID 27740 (C:\dev\workspace\eclipse-2023\demo-livro\target\classes started by michelle in C:\dev\workspace\eclipse-2023\demo-livro)
2024-11-07 12:59:09 [main] DEBUG com.example.demo.DemoApplication - Running with Spring Boot v3.3.4, Spring v6.1.13
2024-11-07 12:59:09 [main] INFO  com.example.demo.DemoApplication - No active profile set, falling back to 1 default profile: "default"
2024-11-07 12:59:11 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-11-07 12:59:11 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.30]
2024-11-07 12:59:11 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-11-07 12:59:12 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-11-07 12:59:12 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final
2024-11-07 12:59:12 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-11-07 12:59:12 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-11-07 12:59:12 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2c2aab92
2024-11-07 12:59:12 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-11-07 12:59:13 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-11-07 12:59:14 [main] DEBUG c.e.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2024-11-07 12:59:14 [main] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
2024-11-07 12:59:15 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-11-07 12:59:15 [main] DEBUG o.s.g.d.m.a.s.AnnotatedControllerExceptionResolver - @GraphQlException methods in ControllerAdvice beans: none
2024-11-07 12:59:16 [main] INFO  o.s.g.e.DefaultSchemaResourceGraphQlSourceBuilder - Loaded 1 resource(s) in the GraphQL schema.
2024-11-07 12:59:16 [main] DEBUG o.s.g.e.DefaultSchemaResourceGraphQlSourceBuilder - Loaded GraphQL schema resources: (file [C:\dev\workspace\eclipse-2023\demo-livro\target\classes\graphql\schema.graphqls])
2024-11-07 12:59:16 [main] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-11-07 12:59:16 [main] INFO  com.example.demo.DemoApplication - Started DemoApplication in 7.582 seconds (process running for 7.883)
2024-11-07 13:01:20 [http-nio-8080-exec-3] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-11-07 13:01:20 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing POST /graphql
2024-11-07 13:01:20 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing POST /graphql
2024-11-07 13:01:20 [http-nio-8080-exec-3] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com argumento[s] = [admin]
2024-11-07 13:01:20 [http-nio-8080-exec-5] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com argumento[s] = [admin]
2024-11-07 13:01:20 [http-nio-8080-exec-3] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.repository.UsuarioRepository.findByUsername() com argumento[s] = [admin]
2024-11-07 13:01:20 [http-nio-8080-exec-5] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.repository.UsuarioRepository.findByUsername() com argumento[s] = [admin]
2024-11-07 13:01:21 [http-nio-8080-exec-5] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.repository.UsuarioRepository.findByUsername() com resultado = Optional[com.example.demo.model.Usuario@708a1cf3]
2024-11-07 13:01:21 [http-nio-8080-exec-3] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.repository.UsuarioRepository.findByUsername() com resultado = Optional[com.example.demo.model.Usuario@6b930e45]
2024-11-07 13:01:21 [http-nio-8080-exec-3] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com resultado = com.example.demo.model.Usuario@6b930e45
2024-11-07 13:01:21 [http-nio-8080-exec-5] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com resultado = com.example.demo.model.Usuario@708a1cf3
2024-11-07 13:01:21 [http-nio-8080-exec-5] INFO  c.e.d.s.JwtAuthenticationFilter - Usuário autenticado: admin
2024-11-07 13:01:21 [http-nio-8080-exec-3] INFO  c.e.d.s.JwtAuthenticationFilter - Usuário autenticado: admin
2024-11-07 13:01:21 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured POST /graphql
2024-11-07 13:01:21 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured POST /graphql
2024-11-07 13:01:21 [http-nio-8080-exec-5] DEBUG o.s.g.s.webmvc.GraphQlHttpHandler - Executing: document='
    query IntrospectionQuery {
      __schema {
        
        queryType { name }
        mutationType { name }
        subscriptionType { name }
        types {
          ...FullType
        }
        directives {
          name
          description
          
          locations
          args {
            ...InputValue
          }
        }
      }
    }

    fragment FullType on __Type {
      kind
      name
      description
      
      fields(includeDeprecated: true) {
        name
        description
        args {
          ...InputValue
        }
        type {
          ...TypeRef
        }
        isDeprecated
        deprecationReason
      }
      inputFields {
        ...InputValue
      }
      interfaces {
        ...TypeRef
      }
      enumValues(includeDeprecated: true) {
        name
        description
        isDeprecated
        deprecationReason
      }
      possibleTypes {
        ...TypeRef
      }
    }

    fragment InputValue on __InputValue {
      name
      description
      type { ...TypeRef }
      defaultValue
      
      
    }

    fragment TypeRef on __Type {
      kind
      name
      ofType {
        kind
        name
        ofType {
          kind
          name
          ofType {
            kind
            name
            ofType {
              kind
              name
              ofType {
                kind
                name
                ofType {
                  kind
                  name
                  ofType {
                    kind
                    name
                  }
                }
              }
            }
          }
        }
      }
    }
  ', id=2e75b0ad-8555-c5cf-8ab0-a7b0100ab550, Locale=pt_BR
2024-11-07 13:01:21 [http-nio-8080-exec-3] DEBUG o.s.g.s.webmvc.GraphQlHttpHandler - Executing: document='
    query IntrospectionQuery {
      __schema {
        
        queryType { name }
        mutationType { name }
        subscriptionType { name }
        types {
          ...FullType
        }
        directives {
          name
          description
          
          locations
          args {
            ...InputValue
          }
        }
      }
    }

    fragment FullType on __Type {
      kind
      name
      description
      
      fields(includeDeprecated: true) {
        name
        description
        args {
          ...InputValue
        }
        type {
          ...TypeRef
        }
        isDeprecated
        deprecationReason
      }
      inputFields {
        ...InputValue
      }
      interfaces {
        ...TypeRef
      }
      enumValues(includeDeprecated: true) {
        name
        description
        isDeprecated
        deprecationReason
      }
      possibleTypes {
        ...TypeRef
      }
    }

    fragment InputValue on __InputValue {
      name
      description
      type { ...TypeRef }
      defaultValue
      
      
    }

    fragment TypeRef on __Type {
      kind
      name
      ofType {
        kind
        name
        ofType {
          kind
          name
          ofType {
            kind
            name
            ofType {
              kind
              name
              ofType {
                kind
                name
                ofType {
                  kind
                  name
                  ofType {
                    kind
                    name
                  }
                }
              }
            }
          }
        }
      }
    }
  ', id=571e4fbc-7d8f-99f6-3041-008c3a6ff03f, Locale=pt_BR
2024-11-07 13:01:21 [http-nio-8080-exec-5] DEBUG o.s.g.s.webmvc.GraphQlHttpHandler - Execution result is ready.
2024-11-07 13:01:21 [http-nio-8080-exec-3] DEBUG o.s.g.s.webmvc.GraphQlHttpHandler - Execution result is ready.
2024-11-07 13:01:21 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing POST /graphql
2024-11-07 13:01:21 [http-nio-8080-exec-4] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com argumento[s] = [admin]
2024-11-07 13:01:21 [http-nio-8080-exec-4] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.repository.UsuarioRepository.findByUsername() com argumento[s] = [admin]
2024-11-07 13:01:21 [http-nio-8080-exec-4] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.repository.UsuarioRepository.findByUsername() com resultado = Optional[com.example.demo.model.Usuario@25601f4a]
2024-11-07 13:01:21 [http-nio-8080-exec-4] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com resultado = com.example.demo.model.Usuario@25601f4a
2024-11-07 13:01:21 [http-nio-8080-exec-4] INFO  c.e.d.s.JwtAuthenticationFilter - Usuário autenticado: admin
2024-11-07 13:01:21 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured POST /graphql
2024-11-07 13:01:21 [http-nio-8080-exec-4] DEBUG o.s.g.s.webmvc.GraphQlHttpHandler - Executing: document='
    query IntrospectionQuery {
      __schema {
        
        queryType { name }
        mutationType { name }
        subscriptionType { name }
        types {
          ...FullType
        }
        directives {
          name
          description
          
          locations
          args {
            ...InputValue
          }
        }
      }
    }

    fragment FullType on __Type {
      kind
      name
      description
      
      fields(includeDeprecated: true) {
        name
        description
        args {
          ...InputValue
        }
        type {
          ...TypeRef
        }
        isDeprecated
        deprecationReason
      }
      inputFields {
        ...InputValue
      }
      interfaces {
        ...TypeRef
      }
      enumValues(includeDeprecated: true) {
        name
        description
        isDeprecated
        deprecationReason
      }
      possibleTypes {
        ...TypeRef
      }
    }

    fragment InputValue on __InputValue {
      name
      description
      type { ...TypeRef }
      defaultValue
      
      
    }

    fragment TypeRef on __Type {
      kind
      name
      ofType {
        kind
        name
        ofType {
          kind
          name
          ofType {
            kind
            name
            ofType {
              kind
              name
              ofType {
                kind
                name
                ofType {
                  kind
                  name
                  ofType {
                    kind
                    name
                  }
                }
              }
            }
          }
        }
      }
    }
  ', id=35a484ef-bd91-335f-06fe-6f573882394b, Locale=pt_BR
2024-11-07 13:01:21 [http-nio-8080-exec-4] DEBUG o.s.g.s.webmvc.GraphQlHttpHandler - Execution result is ready.
2024-11-07 13:01:38 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing POST /graphql
2024-11-07 13:01:38 [http-nio-8080-exec-6] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com argumento[s] = [admin]
2024-11-07 13:01:38 [http-nio-8080-exec-6] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.repository.UsuarioRepository.findByUsername() com argumento[s] = [admin]
2024-11-07 13:01:38 [http-nio-8080-exec-6] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.repository.UsuarioRepository.findByUsername() com resultado = Optional[com.example.demo.model.Usuario@7cad1d46]
2024-11-07 13:01:38 [http-nio-8080-exec-6] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com resultado = com.example.demo.model.Usuario@7cad1d46
2024-11-07 13:01:38 [http-nio-8080-exec-6] INFO  c.e.d.s.JwtAuthenticationFilter - Usuário autenticado: admin
2024-11-07 13:01:38 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured POST /graphql
2024-11-07 13:01:38 [http-nio-8080-exec-6] DEBUG o.s.g.s.webmvc.GraphQlHttpHandler - Executing: document='{
  listarLivros {
    id
    titulo
    autores {
      id
      nome
    }
    genero {
      id
      nome
    }
  }
}', id=0d73125f-759a-c29a-b586-685a3f316242, Locale=pt_BR
2024-11-07 13:01:38 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.util.List com.example.demo.controller.LivroGraphQLController.listarLivros(); target is of class [com.example.demo.controller.LivroGraphQLController]
2024-11-07 13:01:38 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.util.List com.example.demo.controller.LivroGraphQLController.listarLivros(); target is of class [com.example.demo.controller.LivroGraphQLController]
2024-11-07 13:01:38 [http-nio-8080-exec-6] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.controller.LivroGraphQLController.listarLivros() com argumento[s] = []
2024-11-07 13:01:38 [http-nio-8080-exec-6] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.LivroService.listarLivros() com argumento[s] = []
2024-11-07 13:01:38 [http-nio-8080-exec-6] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: org.springframework.data.repository.ListCrudRepository.findAll() com argumento[s] = []
2024-11-07 13:01:38 [http-nio-8080-exec-6] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: org.springframework.data.repository.ListCrudRepository.findAll() com resultado = [com.example.demo.model.Livro@c83e3c4, com.example.demo.model.Livro@19a58012]
2024-11-07 13:01:38 [http-nio-8080-exec-6] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.LivroService.listarLivros() com resultado = [com.example.demo.model.Livro@c83e3c4, com.example.demo.model.Livro@19a58012]
2024-11-07 13:01:38 [http-nio-8080-exec-6] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.controller.LivroGraphQLController.listarLivros() com resultado = [com.example.demo.model.Livro@c83e3c4, com.example.demo.model.Livro@19a58012]
2024-11-07 13:01:38 [http-nio-8080-exec-6] DEBUG o.s.g.s.webmvc.GraphQlHttpHandler - Execution result is ready.
2024-11-07 13:08:42 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing POST /livros/cadastrar
2024-11-07 13:08:42 [http-nio-8080-exec-10] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com argumento[s] = [admin]
2024-11-07 13:08:42 [http-nio-8080-exec-10] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.repository.UsuarioRepository.findByUsername() com argumento[s] = [admin]
2024-11-07 13:08:42 [http-nio-8080-exec-10] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.repository.UsuarioRepository.findByUsername() com resultado = Optional[com.example.demo.model.Usuario@1dbdce03]
2024-11-07 13:08:42 [http-nio-8080-exec-10] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com resultado = com.example.demo.model.Usuario@1dbdce03
2024-11-07 13:08:42 [http-nio-8080-exec-10] INFO  c.e.d.s.JwtAuthenticationFilter - Usuário autenticado: admin
2024-11-07 13:08:42 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured POST /livros/cadastrar
2024-11-07 13:08:42 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing POST /livros/cadastrar
2024-11-07 13:08:42 [http-nio-8080-exec-2] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com argumento[s] = [admin]
2024-11-07 13:08:42 [http-nio-8080-exec-2] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.repository.UsuarioRepository.findByUsername() com argumento[s] = [admin]
2024-11-07 13:08:42 [http-nio-8080-exec-2] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.repository.UsuarioRepository.findByUsername() com resultado = Optional[com.example.demo.model.Usuario@500d1e87]
2024-11-07 13:08:42 [http-nio-8080-exec-2] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com resultado = com.example.demo.model.Usuario@500d1e87
2024-11-07 13:08:43 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing POST /livros/cadastrar
2024-11-07 13:08:43 [http-nio-8080-exec-2] INFO  c.e.d.s.JwtAuthenticationFilter - Usuário autenticado: admin
2024-11-07 13:08:43 [http-nio-8080-exec-3] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com argumento[s] = [admin]
2024-11-07 13:08:43 [http-nio-8080-exec-3] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.repository.UsuarioRepository.findByUsername() com argumento[s] = [admin]
2024-11-07 13:08:43 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured POST /livros/cadastrar
2024-11-07 13:08:43 [http-nio-8080-exec-3] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.repository.UsuarioRepository.findByUsername() com resultado = Optional[com.example.demo.model.Usuario@4f66952f]
2024-11-07 13:08:43 [http-nio-8080-exec-3] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com resultado = com.example.demo.model.Usuario@4f66952f
2024-11-07 13:08:43 [http-nio-8080-exec-3] INFO  c.e.d.s.JwtAuthenticationFilter - Usuário autenticado: admin
2024-11-07 13:08:43 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured POST /livros/cadastrar
2024-11-07 13:08:43 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.demo.controller.LivroController.cadastrar(com.example.demo.model.Livro); target is of class [com.example.demo.controller.LivroController]
2024-11-07 13:08:43 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.demo.controller.LivroController.cadastrar(com.example.demo.model.Livro); target is of class [com.example.demo.controller.LivroController]
2024-11-07 13:08:43 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.demo.controller.LivroController.cadastrar(com.example.demo.model.Livro); target is of class [com.example.demo.controller.LivroController]
2024-11-07 13:08:43 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.demo.controller.LivroController.cadastrar(com.example.demo.model.Livro); target is of class [com.example.demo.controller.LivroController]
2024-11-07 13:08:43 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.demo.controller.LivroController.cadastrar(com.example.demo.model.Livro); target is of class [com.example.demo.controller.LivroController]
2024-11-07 13:08:43 [http-nio-8080-exec-3] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.controller.LivroController.cadastrar() com argumento[s] = [com.example.demo.model.Livro@40c5e8dc]
2024-11-07 13:08:43 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.demo.controller.LivroController.cadastrar(com.example.demo.model.Livro); target is of class [com.example.demo.controller.LivroController]
2024-11-07 13:08:43 [http-nio-8080-exec-10] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.controller.LivroController.cadastrar() com argumento[s] = [com.example.demo.model.Livro@be32fef]
2024-11-07 13:08:43 [http-nio-8080-exec-3] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.LivroService.salvar() com argumento[s] = [com.example.demo.model.Livro@40c5e8dc]
2024-11-07 13:08:43 [http-nio-8080-exec-2] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.controller.LivroController.cadastrar() com argumento[s] = [com.example.demo.model.Livro@233a45e9]
2024-11-07 13:08:43 [http-nio-8080-exec-10] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.LivroService.salvar() com argumento[s] = [com.example.demo.model.Livro@be32fef]
2024-11-07 13:08:43 [http-nio-8080-exec-2] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.LivroService.salvar() com argumento[s] = [com.example.demo.model.Livro@233a45e9]
2024-11-07 13:08:43 [http-nio-8080-exec-2] ERROR c.example.demo.aspect.LoggingAspect - Exceção em com.example.demo.service.LivroService.salvar() com causa = NULL
2024-11-07 13:08:43 [http-nio-8080-exec-3] ERROR c.example.demo.aspect.LoggingAspect - Exceção em com.example.demo.service.LivroService.salvar() com causa = NULL
2024-11-07 13:08:43 [http-nio-8080-exec-2] ERROR c.example.demo.aspect.LoggingAspect - Exceção em com.example.demo.controller.LivroController.cadastrar() com causa = NULL
2024-11-07 13:08:43 [http-nio-8080-exec-10] ERROR c.example.demo.aspect.LoggingAspect - Exceção em com.example.demo.service.LivroService.salvar() com causa = NULL
2024-11-07 13:08:43 [http-nio-8080-exec-3] ERROR c.example.demo.aspect.LoggingAspect - Exceção em com.example.demo.controller.LivroController.cadastrar() com causa = NULL
2024-11-07 13:08:43 [http-nio-8080-exec-10] ERROR c.example.demo.aspect.LoggingAspect - Exceção em com.example.demo.controller.LivroController.cadastrar() com causa = NULL
2024-11-07 13:08:43 [http-nio-8080-exec-3] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.NullPointerException: Cannot invoke "java.util.List.stream()" because the return value of "com.example.demo.model.Livro.getAutores()" is null] with root cause
java.lang.NullPointerException: Cannot invoke "java.util.List.stream()" because the return value of "com.example.demo.model.Livro.getAutores()" is null
	at com.example.demo.service.LivroService.salvar(LivroService.java:48)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at com.example.demo.aspect.LoggingAspect.logAround(LoggingAspect.java:39)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:627)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:71)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at com.example.demo.service.LivroService$$SpringCGLIB$$0.salvar(<generated>)
	at com.example.demo.controller.LivroController.cadastrar(LivroController.java:50)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at com.example.demo.aspect.LoggingAspect.logAround(LoggingAspect.java:39)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:627)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:71)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.proceed(AuthorizationManagerBeforeMethodInterceptor.java:269)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.attemptAuthorization(AuthorizationManagerBeforeMethodInterceptor.java:264)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.invoke(AuthorizationManagerBeforeMethodInterceptor.java:197)
	at org.springframework.security.config.annotation.method.configuration.DeferringMethodInterceptor.invoke(DeferringMethodInterceptor.java:44)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at com.example.demo.controller.LivroController$$SpringCGLIB$$0.cadastrar(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.example.demo.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-11-07 13:08:43 [http-nio-8080-exec-2] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.NullPointerException: Cannot invoke "java.util.List.stream()" because the return value of "com.example.demo.model.Livro.getAutores()" is null] with root cause
java.lang.NullPointerException: Cannot invoke "java.util.List.stream()" because the return value of "com.example.demo.model.Livro.getAutores()" is null
	at com.example.demo.service.LivroService.salvar(LivroService.java:48)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at com.example.demo.aspect.LoggingAspect.logAround(LoggingAspect.java:39)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:627)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:71)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at com.example.demo.service.LivroService$$SpringCGLIB$$0.salvar(<generated>)
	at com.example.demo.controller.LivroController.cadastrar(LivroController.java:50)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at com.example.demo.aspect.LoggingAspect.logAround(LoggingAspect.java:39)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:627)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:71)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.proceed(AuthorizationManagerBeforeMethodInterceptor.java:269)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.attemptAuthorization(AuthorizationManagerBeforeMethodInterceptor.java:264)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.invoke(AuthorizationManagerBeforeMethodInterceptor.java:197)
	at org.springframework.security.config.annotation.method.configuration.DeferringMethodInterceptor.invoke(DeferringMethodInterceptor.java:44)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at com.example.demo.controller.LivroController$$SpringCGLIB$$0.cadastrar(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.example.demo.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-11-07 13:08:43 [http-nio-8080-exec-10] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.NullPointerException: Cannot invoke "java.util.List.stream()" because the return value of "com.example.demo.model.Livro.getAutores()" is null] with root cause
java.lang.NullPointerException: Cannot invoke "java.util.List.stream()" because the return value of "com.example.demo.model.Livro.getAutores()" is null
	at com.example.demo.service.LivroService.salvar(LivroService.java:48)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at com.example.demo.aspect.LoggingAspect.logAround(LoggingAspect.java:39)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:627)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:71)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at com.example.demo.service.LivroService$$SpringCGLIB$$0.salvar(<generated>)
	at com.example.demo.controller.LivroController.cadastrar(LivroController.java:50)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at com.example.demo.aspect.LoggingAspect.logAround(LoggingAspect.java:39)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:627)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:71)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.proceed(AuthorizationManagerBeforeMethodInterceptor.java:269)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.attemptAuthorization(AuthorizationManagerBeforeMethodInterceptor.java:264)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.invoke(AuthorizationManagerBeforeMethodInterceptor.java:197)
	at org.springframework.security.config.annotation.method.configuration.DeferringMethodInterceptor.invoke(DeferringMethodInterceptor.java:44)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at com.example.demo.controller.LivroController$$SpringCGLIB$$0.cadastrar(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.example.demo.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-11-07 13:08:43 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing POST /error
2024-11-07 13:08:43 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing POST /error
2024-11-07 13:08:43 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing POST /error
2024-11-07 13:08:43 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2024-11-07 13:08:43 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2024-11-07 13:08:43 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2024-11-07 14:22:54 [main] INFO  com.example.demo.DemoApplication - Starting DemoApplication using Java 21.0.2 with PID 19280 (C:\dev\workspace\eclipse-2023\demo-livro\target\classes started by michelle in C:\dev\workspace\eclipse-2023\demo-livro)
2024-11-07 14:22:54 [main] DEBUG com.example.demo.DemoApplication - Running with Spring Boot v3.3.4, Spring v6.1.13
2024-11-07 14:22:54 [main] INFO  com.example.demo.DemoApplication - No active profile set, falling back to 1 default profile: "default"
2024-11-07 14:22:55 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-11-07 14:22:55 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.30]
2024-11-07 14:22:55 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-11-07 14:22:56 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-11-07 14:22:56 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final
2024-11-07 14:22:56 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-11-07 14:22:56 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-11-07 14:22:56 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6a2badb1
2024-11-07 14:22:56 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-11-07 14:22:57 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-11-07 14:22:58 [main] DEBUG c.e.d.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2024-11-07 14:22:58 [main] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
2024-11-07 14:22:58 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-11-07 14:22:59 [main] DEBUG o.s.g.d.m.a.s.AnnotatedControllerExceptionResolver - @GraphQlException methods in ControllerAdvice beans: none
2024-11-07 14:22:59 [main] INFO  o.s.g.e.DefaultSchemaResourceGraphQlSourceBuilder - Loaded 1 resource(s) in the GraphQL schema.
2024-11-07 14:22:59 [main] DEBUG o.s.g.e.DefaultSchemaResourceGraphQlSourceBuilder - Loaded GraphQL schema resources: (file [C:\dev\workspace\eclipse-2023\demo-livro\target\classes\graphql\schema.graphqls])
2024-11-07 14:23:00 [main] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-11-07 14:23:00 [main] INFO  com.example.demo.DemoApplication - Started DemoApplication in 6.512 seconds (process running for 6.79)
2024-11-07 14:43:26 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-11-07 14:43:26 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/login
2024-11-07 14:43:26 [http-nio-8080-exec-2] WARN  c.e.d.s.JwtAuthenticationFilter - Cabeçalho Authorization não encontrado ou não começa com Bearer
2024-11-07 14:43:26 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2024-11-07 14:43:26 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured POST /auth/login
2024-11-07 14:43:26 [http-nio-8080-exec-2] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.controller.AuthController.login() com argumento[s] = [com.example.demo.controller.AuthController$AuthRequest@1e05155e]
2024-11-07 14:43:26 [http-nio-8080-exec-2] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com argumento[s] = [admin]
2024-11-07 14:43:26 [http-nio-8080-exec-2] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.repository.UsuarioRepository.findByUsername() com argumento[s] = [admin]
2024-11-07 14:43:27 [http-nio-8080-exec-2] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.repository.UsuarioRepository.findByUsername() com resultado = Optional[com.example.demo.model.Usuario@2b32bb25]
2024-11-07 14:43:27 [http-nio-8080-exec-2] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com resultado = com.example.demo.model.Usuario@2b32bb25
2024-11-07 14:43:27 [http-nio-8080-exec-2] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2024-11-07 14:43:27 [http-nio-8080-exec-2] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.repository.UsuarioRepository.findByUsername() com argumento[s] = [admin]
2024-11-07 14:43:27 [http-nio-8080-exec-2] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.repository.UsuarioRepository.findByUsername() com resultado = Optional[com.example.demo.model.Usuario@2b32bb25]
2024-11-07 14:43:27 [http-nio-8080-exec-2] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.controller.AuthController.login() com resultado = <200 OK OK,com.example.demo.controller.AuthController$AuthResponse@87b22e2,[]>
2024-11-07 14:44:36 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing POST /autor/cadastrar
2024-11-07 14:44:36 [http-nio-8080-exec-5] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com argumento[s] = [admin]
2024-11-07 14:44:36 [http-nio-8080-exec-5] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.repository.UsuarioRepository.findByUsername() com argumento[s] = [admin]
2024-11-07 14:44:36 [http-nio-8080-exec-5] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.repository.UsuarioRepository.findByUsername() com resultado = Optional[com.example.demo.model.Usuario@4f5d669b]
2024-11-07 14:44:36 [http-nio-8080-exec-5] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com resultado = com.example.demo.model.Usuario@4f5d669b
2024-11-07 14:44:36 [http-nio-8080-exec-5] INFO  c.e.d.s.JwtAuthenticationFilter - Usuário autenticado: admin
2024-11-07 14:44:36 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured POST /autor/cadastrar
2024-11-07 14:44:36 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.demo.controller.AutorController.cadastrar(com.example.demo.model.Autor); target is of class [com.example.demo.controller.AutorController]
2024-11-07 14:44:37 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.demo.controller.AutorController.cadastrar(com.example.demo.model.Autor); target is of class [com.example.demo.controller.AutorController]
2024-11-07 14:44:37 [http-nio-8080-exec-5] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.controller.AutorController.cadastrar() com argumento[s] = [com.example.demo.model.Autor@5800f653]
2024-11-07 14:44:37 [http-nio-8080-exec-5] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.AutorService.salvar() com argumento[s] = [com.example.demo.model.Autor@5800f653]
2024-11-07 14:44:37 [http-nio-8080-exec-5] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: org.springframework.data.repository.CrudRepository.save() com argumento[s] = [com.example.demo.model.Autor@5800f653]
2024-11-07 14:44:37 [http-nio-8080-exec-5] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: org.springframework.data.repository.CrudRepository.save() com resultado = com.example.demo.model.Autor@5800f653
2024-11-07 14:44:37 [http-nio-8080-exec-5] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.AutorService.salvar() com resultado = com.example.demo.model.Autor@5800f653
2024-11-07 14:44:37 [http-nio-8080-exec-5] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.controller.AutorController.cadastrar() com resultado = <201 CREATED Created,[]>
2024-11-07 14:44:46 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /autor/listar
2024-11-07 14:44:46 [http-nio-8080-exec-6] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com argumento[s] = [admin]
2024-11-07 14:44:46 [http-nio-8080-exec-6] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.repository.UsuarioRepository.findByUsername() com argumento[s] = [admin]
2024-11-07 14:44:46 [http-nio-8080-exec-6] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.repository.UsuarioRepository.findByUsername() com resultado = Optional[com.example.demo.model.Usuario@3e873aff]
2024-11-07 14:44:46 [http-nio-8080-exec-6] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com resultado = com.example.demo.model.Usuario@3e873aff
2024-11-07 14:44:46 [http-nio-8080-exec-6] INFO  c.e.d.s.JwtAuthenticationFilter - Usuário autenticado: admin
2024-11-07 14:44:46 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /autor/listar
2024-11-07 14:44:46 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.demo.controller.AutorController.listarTodos(); target is of class [com.example.demo.controller.AutorController]
2024-11-07 14:44:46 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.demo.controller.AutorController.listarTodos(); target is of class [com.example.demo.controller.AutorController]
2024-11-07 14:44:46 [http-nio-8080-exec-6] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.controller.AutorController.listarTodos() com argumento[s] = []
2024-11-07 14:44:46 [http-nio-8080-exec-6] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.AutorService.listarTodos() com argumento[s] = []
2024-11-07 14:44:46 [http-nio-8080-exec-6] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: org.springframework.data.repository.ListCrudRepository.findAll() com argumento[s] = []
2024-11-07 14:44:46 [http-nio-8080-exec-6] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: org.springframework.data.repository.ListCrudRepository.findAll() com resultado = [com.example.demo.model.Autor@3f7f164e, com.example.demo.model.Autor@7a122428, com.example.demo.model.Autor@12417c8a]
2024-11-07 14:44:46 [http-nio-8080-exec-6] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.AutorService.listarTodos() com resultado = [com.example.demo.model.Autor@3f7f164e, com.example.demo.model.Autor@7a122428, com.example.demo.model.Autor@12417c8a]
2024-11-07 14:44:46 [http-nio-8080-exec-6] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.controller.AutorController.listarTodos() com resultado = <200 OK OK,[com.example.demo.model.Autor@3f7f164e, com.example.demo.model.Autor@7a122428, com.example.demo.model.Autor@12417c8a],[]>
2024-11-07 14:44:57 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /autor/buscar/michelle
2024-11-07 14:44:57 [http-nio-8080-exec-7] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com argumento[s] = [admin]
2024-11-07 14:44:57 [http-nio-8080-exec-7] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.repository.UsuarioRepository.findByUsername() com argumento[s] = [admin]
2024-11-07 14:44:57 [http-nio-8080-exec-7] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.repository.UsuarioRepository.findByUsername() com resultado = Optional[com.example.demo.model.Usuario@3c6106a4]
2024-11-07 14:44:57 [http-nio-8080-exec-7] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com resultado = com.example.demo.model.Usuario@3c6106a4
2024-11-07 14:44:57 [http-nio-8080-exec-7] INFO  c.e.d.s.JwtAuthenticationFilter - Usuário autenticado: admin
2024-11-07 14:44:57 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /autor/buscar/michelle
2024-11-07 14:44:57 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.demo.controller.AutorController.buscarPorId(java.lang.String); target is of class [com.example.demo.controller.AutorController]
2024-11-07 14:44:57 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.demo.controller.AutorController.buscarPorId(java.lang.String); target is of class [com.example.demo.controller.AutorController]
2024-11-07 14:44:57 [http-nio-8080-exec-7] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.controller.AutorController.buscarPorId() com argumento[s] = [michelle]
2024-11-07 14:44:57 [http-nio-8080-exec-7] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.AutorService.buscarPorNome() com argumento[s] = [michelle]
2024-11-07 14:44:57 [http-nio-8080-exec-7] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.repository.AutorRepository.findByNomeIgnoreCase() com argumento[s] = [michelle]
2024-11-07 14:44:57 [http-nio-8080-exec-7] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.repository.AutorRepository.findByNomeIgnoreCase() com resultado = Optional[com.example.demo.model.Autor@3fa2a7c2]
2024-11-07 14:44:57 [http-nio-8080-exec-7] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.AutorService.buscarPorNome() com resultado = com.example.demo.model.Autor@3fa2a7c2
2024-11-07 14:44:57 [http-nio-8080-exec-7] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.controller.AutorController.buscarPorId() com resultado = <200 OK OK,com.example.demo.model.Autor@3fa2a7c2,[]>
2024-11-07 14:45:18 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing POST /graphql
2024-11-07 14:45:18 [http-nio-8080-exec-8] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com argumento[s] = [admin]
2024-11-07 14:45:18 [http-nio-8080-exec-8] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.repository.UsuarioRepository.findByUsername() com argumento[s] = [admin]
2024-11-07 14:45:18 [http-nio-8080-exec-8] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.repository.UsuarioRepository.findByUsername() com resultado = Optional[com.example.demo.model.Usuario@2d1f5a24]
2024-11-07 14:45:18 [http-nio-8080-exec-8] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com resultado = com.example.demo.model.Usuario@2d1f5a24
2024-11-07 14:45:18 [http-nio-8080-exec-8] INFO  c.e.d.s.JwtAuthenticationFilter - Usuário autenticado: admin
2024-11-07 14:45:18 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured POST /graphql
2024-11-07 14:45:18 [http-nio-8080-exec-8] DEBUG o.s.g.s.webmvc.GraphQlHttpHandler - Executing: document='{
  listarLivros {
    id
    titulo
    autores {
      id
      nome
      biografia
    }
    genero {
      id
      nome
    }
  }
}', id=5e3e7c43-9ca2-6380-4fc5-99a202ef494f, Locale=pt_BR
2024-11-07 14:45:18 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.util.List com.example.demo.controller.LivroGraphQLController.listarLivros(); target is of class [com.example.demo.controller.LivroGraphQLController]
2024-11-07 14:45:18 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.util.List com.example.demo.controller.LivroGraphQLController.listarLivros(); target is of class [com.example.demo.controller.LivroGraphQLController]
2024-11-07 14:45:18 [http-nio-8080-exec-8] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.controller.LivroGraphQLController.listarLivros() com argumento[s] = []
2024-11-07 14:45:18 [http-nio-8080-exec-8] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.LivroService.listarLivros() com argumento[s] = []
2024-11-07 14:45:18 [http-nio-8080-exec-8] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: org.springframework.data.repository.ListCrudRepository.findAll() com argumento[s] = []
2024-11-07 14:45:18 [http-nio-8080-exec-8] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: org.springframework.data.repository.ListCrudRepository.findAll() com resultado = [com.example.demo.model.Livro@55d38aa2, com.example.demo.model.Livro@c70fcb7]
2024-11-07 14:45:18 [http-nio-8080-exec-8] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.LivroService.listarLivros() com resultado = [com.example.demo.model.Livro@55d38aa2, com.example.demo.model.Livro@c70fcb7]
2024-11-07 14:45:18 [http-nio-8080-exec-8] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.controller.LivroGraphQLController.listarLivros() com resultado = [com.example.demo.model.Livro@55d38aa2, com.example.demo.model.Livro@c70fcb7]
2024-11-07 14:45:18 [http-nio-8080-exec-8] DEBUG o.s.g.s.webmvc.GraphQlHttpHandler - Execution result is ready.
2024-11-07 14:46:31 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /graphql
2024-11-07 14:46:31 [http-nio-8080-exec-1] ERROR c.e.d.s.JwtAuthenticationFilter - Não foi possível obter o username do token
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2024-10-29T04:07:29Z. Current time: 2024-11-07T17:46:31Z, a difference of 826742187 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.example.demo.security.JwtTokenUtil.getAllClaimsFromToken(JwtTokenUtil.java:72)
	at com.example.demo.security.JwtTokenUtil.getClaimFromToken(JwtTokenUtil.java:64)
	at com.example.demo.security.JwtTokenUtil.getUsernameFromToken(JwtTokenUtil.java:46)
	at com.example.demo.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:51)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-11-07 14:46:31 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2024-11-07 14:46:31 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /error
2024-11-07 14:46:31 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2024-11-07 14:46:36 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing POST /graphql
2024-11-07 14:46:36 [http-nio-8080-exec-2] ERROR c.e.d.s.JwtAuthenticationFilter - Não foi possível obter o username do token
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2024-10-29T04:07:29Z. Current time: 2024-11-07T17:46:36Z, a difference of 826747063 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.example.demo.security.JwtTokenUtil.getAllClaimsFromToken(JwtTokenUtil.java:72)
	at com.example.demo.security.JwtTokenUtil.getClaimFromToken(JwtTokenUtil.java:64)
	at com.example.demo.security.JwtTokenUtil.getUsernameFromToken(JwtTokenUtil.java:46)
	at com.example.demo.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:51)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-11-07 14:46:36 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2024-11-07 14:46:36 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing POST /error
2024-11-07 14:46:36 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2024-11-07 14:47:29 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing POST /graphql
2024-11-07 14:47:29 [http-nio-8080-exec-3] ERROR c.e.d.s.JwtAuthenticationFilter - Não foi possível obter o username do token
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2024-10-29T04:07:29Z. Current time: 2024-11-07T17:47:29Z, a difference of 826800802 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.example.demo.security.JwtTokenUtil.getAllClaimsFromToken(JwtTokenUtil.java:72)
	at com.example.demo.security.JwtTokenUtil.getClaimFromToken(JwtTokenUtil.java:64)
	at com.example.demo.security.JwtTokenUtil.getUsernameFromToken(JwtTokenUtil.java:46)
	at com.example.demo.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:51)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-11-07 14:47:29 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2024-11-07 14:47:29 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing POST /error
2024-11-07 14:47:29 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2024-11-07 14:48:17 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing POST /graphql
2024-11-07 14:48:17 [http-nio-8080-exec-4] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com argumento[s] = [admin]
2024-11-07 14:48:17 [http-nio-8080-exec-4] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.repository.UsuarioRepository.findByUsername() com argumento[s] = [admin]
2024-11-07 14:48:17 [http-nio-8080-exec-4] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.repository.UsuarioRepository.findByUsername() com resultado = Optional[com.example.demo.model.Usuario@19f40bec]
2024-11-07 14:48:17 [http-nio-8080-exec-4] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.CustomUserDetailsService.loadUserByUsername() com resultado = com.example.demo.model.Usuario@19f40bec
2024-11-07 14:48:17 [http-nio-8080-exec-4] INFO  c.e.d.s.JwtAuthenticationFilter - Usuário autenticado: admin
2024-11-07 14:48:17 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured POST /graphql
2024-11-07 14:48:17 [http-nio-8080-exec-4] DEBUG o.s.g.s.webmvc.GraphQlHttpHandler - Executing: document='mutation {
  cadastrarGenero(nome: "Ficção") {
    nome
  }
}', id=d316e0e3-1eff-3248-2d26-43a2ae4e9405, Locale=pt_BR
2024-11-07 14:48:17 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public com.example.demo.model.Genero com.example.demo.controller.LivroGraphQLController.cadastrarGenero(java.lang.String); target is of class [com.example.demo.controller.LivroGraphQLController]
2024-11-07 14:48:17 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public com.example.demo.model.Genero com.example.demo.controller.LivroGraphQLController.cadastrarGenero(java.lang.String); target is of class [com.example.demo.controller.LivroGraphQLController]
2024-11-07 14:48:17 [http-nio-8080-exec-4] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.controller.LivroGraphQLController.cadastrarGenero() com argumento[s] = [Ficção]
2024-11-07 14:48:17 [http-nio-8080-exec-4] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.GeneroService.criarGenero() com argumento[s] = [Ficção]
2024-11-07 14:48:17 [http-nio-8080-exec-4] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.GeneroService.criarGenero() com resultado = com.example.demo.model.Genero@489f5067
2024-11-07 14:48:17 [http-nio-8080-exec-4] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: com.example.demo.service.GeneroService.salvar() com argumento[s] = [com.example.demo.model.Genero@489f5067]
2024-11-07 14:48:17 [http-nio-8080-exec-4] DEBUG c.example.demo.aspect.LoggingAspect - Entrando: org.springframework.data.repository.CrudRepository.save() com argumento[s] = [com.example.demo.model.Genero@489f5067]
2024-11-07 14:48:17 [http-nio-8080-exec-4] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: org.springframework.data.repository.CrudRepository.save() com resultado = com.example.demo.model.Genero@489f5067
2024-11-07 14:48:17 [http-nio-8080-exec-4] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.service.GeneroService.salvar() com resultado = com.example.demo.model.Genero@489f5067
2024-11-07 14:48:17 [http-nio-8080-exec-4] DEBUG c.example.demo.aspect.LoggingAspect - Saindo: com.example.demo.controller.LivroGraphQLController.cadastrarGenero() com resultado = com.example.demo.model.Genero@489f5067
2024-11-07 14:48:17 [http-nio-8080-exec-4] DEBUG o.s.g.s.webmvc.GraphQlHttpHandler - Execution result is ready.
2024-11-07 17:29:17 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h14m18s845ms711µs900ns).
2024-11-07 23:41:39 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=6h11m51s596ms914µs600ns).
